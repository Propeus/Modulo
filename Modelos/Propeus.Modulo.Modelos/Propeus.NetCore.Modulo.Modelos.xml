<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Propeus.Modulo.Modelos</name>
    </assembly>
    <members>
        <member name="T:Propeus.Modulo.Modelos.Atributos.ModuloAttribute">
            <summary>
            Identificador de extremidade de um modulo
            </summary>
        </member>
        <member name="T:Propeus.Modulo.Modelos.Atributos.ModuloAutoInicializavelAttribute">
            <summary>
            Indica se o modulo marcado deve ser inicializado após o mapeamento 
            </summary>
        </member>
        <member name="T:Propeus.Modulo.Modelos.Atributos.ModuloContratoAttribute">
            <summary>
            Atributo de identificação de modulo.
            </summary>
        </member>
        <member name="M:Propeus.Modulo.Modelos.Atributos.ModuloContratoAttribute.#ctor(System.String)">
            <summary>
            Indica a qual modulo o contrato pertence
            </summary>
            <param name="nome">Nome do modulo</param>
        </member>
        <member name="M:Propeus.Modulo.Modelos.Atributos.ModuloContratoAttribute.#ctor(System.Type)">
            <summary>
            Indica a qual modulo o contrato pertence
            </summary>
            <param name="modulo">Tipo do modulo</param>
        </member>
        <member name="P:Propeus.Modulo.Modelos.Atributos.ModuloContratoAttribute.Nome">
            <summary>
            Nome do modulo
            </summary>
        </member>
        <member name="T:Propeus.Modulo.Modelos.Atributos.ModuloOpcionalAttribute">
            <summary>
            Informa se o modulo atual é opcional a sua instancia
            </summary>
        </member>
        <member name="T:Propeus.Modulo.Modelos.BaseModelo">
            <summary>
            Classe com o modelo base para todo o projeto
            </summary>
        </member>
        <member name="M:Propeus.Modulo.Modelos.BaseModelo.#ctor">
            <summary>
            Inicia um modelo basico
            </summary>
        </member>
        <member name="M:Propeus.Modulo.Modelos.BaseModelo.#ctor(System.String)">
            <summary>
            Inicia um modelo com um nome customizado
            </summary>
            <param name="nome">Nome do modelo</param>
        </member>
        <member name="P:Propeus.Modulo.Modelos.BaseModelo.Versao">
            <summary>
            Versão do assembly onde o modulo foi carregado. {Maj}.{Min}.{Build}
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.BaseModelo.Disposed">
            <summary>
            Informa se as refencias já foram liberadas do objeto.
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.BaseModelo.Estado">
            <summary>
            Representa o estado do objeto. É definido inicialmente como 1 (iniciado) ou 0 (disposed), podendo ser alterado pelo usuario final ou pela regra de negocio
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.BaseModelo.Nome">
            <summary>
            Representação amigavel do ojeto. Caso seja nulo o nome da classe herdado será informado na propriedade.
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.BaseModelo.Id">
            <summary>
            Representação alfanumerica e unica do objeto.
            </summary>
        </member>
        <member name="M:Propeus.Modulo.Modelos.BaseModelo.ToString">
            <summary>
            Exibe informações basicas sobre o modelo
            </summary>
            <returns></returns>
        </member>
        <member name="T:Propeus.Modulo.Modelos.Constantes.Helper">
            <summary>
            Classe estatica para ajuda
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.Constantes.Helper.MetodoInstancia">
            <summary>
            Constante para identificação de metodo para criação de instancias
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.Constantes.Helper.MetodoConfiguracao">
            <summary>
            Constante para identifcação de metodo para criação de configurações
            </summary>
        </member>
        <member name="T:Propeus.Modulo.Modelos.Delegates.Evento">
            <summary>
            Delegate base para invocação de eventos
            </summary>
            <param name="args">Argumento qualquer</param>
        </member>
        <member name="T:Propeus.Modulo.Modelos.Enums.EstadoEnums">
            <summary>
            Informa o estado do modulo
            </summary>
        </member>
        <member name="F:Propeus.Modulo.Modelos.Enums.EstadoEnums.Desligado">
            <summary>
            Define que o modulo foi eliminado pelo gerenciador ou foi chamado o <see cref="T:System.IDisposable"/> externamente
            </summary>
        </member>
        <member name="F:Propeus.Modulo.Modelos.Enums.EstadoEnums.Inicializado">
            <summary>
            Define que o modulo foi inicializado com sucesso.
            </summary>
        </member>
        <member name="F:Propeus.Modulo.Modelos.Enums.EstadoEnums.Erro">
            <summary>
            Define que durante a execução do modulo acionado alguma <see cref="T:System.Exception"/>
            </summary>
        </member>
        <member name="F:Propeus.Modulo.Modelos.Enums.EstadoEnums.DesligamentoForcado">
            <summary>
            Define que durante o desligamento do modulo houve alguma exceção
            </summary>
        </member>
        <member name="T:Propeus.Modulo.Modelos.Helpers.Attributes.Helper">
            <summary>
            Classe estatica para ajuda
            </summary>
        </member>
        <member name="M:Propeus.Modulo.Modelos.Helpers.Attributes.Helper.ObterModuloAtributo(System.Object)">
            <summary>
            Obtem o atributo <see cref="T:Propeus.Modulo.Modelos.Atributos.ModuloAttribute"/> de um objeto
            </summary>
            <param name="objeto">Qualquer objeto do tipo <see cref="T:System.Object"/></param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">Argumeto obj vazio ou nulo</exception>
            <exception cref="T:System.InvalidOperationException"><see cref="T:Propeus.Modulo.Modelos.Atributos.ModuloAttribute"/> não encontrado</exception>
        </member>
        <member name="M:Propeus.Modulo.Modelos.Helpers.Attributes.Helper.ObterModuloAtributo(System.Type)">
            <summary>
            Obtem o atributo <see cref="T:Propeus.Modulo.Modelos.Atributos.ModuloAttribute"/> de um objeto
            </summary>
            <param name="objeto">Qualquer objeto do tipo <see cref="T:System.Type"/></param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">Argumeto obj vazio ou nulo</exception>
            <exception cref="T:System.InvalidOperationException"><see cref="T:Propeus.Modulo.Modelos.Atributos.ModuloAttribute"/> não encontrado</exception>
        </member>
        <member name="M:Propeus.Modulo.Modelos.Helpers.Attributes.Helper.ObterModuloContratoAtributo(System.Object)">
            <summary>
            Obtem o atributo <see cref="T:Propeus.Modulo.Modelos.Atributos.ModuloContratoAttribute"/> de um objeto
            </summary>
            <param name="objeto">Qualquer objeto do tipo <see cref="T:System.Object"/></param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">Argumeto obj vazio ou nulo</exception>
            <exception cref="T:System.InvalidOperationException"><see cref="T:Propeus.Modulo.Modelos.Atributos.ModuloContratoAttribute"/> não encontrado</exception>
        </member>
        <member name="M:Propeus.Modulo.Modelos.Helpers.Attributes.Helper.ObterModuloContratoAtributo(System.Type)">
            <summary>
            Obtem o atributo <see cref="T:Propeus.Modulo.Modelos.Atributos.ModuloContratoAttribute"/> de um objeto
            </summary>
            <param name="objeto">Qualquer objeto do tipo <see cref="T:System.Type"/></param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">Argumeto obj vazio ou nulo</exception>
            <exception cref="T:System.InvalidOperationException"><see cref="T:Propeus.Modulo.Modelos.Atributos.ModuloContratoAttribute"/> não encontrado</exception>
        </member>
        <member name="M:Propeus.Modulo.Modelos.Helpers.Attributes.Helper.ObterTipoPorModuloContratoAtributo(System.Type)">
            <summary>
            Obtem o <see cref="T:System.Type"/> do modulo utilizando o atributo <see cref="T:Propeus.Modulo.Modelos.Atributos.ModuloContratoAttribute"/>
            </summary>
            <param name="objeto">Tipo do objeto com o atributo <see cref="T:Propeus.Modulo.Modelos.Atributos.ModuloContratoAttribute"/></param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">Argumeto obj vazio ou nulo</exception>
            <exception cref="T:System.InvalidOperationException">Contrato</exception>
        </member>
        <member name="T:Propeus.Modulo.Modelos.Interfaces.IBaseEvento">
            <summary>
            Interface base para utilização de eventos
            </summary>
        </member>
        <member name="E:Propeus.Modulo.Modelos.Interfaces.IBaseEvento.OnEvento">
            <summary>
            Evento base para qualquer ação não especificado
            </summary>
        </member>
        <member name="T:Propeus.Modulo.Modelos.Interfaces.IBaseModelo">
            <summary>
            Modelo base para todos os objetos do projeto
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.Interfaces.IBaseModelo.Versao">
            <summary>
            Versao do modelo
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.Interfaces.IBaseModelo.Disposed">
            <summary>
            Informa se as refencias já foram liberadas do objeto.
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.Interfaces.IBaseModelo.Estado">
            <summary>
            Representa o estado do objeto.
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.Interfaces.IBaseModelo.Nome">
            <summary>
            Representação amigavel do ojeto. 
            <para>
            Caso seja nulo o nome da classe herdado será informado na propriedade.
            </para>
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.Interfaces.IBaseModelo.Id">
            <summary>
            Representação alfanumerica e unica do objeto.
            </summary>
        </member>
        <member name="T:Propeus.Modulo.Modelos.Interfaces.IGerenciador">
            <summary>
            Modelo base para criação de gerenciadores
            </summary>
        </member>
        <member name="M:Propeus.Modulo.Modelos.Interfaces.IGerenciador.Criar``1(System.Object[])">
            <summary>
            Cria uma nova instancia do modulo <typeparamref name="T"/>
            </summary>
            <typeparam name="T">Qualquer tipo herdado de <see cref="T:Propeus.Modulo.Modelos.Interfaces.IModulo"/></typeparam>
            <param name="args">Qualquer argumento necessário para o contrutor </param>
            <returns></returns>
        </member>
        <member name="M:Propeus.Modulo.Modelos.Interfaces.IGerenciador.Criar(System.Type,System.Object[])">
            <summary>
            Cria uma nova instancia do modulo usando o tipo do parametro <paramref name="modulo"/>
            </summary>
            <param name="modulo"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Propeus.Modulo.Modelos.Interfaces.IGerenciador.Criar(System.String,System.Object[])">
            <summary>
            Cria uma nova instancia do modulo buscando o tipo pelo nome
            </summary>
            <param name="nomeModulo">Nome do modulo</param>
            <param name="args">Argumentos a serem enviadoss</param>
            <returns></returns>
        </member>
        <member name="M:Propeus.Modulo.Modelos.Interfaces.IGerenciador.Remover(System.String)">
            <summary>
            Remove um modulo pelo seu ID
            </summary>
            <param name="id">Identificação unica do modulo </param>
        </member>
        <member name="M:Propeus.Modulo.Modelos.Interfaces.IGerenciador.Remover``1(``0)">
            <summary>
            Remove qualquer modulo instanciado
            </summary>
            <typeparam name="T">Qualquer tipo herdado de <see cref="T:Propeus.Modulo.Modelos.Interfaces.IModulo"/></typeparam>
            <param name="modulo">Qualquer modulo herdado de <see cref="T:Propeus.Modulo.Modelos.Interfaces.IModulo"/></param>
        </member>
        <member name="M:Propeus.Modulo.Modelos.Interfaces.IGerenciador.RemoverTodos">
            <summary>
            Remove todos os modulos
            </summary>
        </member>
        <member name="M:Propeus.Modulo.Modelos.Interfaces.IGerenciador.Obter``1">
            <summary>
            Obtem a instancia de <typeparamref name="T"/> caso exista
            <para>Caso exista mais de uma instancia do mesmo tipo, o primeiro modulo sempre será retornado</para>
            </summary>
            <typeparam name="T">Qualquer tipo herdado de <see cref="T:Propeus.Modulo.Modelos.Interfaces.IModulo"/></typeparam>
            <returns></returns>
        </member>
        <member name="M:Propeus.Modulo.Modelos.Interfaces.IGerenciador.Obter(System.Type)">
            <summary>
            Obtem a instancia de <paramref name="type"/> caso exista
            <para>Caso exista mais de uma instancia do mesmo tipo, o primeiro modulo sempre será retornado</para>
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Propeus.Modulo.Modelos.Interfaces.IGerenciador.Obter(System.String)">
            <summary>
            Obtem a instancia do modulo pelo id
            </summary>
            <param name="id">Identificação unica do modulo </param>
            <returns></returns>
        </member>
        <member name="M:Propeus.Modulo.Modelos.Interfaces.IGerenciador.Existe(Propeus.Modulo.Modelos.Interfaces.IModulo)">
            <summary>
            Verifica se a instancia do modulo existe no genrenciador
            </summary>
            <param name="modulo"></param>
            <returns></returns>
        </member>
        <member name="M:Propeus.Modulo.Modelos.Interfaces.IGerenciador.Existe(System.Type)">
            <summary>
            Verifica se existe alguma instancia do tipo no gerenciador
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Propeus.Modulo.Modelos.Interfaces.IGerenciador.Existe(System.String)">
            <summary>
            Verifica se existe alguma instancia com o id no gerenciador
            </summary>
            <param name="id">Identificação unica do modulo </param>
            <returns></returns>
        </member>
        <member name="M:Propeus.Modulo.Modelos.Interfaces.IGerenciador.Reiniciar``1(``0)">
            <summary>
            Realiza uma reciclagem do modulo 
            </summary>
            <typeparam name="T">Qualquer tipo herdado de <see cref="T:Propeus.Modulo.Modelos.Interfaces.IModulo"/></typeparam>
            <param name="modulo"></param>
            <returns></returns>
        </member>
        <member name="M:Propeus.Modulo.Modelos.Interfaces.IGerenciador.Reiniciar(System.String)">
            <summary>
            Realiza uma reciclagem do modulo 
            </summary>
            <param name="id">Identificação unica do modulo </param>
            <returns></returns>
        </member>
        <member name="M:Propeus.Modulo.Modelos.Interfaces.IGerenciador.Listar">
            <summary>
            Lista todos os modulos
            </summary>
            <returns></returns>
        </member>
        <member name="M:Propeus.Modulo.Modelos.Interfaces.IGerenciador.ManterVivoAsync">
            <summary>
            Mantem o gerenciador vivo durante o uso da aplicação
            </summary>
            <returns></returns>
        </member>
        <member name="T:Propeus.Modulo.Modelos.Interfaces.IModulo">
            <summary>
            Modelo base para criação de modulos
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.Interfaces.IModulo.InstanciaUnica">
            <summary>
            Informa se o modulo é instancia unica
            </summary>
        </member>
        <member name="T:Propeus.Modulo.Modelos.Interfaces.IModuloBinario">
            <summary>
            Interface de modelo para obter informações do binario do modulo
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.Interfaces.IModuloBinario.Caminho">
            <summary>
            Caminho onde se encontra o binario do modulo
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.Interfaces.IModuloBinario.Hash">
            <summary>
            Hash do binario do modulo
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.Interfaces.IModuloBinario.Memoria">
            <summary>
            Conteudo do modulo armazenado em memoria
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.Interfaces.IModuloBinario.Modulos">
            <summary>
            Modulos mapeados do binario
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.Interfaces.IModuloBinario.Referencia">
            <summary>
            "Ponteiro" onde se encontra o binario em memoria
            </summary>
        </member>
        <member name="M:Propeus.Modulo.Modelos.Interfaces.IModuloBinario.Registrar(Propeus.Modulo.Modelos.Interfaces.IModuloInformacao)">
            <summary>
            Registra novas informações de modulo.
            </summary>
            <param name="moduloInformarcao"></param>
        </member>
        <member name="M:Propeus.Modulo.Modelos.Interfaces.IModuloBinario.Remover(Propeus.Modulo.Modelos.Interfaces.IModuloInformacao)">
            <summary>
            Remove as informações de modulo.
            </summary>
            <param name="moduloInformarcao"></param>
        </member>
        <member name="T:Propeus.Modulo.Modelos.Interfaces.IModuloInformacao">
            <summary>
            Interface de modelo para detalhar informações sobre o modulo
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.Interfaces.IModuloInformacao.NumeroVersaoAssembly">
            <summary>
            Concatenação da versão 
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.Interfaces.IModuloInformacao.Assembly">
            <summary>
            Assembly a qual o modulo pertence
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.Interfaces.IModuloInformacao.AssemblyName">
            <summary>
            Informações sobre o assembly do modulo
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.Interfaces.IModuloInformacao.Modulos">
            <summary>
            Modulos mapeados do assembly
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.Interfaces.IModuloInformacao.Caminho">
            <summary>
            Caminho do modulo em disco
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.Interfaces.IModuloInformacao.Hash">
            <summary>
            Hash obtido de <see cref="T:Propeus.Modulo.Modelos.ModuloBinario"/>
            </summary>
        </member>
        <member name="M:Propeus.Modulo.Modelos.Interfaces.IModuloInformacao.ObterTipoModulo(System.String)">
            <summary>
            Obtem o tipo do modulo
            </summary>
            <param name="nomeModulo"></param>
            <returns></returns>
        </member>
        <member name="T:Propeus.Modulo.Modelos.Interfaces.IModuloTipo">
            <summary>
            Informa detalhes sobre o modulo instanciado
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.Interfaces.IModuloTipo.Coletado">
            <summary>
            Informa se o modulo foi coletado pelo <see cref="T:System.GC"/>
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.Interfaces.IModuloTipo.Contratos">
            <summary>
            Informa quais interfaces de contrato pertencem ao modulo
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.Interfaces.IModuloTipo.Elimindado">
            <summary>
            Informa se o modulo foi eliminado da aplicação
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.Interfaces.IModuloTipo.IdModulo">
            <summary>
            Informa o id gerado para o modulo instanciado
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.Interfaces.IModuloTipo.InstanciaUnica">
            <summary>
            Informa se o modulo é instancia unica
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.Interfaces.IModuloTipo.Modulo">
            <summary>
            Instancia do modulo
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.Interfaces.IModuloTipo.TipoModulo">
            <summary>
            Tipo do modulo
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.Interfaces.IModuloTipo.TipoModuloDinamico">
            <summary>
            Tipo do modulo gerado automaticamente junto com as intefaces delaclarados na propriedade <see cref="P:Propeus.Modulo.Modelos.Interfaces.IModuloTipo.Contratos"/>
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.Interfaces.IModuloTipo.WeakReference">
            <summary>
            Informações sobre o modulo na visão do <see cref="T:System.GC"/>
            </summary>
        </member>
        <member name="M:Propeus.Modulo.Modelos.Interfaces.IModuloTipo.AdicionarContrato(System.Type)">
            <summary>
            Adiciona uma nova interface de contrato
            </summary>
            <param name="tipo"></param>
            <returns></returns>
        </member>
        <member name="T:Propeus.Modulo.Modelos.Interfaces.IRegra">
            <summary>
            Interface basica para execução de regras de negocio
            </summary>
        </member>
        <member name="M:Propeus.Modulo.Modelos.Interfaces.IRegra.Executar(System.Object[])">
            <summary>
            Função basica para execução de regras de negocio
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:Propeus.Modulo.Modelos.Interfaces.Registro.IGerenciadorRegistro">
            <summary>
            Modelo base para criação de gerenciadores
            </summary>
        </member>
        <member name="M:Propeus.Modulo.Modelos.Interfaces.Registro.IGerenciadorRegistro.Registrar(Propeus.Modulo.Modelos.Interfaces.IModulo)">
            <summary>
            Registra o modulo no gerenciador
            <para>Caso use o <see cref="T:Propeus.Modulo.Modelos.ModuloBase"/>, não será necessário o uso desta função.</para>
            </summary>
            <param name="modulo"></param>
        </member>
        <member name="T:Propeus.Modulo.Modelos.ModuloAssemblyLoadContext">
            <summary>
            AssemblyLoadContext customizado
            </summary>
        </member>
        <member name="M:Propeus.Modulo.Modelos.ModuloAssemblyLoadContext.#ctor">
            <summary>
            Construtor padrão
            </summary>
        </member>
        <member name="T:Propeus.Modulo.Modelos.ModuloBase">
            <summary>
            Classe base para o modulo
            </summary>
        </member>
        <member name="M:Propeus.Modulo.Modelos.ModuloBase.#ctor(Propeus.Modulo.Modelos.Interfaces.IGerenciador,System.Boolean)">
            <summary>
            Inicia um modulo com um gerenciador
            </summary>
            <param name="gerenciador">Gerenciador que irá controlar o modulo</param>
            <param name="instanciaUnica">Informa se a instancia é unica ou multipla</param>
        </member>
        <member name="P:Propeus.Modulo.Modelos.ModuloBase.InstanciaUnica">
            <summary>
            Informa se o modulo é instancia unica
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.ModuloBase.Gerenciador">
            <summary>
            Gerenciador que está manipulando o modulo
            </summary>
        </member>
        <member name="T:Propeus.Modulo.Modelos.ModuloBinario">
            <summary>
            Modelo para obter informações do binario do modulo
            </summary>
        </member>
        <member name="M:Propeus.Modulo.Modelos.ModuloBinario.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="caminho">Caminho fisico do modulo (dll)</param>
        </member>
        <member name="P:Propeus.Modulo.Modelos.ModuloBinario.Caminho">
            <summary>
            Caminho onde se encontra o binario do modulo
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.ModuloBinario.Memoria">
            <summary>
            Conteudo do modulo armazenado em memoria
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.ModuloBinario.Hash">
            <summary>
            Hash do binario do modulo
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.ModuloBinario.Modulos">
            <summary>
            Modulos mapeados do binario
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.ModuloBinario.Referencia">
            <summary>
            "Ponteiro" onde se encontra o binario em memoria
            </summary>
        </member>
        <member name="M:Propeus.Modulo.Modelos.ModuloBinario.Registrar(Propeus.Modulo.Modelos.Interfaces.IModuloInformacao)">
            <summary>
            Registra novas informações de modulo.
            </summary>
            <param name="moduloInformarcao"></param>
        </member>
        <member name="M:Propeus.Modulo.Modelos.ModuloBinario.Remover(Propeus.Modulo.Modelos.Interfaces.IModuloInformacao)">
            <summary>
            Remove as informações de modulo.
            </summary>
            <param name="moduloInformarcao"></param>
        </member>
        <member name="T:Propeus.Modulo.Modelos.ModuloInformacao">
            <summary>
            Modelo para detalhar informações sobre o modulo
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.ModuloInformacao.Assembly">
            <summary>
            Assembly a qual o modulo pertence
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.ModuloInformacao.AssemblyName">
            <summary>
            Informações sobre o assembly do modulo
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.ModuloInformacao.AssemblyLoadContext">
            <summary>
            Contexto do assembly
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.ModuloInformacao.Modulos">
            <summary>
            Modulos mapeados do assembly
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.ModuloInformacao.Caminho">
            <summary>
            Caminho do modulo em disco
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.ModuloInformacao.NumeroVersaoAssembly">
            <summary>
            Obtem o numero de versão do assembly mapeado
            </summary>
        </member>
        <member name="M:Propeus.Modulo.Modelos.ModuloInformacao.PossuiModuloValido(Propeus.Modulo.Modelos.Interfaces.IModuloBinario,Propeus.Modulo.Modelos.Interfaces.IRegra[])">
            <summary>
            Metodo estatico para validação de modulo
            </summary>
            <param name="path"></param>
            <param name="regra"></param>
            <returns></returns>
        </member>
        <member name="M:Propeus.Modulo.Modelos.ModuloInformacao.ObterNomeModulos">
            <summary>
            Obtem os nomes dos modulos mapeados
            </summary>
            <returns></returns>
        </member>
        <member name="T:Propeus.Modulo.Modelos.ModuloTipo">
            <summary>
            Informa detalhes sobre o modulo instanciado
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.ModuloTipo.Coletado">
            <summary>
            Informa se o modulo foi coletado pelo <see cref="T:System.GC"/>
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.ModuloTipo.Elimindado">
            <summary>
            Informa se o modulo foi eliminado da aplicação
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.ModuloTipo.WeakReference">
            <summary>
            Informações sobre o modulo na visão do <see cref="T:System.GC"/>
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.ModuloTipo.Modulo">
            <summary>
            Instancia do modulo
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.ModuloTipo.TipoModulo">
            <summary>
            Tipo do modulo
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.ModuloTipo.InstanciaUnica">
            <summary>
            Informa se o modulo é instancia unica
            </summary>
        </member>
        <member name="T:Propeus.Modulo.Modelos.Resources.Configuracoes">
            <summary>
              Uma classe de recurso de tipo de alta segurança, para pesquisar cadeias de caracteres localizadas etc.
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.Resources.Configuracoes.ResourceManager">
            <summary>
              Retorna a instância de ResourceManager armazenada em cache usada por essa classe.
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.Resources.Configuracoes.Culture">
            <summary>
              Substitui a propriedade CurrentUICulture do thread atual para todas as
              pesquisas de recursos que usam essa classe de recurso de tipo de alta segurança.
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.Resources.Configuracoes.Constantes_MetodoConfiguracao">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a CriarConfiguracao.
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.Resources.Configuracoes.Constantes_MetodoInstancia">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a CriarInstancia.
            </summary>
        </member>
        <member name="T:Propeus.Modulo.Modelos.Resources.MensagensErro">
            <summary>
              Uma classe de recurso de tipo de alta segurança, para pesquisar cadeias de caracteres localizadas etc.
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.Resources.MensagensErro.ResourceManager">
            <summary>
              Retorna a instância de ResourceManager armazenada em cache usada por essa classe.
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.Resources.MensagensErro.Culture">
            <summary>
              Substitui a propriedade CurrentUICulture do thread atual para todas as
              pesquisas de recursos que usam essa classe de recurso de tipo de alta segurança.
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.Resources.MensagensErro.GerenciadorInvalido">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a O gerenciador &apos;{0}&apos; não possui a interface IGerenciadorRegistro implentado..
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.Resources.MensagensErro.ParametroNulo">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a O parametro  &apos;{0}&apos; não pode ser nulo.
            </summary>
        </member>
        <member name="P:Propeus.Modulo.Modelos.Resources.MensagensErro.ParametroNuloOuVazio">
            <summary>
              Consulta uma cadeia de caracteres localizada semelhante a O parametro  &apos;{0}&apos; não pode ser nulo ou vazio.
            </summary>
        </member>
    </members>
</doc>

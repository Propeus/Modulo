{
  "api/index.html": {
    "href": "api/index.html",
    "title": "PLACEHOLDER",
    "keywords": "PLACEHOLDER TODO: Add .NET projects to the src folder and run docfx to generate REAL API Documentation!"
  },
  "api/Propeus.Modulo.Abstrato.Attributes.html": {
    "href": "api/Propeus.Modulo.Abstrato.Attributes.html",
    "title": "Namespace Propeus.Modulo.Abstrato.Attributes",
    "keywords": "Namespace Propeus.Modulo.Abstrato.Attributes Classes ModuleAttribute Identifier de extremidade de um modulo ModuleContractAttribute Atributo de identificação de moduleType."
  },
  "api/Propeus.Modulo.Abstrato.Attributes.ModuleAttribute.-ctor.html": {
    "href": "api/Propeus.Modulo.Abstrato.Attributes.ModuleAttribute.-ctor.html",
    "title": "Constructor ModuleAttribute",
    "keywords": "Constructor ModuleAttribute Namespace Propeus.Modulo.Abstrato.Attributes Assembly Propeus.Modulo.Abstrato.dll ModuleAttribute() public ModuleAttribute()"
  },
  "api/Propeus.Modulo.Abstrato.Attributes.ModuleAttribute.AutoStartable.html": {
    "href": "api/Propeus.Modulo.Abstrato.Attributes.ModuleAttribute.AutoStartable.html",
    "title": "Property AutoStartable",
    "keywords": "Property AutoStartable Namespace Propeus.Modulo.Abstrato.Attributes Assembly Propeus.Modulo.Abstrato.dll AutoStartable Indica se o modulo e autoinicializavel public bool AutoStartable { get; set; } Property Value bool"
  },
  "api/Propeus.Modulo.Abstrato.Attributes.ModuleAttribute.AutoUpdate.html": {
    "href": "api/Propeus.Modulo.Abstrato.Attributes.ModuleAttribute.AutoUpdate.html",
    "title": "Property AutoUpdate",
    "keywords": "Property AutoUpdate Namespace Propeus.Modulo.Abstrato.Attributes Assembly Propeus.Modulo.Abstrato.dll AutoUpdate Indica se deve ser recriado todas as instancias do modulo, caso a DLL seja alterada public bool AutoUpdate { get; set; } Property Value bool"
  },
  "api/Propeus.Modulo.Abstrato.Attributes.ModuleAttribute.html": {
    "href": "api/Propeus.Modulo.Abstrato.Attributes.ModuleAttribute.html",
    "title": "Class ModuleAttribute",
    "keywords": "Class ModuleAttribute Namespace Propeus.Modulo.Abstrato.Attributes Assembly Propeus.Modulo.Abstrato.dll Identifier de extremidade de um modulo [AttributeUsage(AttributeTargets.Class, AllowMultiple = false, Inherited = true)] public sealed class ModuleAttribute : Attribute Inheritance object Attribute ModuleAttribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.GetType() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Extension Methods Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Constructors ModuleAttribute() Properties AutoStartable Indica se o modulo e autoinicializavel AutoUpdate Indica se deve ser recriado todas as instancias do modulo, caso a DLL seja alterada"
  },
  "api/Propeus.Modulo.Abstrato.Attributes.ModuleContractAttribute.-ctor.html": {
    "href": "api/Propeus.Modulo.Abstrato.Attributes.ModuleContractAttribute.-ctor.html",
    "title": "Constructor ModuleContractAttribute",
    "keywords": "Constructor ModuleContractAttribute Namespace Propeus.Modulo.Abstrato.Attributes Assembly Propeus.Modulo.Abstrato.dll ModuleContractAttribute(string) Indica a qual moduleType o contrato pertence public ModuleContractAttribute(string moduleName) Parameters moduleName string ModuleName do moduleType ModuleContractAttribute(Type) Indica a qual moduleType o contrato pertence public ModuleContractAttribute(Type moduleType) Parameters moduleType Type ModuleType do moduleType"
  },
  "api/Propeus.Modulo.Abstrato.Attributes.ModuleContractAttribute.html": {
    "href": "api/Propeus.Modulo.Abstrato.Attributes.ModuleContractAttribute.html",
    "title": "Class ModuleContractAttribute",
    "keywords": "Class ModuleContractAttribute Namespace Propeus.Modulo.Abstrato.Attributes Assembly Propeus.Modulo.Abstrato.dll Atributo de identificação de moduleType. [AttributeUsage(AttributeTargets.Interface, AllowMultiple = false, Inherited = false)] public sealed class ModuleContractAttribute : Attribute Inheritance object Attribute ModuleContractAttribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.GetType() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Extension Methods Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Constructors ModuleContractAttribute(string) Indica a qual moduleType o contrato pertence ModuleContractAttribute(Type) Indica a qual moduleType o contrato pertence Properties IsValid Indica se o atributo possui os parametros necessarios ModuleName ModuleName do moduleType ModuleType ModuleType do moduleType"
  },
  "api/Propeus.Modulo.Abstrato.Attributes.ModuleContractAttribute.IsValid.html": {
    "href": "api/Propeus.Modulo.Abstrato.Attributes.ModuleContractAttribute.IsValid.html",
    "title": "Property IsValid",
    "keywords": "Property IsValid Namespace Propeus.Modulo.Abstrato.Attributes Assembly Propeus.Modulo.Abstrato.dll IsValid Indica se o atributo possui os parametros necessarios public bool IsValid { get; } Property Value bool"
  },
  "api/Propeus.Modulo.Abstrato.Attributes.ModuleContractAttribute.ModuleName.html": {
    "href": "api/Propeus.Modulo.Abstrato.Attributes.ModuleContractAttribute.ModuleName.html",
    "title": "Property ModuleName",
    "keywords": "Property ModuleName Namespace Propeus.Modulo.Abstrato.Attributes Assembly Propeus.Modulo.Abstrato.dll ModuleName ModuleName do moduleType public string ModuleName { get; } Property Value string"
  },
  "api/Propeus.Modulo.Abstrato.Attributes.ModuleContractAttribute.ModuleType.html": {
    "href": "api/Propeus.Modulo.Abstrato.Attributes.ModuleContractAttribute.ModuleType.html",
    "title": "Property ModuleType",
    "keywords": "Property ModuleType Namespace Propeus.Modulo.Abstrato.Attributes Assembly Propeus.Modulo.Abstrato.dll ModuleType ModuleType do moduleType public Type ModuleType { get; } Property Value Type Remarks Esta propriedade e opcional e sera preenchida somente quando o tipo for informado no construtor do atributo"
  },
  "api/Propeus.Modulo.Abstrato.BaseModel.-ctor.html": {
    "href": "api/Propeus.Modulo.Abstrato.BaseModel.-ctor.html",
    "title": "Constructor BaseModel",
    "keywords": "Constructor BaseModel Namespace Propeus.Modulo.Abstrato Assembly Propeus.Modulo.Abstrato.dll BaseModel() Inicia um modelo basico protected BaseModel()"
  },
  "api/Propeus.Modulo.Abstrato.BaseModel.Dispose.html": {
    "href": "api/Propeus.Modulo.Abstrato.BaseModel.Dispose.html",
    "title": "Method Dispose",
    "keywords": "Method Dispose Namespace Propeus.Modulo.Abstrato Assembly Propeus.Modulo.Abstrato.dll Dispose(bool) Libera os objetos deste modelo e altera o estado dele para Off protected virtual void Dispose(bool disposing) Parameters disposing bool Indica se deve alterar o estado do objeto para Off Dispose() public void Dispose()"
  },
  "api/Propeus.Modulo.Abstrato.BaseModel.disposedValue.html": {
    "href": "api/Propeus.Modulo.Abstrato.BaseModel.disposedValue.html",
    "title": "Field disposedValue",
    "keywords": "Field disposedValue Namespace Propeus.Modulo.Abstrato Assembly Propeus.Modulo.Abstrato.dll Para detectar chamadas redundantes protected bool disposedValue Returns bool"
  },
  "api/Propeus.Modulo.Abstrato.BaseModel.html": {
    "href": "api/Propeus.Modulo.Abstrato.BaseModel.html",
    "title": "Class BaseModel",
    "keywords": "Class BaseModel Namespace Propeus.Modulo.Abstrato Assembly Propeus.Modulo.Abstrato.dll Classe com o modelo base para o projeto public abstract class BaseModel : IBaseModel, IDisposable Inheritance object BaseModel Implements IBaseModel IDisposable Derived BaseModule ModuleManager Inherited Members object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Constructors BaseModel() Inicia um modelo basico Fields disposedValue Para detectar chamadas redundantes Properties Id Representação alfanumerica e unica do objeto. ManifestId Guid do Assembly atual Name Representação amigavel do ojeto. Caso seja nulo o nome da classe herdado será informado na propriedade. State Representa o estado do objeto. Version Version do modelo Methods Dispose() Dispose(bool) Libera os objetos deste modelo e altera o estado dele para Off ToString() Exibe informações basicas sobre o modelo"
  },
  "api/Propeus.Modulo.Abstrato.BaseModel.Id.html": {
    "href": "api/Propeus.Modulo.Abstrato.BaseModel.Id.html",
    "title": "Property Id",
    "keywords": "Property Id Namespace Propeus.Modulo.Abstrato Assembly Propeus.Modulo.Abstrato.dll Id Representação alfanumerica e unica do objeto. public string Id { get; } Property Value string"
  },
  "api/Propeus.Modulo.Abstrato.BaseModel.ManifestId.html": {
    "href": "api/Propeus.Modulo.Abstrato.BaseModel.ManifestId.html",
    "title": "Property ManifestId",
    "keywords": "Property ManifestId Namespace Propeus.Modulo.Abstrato Assembly Propeus.Modulo.Abstrato.dll ManifestId Guid do Assembly atual public string ManifestId { get; } Property Value string"
  },
  "api/Propeus.Modulo.Abstrato.BaseModel.Name.html": {
    "href": "api/Propeus.Modulo.Abstrato.BaseModel.Name.html",
    "title": "Property Name",
    "keywords": "Property Name Namespace Propeus.Modulo.Abstrato Assembly Propeus.Modulo.Abstrato.dll Name Representação amigavel do ojeto. Caso seja nulo o nome da classe herdado será informado na propriedade. public string Name { get; protected set; } Property Value string"
  },
  "api/Propeus.Modulo.Abstrato.BaseModel.State.html": {
    "href": "api/Propeus.Modulo.Abstrato.BaseModel.State.html",
    "title": "Property State",
    "keywords": "Property State Namespace Propeus.Modulo.Abstrato Assembly Propeus.Modulo.Abstrato.dll State Representa o estado do objeto. public State State { get; set; } Property Value State"
  },
  "api/Propeus.Modulo.Abstrato.BaseModel.ToString.html": {
    "href": "api/Propeus.Modulo.Abstrato.BaseModel.ToString.html",
    "title": "Method ToString",
    "keywords": "Method ToString Namespace Propeus.Modulo.Abstrato Assembly Propeus.Modulo.Abstrato.dll ToString() Exibe informações basicas sobre o modelo public override string ToString() Returns string"
  },
  "api/Propeus.Modulo.Abstrato.BaseModel.Version.html": {
    "href": "api/Propeus.Modulo.Abstrato.BaseModel.Version.html",
    "title": "Property Version",
    "keywords": "Property Version Namespace Propeus.Modulo.Abstrato Assembly Propeus.Modulo.Abstrato.dll Version Version do modelo public virtual string Version { get; } Property Value string"
  },
  "api/Propeus.Modulo.Abstrato.BaseModule.-ctor.html": {
    "href": "api/Propeus.Modulo.Abstrato.BaseModule.-ctor.html",
    "title": "Constructor BaseModule",
    "keywords": "Constructor BaseModule Namespace Propeus.Modulo.Abstrato Assembly Propeus.Modulo.Abstrato.dll BaseModule(bool) Inicializa um modulo protected BaseModule(bool isSingleInstance = false) Parameters isSingleInstance bool Informa se a instancia é unica ou multipla"
  },
  "api/Propeus.Modulo.Abstrato.BaseModule.html": {
    "href": "api/Propeus.Modulo.Abstrato.BaseModule.html",
    "title": "Class BaseModule",
    "keywords": "Class BaseModule Namespace Propeus.Modulo.Abstrato Assembly Propeus.Modulo.Abstrato.dll Classe base para o modulo public abstract class BaseModule : BaseModel, IModule, IBaseModel, IDisposable Inheritance object BaseModel BaseModule Implements IModule IBaseModel IDisposable Derived ModuleManager ListenerModule ModuleWatcherModule ModuloControllerBase BackgroundServiceModulo Inherited Members BaseModel.disposedValue BaseModel.Dispose(bool) BaseModel.Dispose() BaseModel.Version BaseModel.State BaseModel.Name BaseModel.Id BaseModel.ManifestId object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Constructors BaseModule(bool) Inicializa um modulo Properties IsSingleInstance Informa se o modulo é instancia unica Methods ToString() Exibe informacoes basicas sobre o modulo"
  },
  "api/Propeus.Modulo.Abstrato.BaseModule.IsSingleInstance.html": {
    "href": "api/Propeus.Modulo.Abstrato.BaseModule.IsSingleInstance.html",
    "title": "Property IsSingleInstance",
    "keywords": "Property IsSingleInstance Namespace Propeus.Modulo.Abstrato Assembly Propeus.Modulo.Abstrato.dll IsSingleInstance Informa se o modulo é instancia unica public bool IsSingleInstance { get; } Property Value bool"
  },
  "api/Propeus.Modulo.Abstrato.BaseModule.ToString.html": {
    "href": "api/Propeus.Modulo.Abstrato.BaseModule.ToString.html",
    "title": "Method ToString",
    "keywords": "Method ToString Namespace Propeus.Modulo.Abstrato Assembly Propeus.Modulo.Abstrato.dll ToString() Exibe informacoes basicas sobre o modulo public override string ToString() Returns string"
  },
  "api/Propeus.Modulo.Abstrato.Constantes.ERRO_CONSTRUTOR_NAO_ENCONTRADO.html": {
    "href": "api/Propeus.Modulo.Abstrato.Constantes.ERRO_CONSTRUTOR_NAO_ENCONTRADO.html",
    "title": "Field ERRO_CONSTRUTOR_NAO_ENCONTRADO",
    "keywords": "Field ERRO_CONSTRUTOR_NAO_ENCONTRADO Namespace Propeus.Modulo.Abstrato Assembly Propeus.Modulo.Abstrato.dll Nenhum construtor publico foi encontrado public const string ERRO_CONSTRUTOR_NAO_ENCONTRADO = \"Não foi possivel encontrar um construtor\" Returns string"
  },
  "api/Propeus.Modulo.Abstrato.Constantes.ERRO_MODULO_ID_DESCARTADO.html": {
    "href": "api/Propeus.Modulo.Abstrato.Constantes.ERRO_MODULO_ID_DESCARTADO.html",
    "title": "Field ERRO_MODULO_ID_DESCARTADO",
    "keywords": "Field ERRO_MODULO_ID_DESCARTADO Namespace Propeus.Modulo.Abstrato Assembly Propeus.Modulo.Abstrato.dll O modulo foi descartado public const string ERRO_MODULO_ID_DESCARTADO = \"Module '{0}' foi descartado.\" Returns string"
  },
  "api/Propeus.Modulo.Abstrato.Constantes.ERRO_MODULO_ID_NAO_ENCONTRADO.html": {
    "href": "api/Propeus.Modulo.Abstrato.Constantes.ERRO_MODULO_ID_NAO_ENCONTRADO.html",
    "title": "Field ERRO_MODULO_ID_NAO_ENCONTRADO",
    "keywords": "Field ERRO_MODULO_ID_NAO_ENCONTRADO Namespace Propeus.Modulo.Abstrato Assembly Propeus.Modulo.Abstrato.dll O modulo nao existe public const string ERRO_MODULO_ID_NAO_ENCONTRADO = \"Module nao encontrado pelo id '{0}'\" Returns string"
  },
  "api/Propeus.Modulo.Abstrato.Constantes.ERRO_MODULO_INSTANCIA_UNICA.html": {
    "href": "api/Propeus.Modulo.Abstrato.Constantes.ERRO_MODULO_INSTANCIA_UNICA.html",
    "title": "Field ERRO_MODULO_INSTANCIA_UNICA",
    "keywords": "Field ERRO_MODULO_INSTANCIA_UNICA Namespace Propeus.Modulo.Abstrato Assembly Propeus.Modulo.Abstrato.dll O modulo permite somente a instancia unica (singleton) public const string ERRO_MODULO_INSTANCIA_UNICA = \"Não é possivel criar uma nova instancia de um modulo de instancia unica\" Returns string"
  },
  "api/Propeus.Modulo.Abstrato.Constantes.ERRO_MODULO_NAO_ENCONTRADO.html": {
    "href": "api/Propeus.Modulo.Abstrato.Constantes.ERRO_MODULO_NAO_ENCONTRADO.html",
    "title": "Field ERRO_MODULO_NAO_ENCONTRADO",
    "keywords": "Field ERRO_MODULO_NAO_ENCONTRADO Namespace Propeus.Modulo.Abstrato Assembly Propeus.Modulo.Abstrato.dll ModuleName do modulo incorreto ou inexistente public const string ERRO_MODULO_NAO_ENCONTRADO = \"Module '{0}' não encontrado.\\nVerifique se o nome esta correto na interface de contrato\" Returns string"
  },
  "api/Propeus.Modulo.Abstrato.Constantes.ERRO_MODULO_NEW_REINICIAR.html": {
    "href": "api/Propeus.Modulo.Abstrato.Constantes.ERRO_MODULO_NEW_REINICIAR.html",
    "title": "Field ERRO_MODULO_NEW_REINICIAR",
    "keywords": "Field ERRO_MODULO_NEW_REINICIAR Namespace Propeus.Modulo.Abstrato Assembly Propeus.Modulo.Abstrato.dll Modulos criados fora do gerenciador nao podem ser reiniciados public const string ERRO_MODULO_NEW_REINICIAR = \"Não é possivel reiniciar modulos criados fora do gerenciador\" Returns string"
  },
  "api/Propeus.Modulo.Abstrato.Constantes.ERRO_NOME_MODULO_NAO_ENCONTRADO.html": {
    "href": "api/Propeus.Modulo.Abstrato.Constantes.ERRO_NOME_MODULO_NAO_ENCONTRADO.html",
    "title": "Field ERRO_NOME_MODULO_NAO_ENCONTRADO",
    "keywords": "Field ERRO_NOME_MODULO_NAO_ENCONTRADO Namespace Propeus.Modulo.Abstrato Assembly Propeus.Modulo.Abstrato.dll Module nao encontrado ou inexistente public const string ERRO_NOME_MODULO_NAO_ENCONTRADO = \"Module '{0}' não encontrado\" Returns string"
  },
  "api/Propeus.Modulo.Abstrato.Constantes.ERRO_TIPO_INVALIDO.html": {
    "href": "api/Propeus.Modulo.Abstrato.Constantes.ERRO_TIPO_INVALIDO.html",
    "title": "Field ERRO_TIPO_INVALIDO",
    "keywords": "Field ERRO_TIPO_INVALIDO Namespace Propeus.Modulo.Abstrato Assembly Propeus.Modulo.Abstrato.dll O tipo informado nao e uma interface ou classe public const string ERRO_TIPO_INVALIDO = \"O tipo deve ser uma classe ou interface.\" Returns string"
  },
  "api/Propeus.Modulo.Abstrato.Constantes.ERRO_TIPO_NAO_HERDADO.html": {
    "href": "api/Propeus.Modulo.Abstrato.Constantes.ERRO_TIPO_NAO_HERDADO.html",
    "title": "Field ERRO_TIPO_NAO_HERDADO",
    "keywords": "Field ERRO_TIPO_NAO_HERDADO Namespace Propeus.Modulo.Abstrato Assembly Propeus.Modulo.Abstrato.dll O tipo informado nao herda de IModule public const string ERRO_TIPO_NAO_HERDADO = \"O tipo não é herdado de IModule\" Returns string"
  },
  "api/Propeus.Modulo.Abstrato.Constantes.ERRO_TIPO_NAO_MARCADO.html": {
    "href": "api/Propeus.Modulo.Abstrato.Constantes.ERRO_TIPO_NAO_MARCADO.html",
    "title": "Field ERRO_TIPO_NAO_MARCADO",
    "keywords": "Field ERRO_TIPO_NAO_MARCADO Namespace Propeus.Modulo.Abstrato Assembly Propeus.Modulo.Abstrato.dll A classe atual nao possui o atributo ModuloAttribute public const string ERRO_TIPO_NAO_MARCADO = \"O tipo não esta marcado como modulo\" Returns string"
  },
  "api/Propeus.Modulo.Abstrato.Constantes.html": {
    "href": "api/Propeus.Modulo.Abstrato.Constantes.html",
    "title": "Class Constantes",
    "keywords": "Class Constantes Namespace Propeus.Modulo.Abstrato Assembly Propeus.Modulo.Abstrato.dll Classe para adicionar valores constantes public static class Constantes Inheritance object Constantes Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields ERRO_CONSTRUTOR_NAO_ENCONTRADO Nenhum construtor publico foi encontrado ERRO_MODULO_ID_DESCARTADO O modulo foi descartado ERRO_MODULO_ID_NAO_ENCONTRADO O modulo nao existe ERRO_MODULO_INSTANCIA_UNICA O modulo permite somente a instancia unica (singleton) ERRO_MODULO_NAO_ENCONTRADO ModuleName do modulo incorreto ou inexistente ERRO_MODULO_NEW_REINICIAR Modulos criados fora do gerenciador nao podem ser reiniciados ERRO_NOME_MODULO_NAO_ENCONTRADO Module nao encontrado ou inexistente ERRO_TIPO_INVALIDO O tipo informado nao e uma interface ou classe ERRO_TIPO_NAO_HERDADO O tipo informado nao herda de IModule ERRO_TIPO_NAO_MARCADO A classe atual nao possui o atributo ModuloAttribute METODO_CONFIGURACAO Metodo que o gerenciador irá chamar para realizar as configurações METODO_INSTANCIA Metodo que o gerenciado deverá realizar a injeção de dependencias."
  },
  "api/Propeus.Modulo.Abstrato.Constantes.METODO_CONFIGURACAO.html": {
    "href": "api/Propeus.Modulo.Abstrato.Constantes.METODO_CONFIGURACAO.html",
    "title": "Field METODO_CONFIGURACAO",
    "keywords": "Field METODO_CONFIGURACAO Namespace Propeus.Modulo.Abstrato Assembly Propeus.Modulo.Abstrato.dll Metodo que o gerenciador irá chamar para realizar as configurações public const string METODO_CONFIGURACAO = \"CriarConfiguracao\" Returns string"
  },
  "api/Propeus.Modulo.Abstrato.Constantes.METODO_INSTANCIA.html": {
    "href": "api/Propeus.Modulo.Abstrato.Constantes.METODO_INSTANCIA.html",
    "title": "Field METODO_INSTANCIA",
    "keywords": "Field METODO_INSTANCIA Namespace Propeus.Modulo.Abstrato Assembly Propeus.Modulo.Abstrato.dll Metodo que o gerenciado deverá realizar a injeção de dependencias. public const string METODO_INSTANCIA = \"CriarInstancia\" Returns string"
  },
  "api/Propeus.Modulo.Abstrato.Exceptions.html": {
    "href": "api/Propeus.Modulo.Abstrato.Exceptions.html",
    "title": "Namespace Propeus.Modulo.Abstrato.Exceptions",
    "keywords": "Namespace Propeus.Modulo.Abstrato.Exceptions Classes ModuleBuilderAbsentException Exceção para quando o modulo nao possuir nenhum construtor publico ModuleContractInvalidException Excecao para quando a interface de contrato possui o atributo ModuleContractInvalidException invalido ModuleContractNotFoundException Excecao para quando a interface de contrato nao possui o atributo ModuleContractAttribute ModuleDisposedException Excecao para quando o modulo é descartado pelo Dispose() ou quando o GC coleta o objeto ModuleException Excecao generica ModuleNotFoundException Excecao para quando o modulo informado nao foi encontrado ModuleSingleInstanceException Excecao para tentativa de criacao de um novo modulo de instancia unica ModuleTypeInvalidException Excecao para quando o modulo nao seguir os padroes de implementacao ModuleTypeNotFoundException Excecao para quando o tipo do modulo informado nao for encontrado no Assembly"
  },
  "api/Propeus.Modulo.Abstrato.Exceptions.ModuleBuilderAbsentException.-ctor.html": {
    "href": "api/Propeus.Modulo.Abstrato.Exceptions.ModuleBuilderAbsentException.-ctor.html",
    "title": "Constructor ModuleBuilderAbsentException",
    "keywords": "Constructor ModuleBuilderAbsentException Namespace Propeus.Modulo.Abstrato.Exceptions Assembly Propeus.Modulo.Abstrato.dll ModuleBuilderAbsentException(string) Construtor padrao public ModuleBuilderAbsentException(string message) Parameters message string Mensagem do erro ModuleBuilderAbsentException(SerializationInfo, StreamingContext) Construtor para serializacao protected ModuleBuilderAbsentException(SerializationInfo info, StreamingContext context) Parameters info SerializationInfo Informacao da serializacao context StreamingContext Contexto"
  },
  "api/Propeus.Modulo.Abstrato.Exceptions.ModuleBuilderAbsentException.html": {
    "href": "api/Propeus.Modulo.Abstrato.Exceptions.ModuleBuilderAbsentException.html",
    "title": "Class ModuleBuilderAbsentException",
    "keywords": "Class ModuleBuilderAbsentException Namespace Propeus.Modulo.Abstrato.Exceptions Assembly Propeus.Modulo.Abstrato.dll Exceção para quando o modulo nao possuir nenhum construtor publico public class ModuleBuilderAbsentException : ModuleException, ISerializable Inheritance object Exception ModuleException ModuleBuilderAbsentException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.ToString() Exception.GetType() Exception.TargetSite Exception.Message Exception.Data Exception.InnerException Exception.HelpLink Exception.Source Exception.HResult Exception.StackTrace Exception.SerializeObjectState object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Constructors ModuleBuilderAbsentException(SerializationInfo, StreamingContext) Construtor para serializacao ModuleBuilderAbsentException(string) Construtor padrao"
  },
  "api/Propeus.Modulo.Abstrato.Exceptions.ModuleContractInvalidException.-ctor.html": {
    "href": "api/Propeus.Modulo.Abstrato.Exceptions.ModuleContractInvalidException.-ctor.html",
    "title": "Constructor ModuleContractInvalidException",
    "keywords": "Constructor ModuleContractInvalidException Namespace Propeus.Modulo.Abstrato.Exceptions Assembly Propeus.Modulo.Abstrato.dll ModuleContractInvalidException(string) Construtor padrao public ModuleContractInvalidException(string message) Parameters message string Mensagem do erro ModuleContractInvalidException(SerializationInfo, StreamingContext) Construtor para serializacao protected ModuleContractInvalidException(SerializationInfo info, StreamingContext context) Parameters info SerializationInfo Informacao da serializacao context StreamingContext Contexto"
  },
  "api/Propeus.Modulo.Abstrato.Exceptions.ModuleContractInvalidException.html": {
    "href": "api/Propeus.Modulo.Abstrato.Exceptions.ModuleContractInvalidException.html",
    "title": "Class ModuleContractInvalidException",
    "keywords": "Class ModuleContractInvalidException Namespace Propeus.Modulo.Abstrato.Exceptions Assembly Propeus.Modulo.Abstrato.dll Excecao para quando a interface de contrato possui o atributo ModuleContractInvalidException invalido public class ModuleContractInvalidException : ModuleException, ISerializable Inheritance object Exception ModuleException ModuleContractInvalidException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.ToString() Exception.GetType() Exception.TargetSite Exception.Message Exception.Data Exception.InnerException Exception.HelpLink Exception.Source Exception.HResult Exception.StackTrace Exception.SerializeObjectState object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Constructors ModuleContractInvalidException(SerializationInfo, StreamingContext) Construtor para serializacao ModuleContractInvalidException(string) Construtor padrao"
  },
  "api/Propeus.Modulo.Abstrato.Exceptions.ModuleContractNotFoundException.-ctor.html": {
    "href": "api/Propeus.Modulo.Abstrato.Exceptions.ModuleContractNotFoundException.-ctor.html",
    "title": "Constructor ModuleContractNotFoundException",
    "keywords": "Constructor ModuleContractNotFoundException Namespace Propeus.Modulo.Abstrato.Exceptions Assembly Propeus.Modulo.Abstrato.dll ModuleContractNotFoundException(string) Construtor padrao public ModuleContractNotFoundException(string message) Parameters message string Mensagem do erro ModuleContractNotFoundException(SerializationInfo, StreamingContext) Construtor para serializacao protected ModuleContractNotFoundException(SerializationInfo info, StreamingContext context) Parameters info SerializationInfo Informacao da serializacao context StreamingContext Contexto"
  },
  "api/Propeus.Modulo.Abstrato.Exceptions.ModuleContractNotFoundException.html": {
    "href": "api/Propeus.Modulo.Abstrato.Exceptions.ModuleContractNotFoundException.html",
    "title": "Class ModuleContractNotFoundException",
    "keywords": "Class ModuleContractNotFoundException Namespace Propeus.Modulo.Abstrato.Exceptions Assembly Propeus.Modulo.Abstrato.dll Excecao para quando a interface de contrato nao possui o atributo ModuleContractAttribute public class ModuleContractNotFoundException : ModuleException, ISerializable Inheritance object Exception ModuleException ModuleContractNotFoundException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.ToString() Exception.GetType() Exception.TargetSite Exception.Message Exception.Data Exception.InnerException Exception.HelpLink Exception.Source Exception.HResult Exception.StackTrace Exception.SerializeObjectState object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Constructors ModuleContractNotFoundException(SerializationInfo, StreamingContext) Construtor para serializacao ModuleContractNotFoundException(string) Construtor padrao"
  },
  "api/Propeus.Modulo.Abstrato.Exceptions.ModuleDisposedException.-ctor.html": {
    "href": "api/Propeus.Modulo.Abstrato.Exceptions.ModuleDisposedException.-ctor.html",
    "title": "Constructor ModuleDisposedException",
    "keywords": "Constructor ModuleDisposedException Namespace Propeus.Modulo.Abstrato.Exceptions Assembly Propeus.Modulo.Abstrato.dll ModuleDisposedException(string) Construtor padrao public ModuleDisposedException(string message) Parameters message string Mensagem do erro ModuleDisposedException(SerializationInfo, StreamingContext) Construtor para serializacao protected ModuleDisposedException(SerializationInfo info, StreamingContext context) Parameters info SerializationInfo Informacao da serializacao context StreamingContext Contexto"
  },
  "api/Propeus.Modulo.Abstrato.Exceptions.ModuleDisposedException.html": {
    "href": "api/Propeus.Modulo.Abstrato.Exceptions.ModuleDisposedException.html",
    "title": "Class ModuleDisposedException",
    "keywords": "Class ModuleDisposedException Namespace Propeus.Modulo.Abstrato.Exceptions Assembly Propeus.Modulo.Abstrato.dll Excecao para quando o modulo é descartado pelo Dispose() ou quando o GC coleta o objeto public class ModuleDisposedException : ModuleException, ISerializable Inheritance object Exception ModuleException ModuleDisposedException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.ToString() Exception.GetType() Exception.TargetSite Exception.Message Exception.Data Exception.InnerException Exception.HelpLink Exception.Source Exception.HResult Exception.StackTrace Exception.SerializeObjectState object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Constructors ModuleDisposedException(SerializationInfo, StreamingContext) Construtor para serializacao ModuleDisposedException(string) Construtor padrao"
  },
  "api/Propeus.Modulo.Abstrato.Exceptions.ModuleException.-ctor.html": {
    "href": "api/Propeus.Modulo.Abstrato.Exceptions.ModuleException.-ctor.html",
    "title": "Constructor ModuleException",
    "keywords": "Constructor ModuleException Namespace Propeus.Modulo.Abstrato.Exceptions Assembly Propeus.Modulo.Abstrato.dll ModuleException(string) Construtor padrao public ModuleException(string message) Parameters message string Mensagem do erro ModuleException(SerializationInfo, StreamingContext) Construtor para serializacao protected ModuleException(SerializationInfo info, StreamingContext context) Parameters info SerializationInfo Informacao da serializacao context StreamingContext Contexto"
  },
  "api/Propeus.Modulo.Abstrato.Exceptions.ModuleException.html": {
    "href": "api/Propeus.Modulo.Abstrato.Exceptions.ModuleException.html",
    "title": "Class ModuleException",
    "keywords": "Class ModuleException Namespace Propeus.Modulo.Abstrato.Exceptions Assembly Propeus.Modulo.Abstrato.dll Excecao generica public class ModuleException : Exception, ISerializable Inheritance object Exception ModuleException Implements ISerializable Derived ModuleBuilderAbsentException ModuleContractInvalidException ModuleContractNotFoundException ModuleDisposedException ModuleNotFoundException ModuleSingleInstanceException ModuleTypeInvalidException ModuleTypeNotFoundException Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.ToString() Exception.GetType() Exception.TargetSite Exception.Message Exception.Data Exception.InnerException Exception.HelpLink Exception.Source Exception.HResult Exception.StackTrace Exception.SerializeObjectState object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Constructors ModuleException(SerializationInfo, StreamingContext) Construtor para serializacao ModuleException(string) Construtor padrao"
  },
  "api/Propeus.Modulo.Abstrato.Exceptions.ModuleNotFoundException.-ctor.html": {
    "href": "api/Propeus.Modulo.Abstrato.Exceptions.ModuleNotFoundException.-ctor.html",
    "title": "Constructor ModuleNotFoundException",
    "keywords": "Constructor ModuleNotFoundException Namespace Propeus.Modulo.Abstrato.Exceptions Assembly Propeus.Modulo.Abstrato.dll ModuleNotFoundException(string) Construtor padrao public ModuleNotFoundException(string message) Parameters message string Mensagem do erro ModuleNotFoundException(SerializationInfo, StreamingContext) Construtor para serializacao protected ModuleNotFoundException(SerializationInfo info, StreamingContext context) Parameters info SerializationInfo Informacao da serializacao context StreamingContext Contexto"
  },
  "api/Propeus.Modulo.Abstrato.Exceptions.ModuleNotFoundException.html": {
    "href": "api/Propeus.Modulo.Abstrato.Exceptions.ModuleNotFoundException.html",
    "title": "Class ModuleNotFoundException",
    "keywords": "Class ModuleNotFoundException Namespace Propeus.Modulo.Abstrato.Exceptions Assembly Propeus.Modulo.Abstrato.dll Excecao para quando o modulo informado nao foi encontrado public class ModuleNotFoundException : ModuleException, ISerializable Inheritance object Exception ModuleException ModuleNotFoundException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.ToString() Exception.GetType() Exception.TargetSite Exception.Message Exception.Data Exception.InnerException Exception.HelpLink Exception.Source Exception.HResult Exception.StackTrace Exception.SerializeObjectState object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Constructors ModuleNotFoundException(SerializationInfo, StreamingContext) Construtor para serializacao ModuleNotFoundException(string) Construtor padrao"
  },
  "api/Propeus.Modulo.Abstrato.Exceptions.ModuleSingleInstanceException.-ctor.html": {
    "href": "api/Propeus.Modulo.Abstrato.Exceptions.ModuleSingleInstanceException.-ctor.html",
    "title": "Constructor ModuleSingleInstanceException",
    "keywords": "Constructor ModuleSingleInstanceException Namespace Propeus.Modulo.Abstrato.Exceptions Assembly Propeus.Modulo.Abstrato.dll ModuleSingleInstanceException(string) Construtor padrao public ModuleSingleInstanceException(string message) Parameters message string Mensagem do erro ModuleSingleInstanceException(SerializationInfo, StreamingContext) Construtor para serializacao protected ModuleSingleInstanceException(SerializationInfo info, StreamingContext context) Parameters info SerializationInfo Informacao da serializacao context StreamingContext Contexto"
  },
  "api/Propeus.Modulo.Abstrato.Exceptions.ModuleSingleInstanceException.html": {
    "href": "api/Propeus.Modulo.Abstrato.Exceptions.ModuleSingleInstanceException.html",
    "title": "Class ModuleSingleInstanceException",
    "keywords": "Class ModuleSingleInstanceException Namespace Propeus.Modulo.Abstrato.Exceptions Assembly Propeus.Modulo.Abstrato.dll Excecao para tentativa de criacao de um novo modulo de instancia unica public class ModuleSingleInstanceException : ModuleException, ISerializable Inheritance object Exception ModuleException ModuleSingleInstanceException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.ToString() Exception.GetType() Exception.TargetSite Exception.Message Exception.Data Exception.InnerException Exception.HelpLink Exception.Source Exception.HResult Exception.StackTrace Exception.SerializeObjectState object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Constructors ModuleSingleInstanceException(SerializationInfo, StreamingContext) Construtor para serializacao ModuleSingleInstanceException(string) Construtor padrao"
  },
  "api/Propeus.Modulo.Abstrato.Exceptions.ModuleTypeInvalidException.-ctor.html": {
    "href": "api/Propeus.Modulo.Abstrato.Exceptions.ModuleTypeInvalidException.-ctor.html",
    "title": "Constructor ModuleTypeInvalidException",
    "keywords": "Constructor ModuleTypeInvalidException Namespace Propeus.Modulo.Abstrato.Exceptions Assembly Propeus.Modulo.Abstrato.dll ModuleTypeInvalidException(string) Construtor padrao public ModuleTypeInvalidException(string message) Parameters message string Mensagem do erro ModuleTypeInvalidException(SerializationInfo, StreamingContext) Construtor para serializacao protected ModuleTypeInvalidException(SerializationInfo info, StreamingContext context) Parameters info SerializationInfo Informacao da serializacao context StreamingContext Contexto"
  },
  "api/Propeus.Modulo.Abstrato.Exceptions.ModuleTypeInvalidException.html": {
    "href": "api/Propeus.Modulo.Abstrato.Exceptions.ModuleTypeInvalidException.html",
    "title": "Class ModuleTypeInvalidException",
    "keywords": "Class ModuleTypeInvalidException Namespace Propeus.Modulo.Abstrato.Exceptions Assembly Propeus.Modulo.Abstrato.dll Excecao para quando o modulo nao seguir os padroes de implementacao public class ModuleTypeInvalidException : ModuleException, ISerializable Inheritance object Exception ModuleException ModuleTypeInvalidException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.ToString() Exception.GetType() Exception.TargetSite Exception.Message Exception.Data Exception.InnerException Exception.HelpLink Exception.Source Exception.HResult Exception.StackTrace Exception.SerializeObjectState object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Constructors ModuleTypeInvalidException(SerializationInfo, StreamingContext) Construtor para serializacao ModuleTypeInvalidException(string) Construtor padrao"
  },
  "api/Propeus.Modulo.Abstrato.Exceptions.ModuleTypeNotFoundException.-ctor.html": {
    "href": "api/Propeus.Modulo.Abstrato.Exceptions.ModuleTypeNotFoundException.-ctor.html",
    "title": "Constructor ModuleTypeNotFoundException",
    "keywords": "Constructor ModuleTypeNotFoundException Namespace Propeus.Modulo.Abstrato.Exceptions Assembly Propeus.Modulo.Abstrato.dll ModuleTypeNotFoundException(string) Construtor padrao public ModuleTypeNotFoundException(string message) Parameters message string Mensagem do erro ModuleTypeNotFoundException(SerializationInfo, StreamingContext) Construtor para serializacao protected ModuleTypeNotFoundException(SerializationInfo info, StreamingContext context) Parameters info SerializationInfo Informacao da serializacao context StreamingContext Contexto"
  },
  "api/Propeus.Modulo.Abstrato.Exceptions.ModuleTypeNotFoundException.html": {
    "href": "api/Propeus.Modulo.Abstrato.Exceptions.ModuleTypeNotFoundException.html",
    "title": "Class ModuleTypeNotFoundException",
    "keywords": "Class ModuleTypeNotFoundException Namespace Propeus.Modulo.Abstrato.Exceptions Assembly Propeus.Modulo.Abstrato.dll Excecao para quando o tipo do modulo informado nao for encontrado no Assembly public class ModuleTypeNotFoundException : ModuleException, ISerializable Inheritance object Exception ModuleException ModuleTypeNotFoundException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.ToString() Exception.GetType() Exception.TargetSite Exception.Message Exception.Data Exception.InnerException Exception.HelpLink Exception.Source Exception.HResult Exception.StackTrace Exception.SerializeObjectState object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Constructors ModuleTypeNotFoundException(SerializationInfo, StreamingContext) Construtor para serializacao ModuleTypeNotFoundException(string) Construtor padrao"
  },
  "api/Propeus.Modulo.Abstrato.Helpers.Helper.GetAttributeContractModule.html": {
    "href": "api/Propeus.Modulo.Abstrato.Helpers.Helper.GetAttributeContractModule.html",
    "title": "Method GetAttributeContractModule",
    "keywords": "Method GetAttributeContractModule Namespace Propeus.Modulo.Abstrato.Helpers Assembly Propeus.Modulo.Abstrato.dll GetAttributeContractModule(Type) Obtem o atributo ModuleContractAttribute de um typeModule public static ModuleContractAttribute GetAttributeContractModule(this Type typeModule) Parameters typeModule Type Qualquer typeModule do tipo Type Returns ModuleContractAttribute Exceptions ArgumentException Argumeto typeModule vazio ou nulo InvalidOperationException ModuleContractAttribute não encontrado"
  },
  "api/Propeus.Modulo.Abstrato.Helpers.Helper.GetModuleAttribute.html": {
    "href": "api/Propeus.Modulo.Abstrato.Helpers.Helper.GetModuleAttribute.html",
    "title": "Method GetModuleAttribute",
    "keywords": "Method GetModuleAttribute Namespace Propeus.Modulo.Abstrato.Helpers Assembly Propeus.Modulo.Abstrato.dll GetModuleAttribute(Type) Obtem o atributo ModuleAttribute de um typeModule public static ModuleAttribute GetModuleAttribute(this Type typeModule) Parameters typeModule Type Qualquer typeModule do tipo Type Returns ModuleAttribute Retorna o atributo ou null Exceptions ArgumentException Argumeto typeModule vazio ou nulo InvalidOperationException ModuleAttribute não encontrado"
  },
  "api/Propeus.Modulo.Abstrato.Helpers.Helper.html": {
    "href": "api/Propeus.Modulo.Abstrato.Helpers.Helper.html",
    "title": "Class Helper",
    "keywords": "Class Helper Namespace Propeus.Modulo.Abstrato.Helpers Assembly Propeus.Modulo.Abstrato.dll Classe estatica para ajuda public static class Helper Inheritance object Helper Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods GetAttributeContractModule(Type) Obtem o atributo ModuleContractAttribute de um typeModule GetModuleAttribute(Type) Obtem o atributo ModuleAttribute de um typeModule"
  },
  "api/Propeus.Modulo.Abstrato.Helpers.html": {
    "href": "api/Propeus.Modulo.Abstrato.Helpers.html",
    "title": "Namespace Propeus.Modulo.Abstrato.Helpers",
    "keywords": "Namespace Propeus.Modulo.Abstrato.Helpers Classes Helper Classe estatica para ajuda"
  },
  "api/Propeus.Modulo.Abstrato.html": {
    "href": "api/Propeus.Modulo.Abstrato.html",
    "title": "Namespace Propeus.Modulo.Abstrato",
    "keywords": "Namespace Propeus.Modulo.Abstrato Namespaces Propeus.Modulo.Abstrato.Attributes Propeus.Modulo.Abstrato.Exceptions Propeus.Modulo.Abstrato.Helpers Propeus.Modulo.Abstrato.Interfaces Classes BaseModel Classe com o modelo base para o projeto BaseModule Classe base para o modulo Constantes Classe para adicionar valores constantes Enums State Informa o estado do modulo"
  },
  "api/Propeus.Modulo.Abstrato.Interfaces.html": {
    "href": "api/Propeus.Modulo.Abstrato.Interfaces.html",
    "title": "Namespace Propeus.Modulo.Abstrato.Interfaces",
    "keywords": "Namespace Propeus.Modulo.Abstrato.Interfaces Interfaces IBaseModel Modelo base para todos os objetos do projeto IModule Modelo base para criação de modulos IModuleManager Modelo base para criação de gerenciadores IModuleManagerArguments Interface para criar instancias de moduleType passando argumentos IModuleType Informa detalhes sobre o modulo instanciado"
  },
  "api/Propeus.Modulo.Abstrato.Interfaces.IBaseModel.html": {
    "href": "api/Propeus.Modulo.Abstrato.Interfaces.IBaseModel.html",
    "title": "Interface IBaseModel",
    "keywords": "Interface IBaseModel Namespace Propeus.Modulo.Abstrato.Interfaces Assembly Propeus.Modulo.Abstrato.dll Modelo base para todos os objetos do projeto public interface IBaseModel : IDisposable Inherited Members IDisposable.Dispose() Extension Methods Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Properties Id Representação alfanumerica e unica do objeto. ManifestId Guid do Assembly atual Name Representação amigavel do ojeto. Caso seja nulo o nome da classe herdado será informado na propriedade. State Representa o estado do objeto. Version Version do modelo"
  },
  "api/Propeus.Modulo.Abstrato.Interfaces.IBaseModel.Id.html": {
    "href": "api/Propeus.Modulo.Abstrato.Interfaces.IBaseModel.Id.html",
    "title": "Property Id",
    "keywords": "Property Id Namespace Propeus.Modulo.Abstrato.Interfaces Assembly Propeus.Modulo.Abstrato.dll Id Representação alfanumerica e unica do objeto. string Id { get; } Property Value string"
  },
  "api/Propeus.Modulo.Abstrato.Interfaces.IBaseModel.ManifestId.html": {
    "href": "api/Propeus.Modulo.Abstrato.Interfaces.IBaseModel.ManifestId.html",
    "title": "Property ManifestId",
    "keywords": "Property ManifestId Namespace Propeus.Modulo.Abstrato.Interfaces Assembly Propeus.Modulo.Abstrato.dll ManifestId Guid do Assembly atual string ManifestId { get; } Property Value string"
  },
  "api/Propeus.Modulo.Abstrato.Interfaces.IBaseModel.Name.html": {
    "href": "api/Propeus.Modulo.Abstrato.Interfaces.IBaseModel.Name.html",
    "title": "Property Name",
    "keywords": "Property Name Namespace Propeus.Modulo.Abstrato.Interfaces Assembly Propeus.Modulo.Abstrato.dll Name Representação amigavel do ojeto. Caso seja nulo o nome da classe herdado será informado na propriedade. string Name { get; } Property Value string"
  },
  "api/Propeus.Modulo.Abstrato.Interfaces.IBaseModel.State.html": {
    "href": "api/Propeus.Modulo.Abstrato.Interfaces.IBaseModel.State.html",
    "title": "Property State",
    "keywords": "Property State Namespace Propeus.Modulo.Abstrato.Interfaces Assembly Propeus.Modulo.Abstrato.dll State Representa o estado do objeto. State State { get; } Property Value State"
  },
  "api/Propeus.Modulo.Abstrato.Interfaces.IBaseModel.Version.html": {
    "href": "api/Propeus.Modulo.Abstrato.Interfaces.IBaseModel.Version.html",
    "title": "Property Version",
    "keywords": "Property Version Namespace Propeus.Modulo.Abstrato.Interfaces Assembly Propeus.Modulo.Abstrato.dll Version Version do modelo string Version { get; } Property Value string"
  },
  "api/Propeus.Modulo.Abstrato.Interfaces.IModule.html": {
    "href": "api/Propeus.Modulo.Abstrato.Interfaces.IModule.html",
    "title": "Interface IModule",
    "keywords": "Interface IModule Namespace Propeus.Modulo.Abstrato.Interfaces Assembly Propeus.Modulo.Abstrato.dll Modelo base para criação de modulos public interface IModule : IBaseModel, IDisposable Inherited Members IBaseModel.Version IBaseModel.State IBaseModel.Name IBaseModel.Id IBaseModel.ManifestId IDisposable.Dispose() Extension Methods Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Properties IsSingleInstance Informa se o modulo é instancia unica"
  },
  "api/Propeus.Modulo.Abstrato.Interfaces.IModule.IsSingleInstance.html": {
    "href": "api/Propeus.Modulo.Abstrato.Interfaces.IModule.IsSingleInstance.html",
    "title": "Property IsSingleInstance",
    "keywords": "Property IsSingleInstance Namespace Propeus.Modulo.Abstrato.Interfaces Assembly Propeus.Modulo.Abstrato.dll IsSingleInstance Informa se o modulo é instancia unica bool IsSingleInstance { get; } Property Value bool false"
  },
  "api/Propeus.Modulo.Abstrato.Interfaces.IModuleManager.CreateModule.html": {
    "href": "api/Propeus.Modulo.Abstrato.Interfaces.IModuleManager.CreateModule.html",
    "title": "Method CreateModule",
    "keywords": "Method CreateModule Namespace Propeus.Modulo.Abstrato.Interfaces Assembly Propeus.Modulo.Abstrato.dll CreateModule<T>() Cria uma nova instancia do modulo T CreateModule<T>() where T : IModule Returns T Um modulo herdado de IModule Type Parameters T Qualquer tipo herdado de IModule CreateModule(Type) Cria uma nova instancia do modulo IModule CreateModule(Type moduleType) Parameters moduleType Type ModuleType do moduleType Returns IModule Um modulo herdado de IModule CreateModule(string) Cria uma nova instancia do modulo baseado pelo nome IModule CreateModule(string moduleName) Parameters moduleName string Nome do modulo Returns IModule Um modulo herdado de IModule Remarks O nome do modulo é o nome da classe"
  },
  "api/Propeus.Modulo.Abstrato.Interfaces.IModuleManager.ExistsModule.html": {
    "href": "api/Propeus.Modulo.Abstrato.Interfaces.IModuleManager.ExistsModule.html",
    "title": "Method ExistsModule",
    "keywords": "Method ExistsModule Namespace Propeus.Modulo.Abstrato.Interfaces Assembly Propeus.Modulo.Abstrato.dll ExistsModule(IModule) Verifica se a instancia do modulo existe no genrenciador bool ExistsModule(IModule moduleInstance) Parameters moduleInstance IModule A instancia do modulo Returns bool Retorna true caso exista, caso contrario, false ExistsModule(Type) Verifica se existe alguma instancia do tipo no gerenciador bool ExistsModule(Type moduleType) Parameters moduleType Type Tipo do modulo a ser verificado Returns bool Retorna true caso exista, caso contrario, false ExistsModule(string) Verifica se existe alguma instancia com o id informando no gerenciador bool ExistsModule(string idModule) Parameters idModule string Identificação unica do modulo Returns bool Retorna true caso exista, caso contrario, false"
  },
  "api/Propeus.Modulo.Abstrato.Interfaces.IModuleManager.GetModule.html": {
    "href": "api/Propeus.Modulo.Abstrato.Interfaces.IModuleManager.GetModule.html",
    "title": "Method GetModule",
    "keywords": "Method GetModule Namespace Propeus.Modulo.Abstrato.Interfaces Assembly Propeus.Modulo.Abstrato.dll GetModule<T>() Obtem a instancia do modulo pelo tipo T GetModule<T>() where T : IModule Returns T A instancia do modulo Type Parameters T Qualquer tipo herdado de IModule GetModule(Type) Obtem a instancia do modulo pelo tipo IModule GetModule(Type moduleType) Parameters moduleType Type Qualquer tipo herdado de IModule Returns IModule A instancia do modulo Remarks Caso exista mais de uma instancia do mesmo tipo, o primeiro modulo sempre será retornado GetModule(string) Obtem a instancia do modulo pelo id IModule GetModule(string idModule) Parameters idModule string Identificação unica do modulo Returns IModule A instancia do modulo"
  },
  "api/Propeus.Modulo.Abstrato.Interfaces.IModuleManager.html": {
    "href": "api/Propeus.Modulo.Abstrato.Interfaces.IModuleManager.html",
    "title": "Interface IModuleManager",
    "keywords": "Interface IModuleManager Namespace Propeus.Modulo.Abstrato.Interfaces Assembly Propeus.Modulo.Abstrato.dll Modelo base para criação de gerenciadores public interface IModuleManager : IBaseModel, IDisposable Inherited Members IBaseModel.Version IBaseModel.State IBaseModel.Name IBaseModel.Id IBaseModel.ManifestId IDisposable.Dispose() Extension Methods Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Properties InitializedModules Indica a quantidade de modulos inicializados pelo gerenciador LastUpdate Data e hora do ultimo evento realizado no gerenciador StartDate Retorna data e hora que o gerenciador iniciou Methods CreateModule(string) Cria uma nova instancia do modulo baseado pelo nome CreateModule(Type) Cria uma nova instancia do modulo CreateModule<T>() Cria uma nova instancia do modulo ExistsModule(IModule) Verifica se a instancia do modulo existe no genrenciador ExistsModule(string) Verifica se existe alguma instancia com o id informando no gerenciador ExistsModule(Type) Verifica se existe alguma instancia do tipo no gerenciador GetModule(string) Obtem a instancia do modulo pelo id GetModule(Type) Obtem a instancia do modulo pelo tipo GetModule<T>() Obtem a instancia do modulo pelo tipo KeepAliveModuleAsync(IModule) Mantem um modulo vivo mesmo não possuindo referencia alguma ListAllModules() Lista todos os modulos disponiveis RecycleModule(string) Destroi o modulo antigo e retorna um novo do mesmo tipo RecycleModule<T>(T) Destroi o modulo antigo e retorna um novo do mesmo tipo RemoveAllModules() Remove todos os modulos RemoveModule(string) Remove um modulo pelo seu ID RemoveModule<T>(T) Remove um modulo pelo objeto"
  },
  "api/Propeus.Modulo.Abstrato.Interfaces.IModuleManager.InitializedModules.html": {
    "href": "api/Propeus.Modulo.Abstrato.Interfaces.IModuleManager.InitializedModules.html",
    "title": "Property InitializedModules",
    "keywords": "Property InitializedModules Namespace Propeus.Modulo.Abstrato.Interfaces Assembly Propeus.Modulo.Abstrato.dll InitializedModules Indica a quantidade de modulos inicializados pelo gerenciador int InitializedModules { get; } Property Value int Quantidade de módulos instanciados"
  },
  "api/Propeus.Modulo.Abstrato.Interfaces.IModuleManager.KeepAliveModuleAsync.html": {
    "href": "api/Propeus.Modulo.Abstrato.Interfaces.IModuleManager.KeepAliveModuleAsync.html",
    "title": "Method KeepAliveModuleAsync",
    "keywords": "Method KeepAliveModuleAsync Namespace Propeus.Modulo.Abstrato.Interfaces Assembly Propeus.Modulo.Abstrato.dll KeepAliveModuleAsync(IModule) Mantem um modulo vivo mesmo não possuindo referencia alguma Task KeepAliveModuleAsync(IModule moduleInstance) Parameters moduleInstance IModule Modulo a ser mantido vivo Returns Task Retorna uma tarefa"
  },
  "api/Propeus.Modulo.Abstrato.Interfaces.IModuleManager.LastUpdate.html": {
    "href": "api/Propeus.Modulo.Abstrato.Interfaces.IModuleManager.LastUpdate.html",
    "title": "Property LastUpdate",
    "keywords": "Property LastUpdate Namespace Propeus.Modulo.Abstrato.Interfaces Assembly Propeus.Modulo.Abstrato.dll LastUpdate Data e hora do ultimo evento realizado no gerenciador DateTime LastUpdate { get; } Property Value DateTime Remarks Os eventos sao o CRUD (Criar, Reiniciar, Atualizar ou Remover) do gerenciador"
  },
  "api/Propeus.Modulo.Abstrato.Interfaces.IModuleManager.ListAllModules.html": {
    "href": "api/Propeus.Modulo.Abstrato.Interfaces.IModuleManager.ListAllModules.html",
    "title": "Method ListAllModules",
    "keywords": "Method ListAllModules Namespace Propeus.Modulo.Abstrato.Interfaces Assembly Propeus.Modulo.Abstrato.dll ListAllModules() Lista todos os modulos disponiveis IEnumerable<IModule> ListAllModules() Returns IEnumerable<IModule> Lista de modulos ativos"
  },
  "api/Propeus.Modulo.Abstrato.Interfaces.IModuleManager.RecycleModule.html": {
    "href": "api/Propeus.Modulo.Abstrato.Interfaces.IModuleManager.RecycleModule.html",
    "title": "Method RecycleModule",
    "keywords": "Method RecycleModule Namespace Propeus.Modulo.Abstrato.Interfaces Assembly Propeus.Modulo.Abstrato.dll RecycleModule<T>(T) Destroi o modulo antigo e retorna um novo do mesmo tipo T RecycleModule<T>(T moduleInstance) where T : IModule Parameters moduleInstance T Instancia do modulo a ser reciclado Returns T Nova instancia do modulo Type Parameters T Qualquer tipo herdado de IModule RecycleModule(string) Destroi o modulo antigo e retorna um novo do mesmo tipo IModule RecycleModule(string idModule) Parameters idModule string Identificação unica do modulo a ser reciclado Returns IModule Nova instancia do modulo"
  },
  "api/Propeus.Modulo.Abstrato.Interfaces.IModuleManager.RemoveAllModules.html": {
    "href": "api/Propeus.Modulo.Abstrato.Interfaces.IModuleManager.RemoveAllModules.html",
    "title": "Method RemoveAllModules",
    "keywords": "Method RemoveAllModules Namespace Propeus.Modulo.Abstrato.Interfaces Assembly Propeus.Modulo.Abstrato.dll RemoveAllModules() Remove todos os modulos void RemoveAllModules()"
  },
  "api/Propeus.Modulo.Abstrato.Interfaces.IModuleManager.RemoveModule.html": {
    "href": "api/Propeus.Modulo.Abstrato.Interfaces.IModuleManager.RemoveModule.html",
    "title": "Method RemoveModule",
    "keywords": "Method RemoveModule Namespace Propeus.Modulo.Abstrato.Interfaces Assembly Propeus.Modulo.Abstrato.dll RemoveModule(string) Remove um modulo pelo seu ID void RemoveModule(string idModule) Parameters idModule string Identificação unica do modulo RemoveModule<T>(T) Remove um modulo pelo objeto void RemoveModule<T>(T moduleInstance) where T : IModule Parameters moduleInstance T Qualquer instancia de modulo herdado de IModule Type Parameters T Qualquer tipo herdado de IModule"
  },
  "api/Propeus.Modulo.Abstrato.Interfaces.IModuleManager.StartDate.html": {
    "href": "api/Propeus.Modulo.Abstrato.Interfaces.IModuleManager.StartDate.html",
    "title": "Property StartDate",
    "keywords": "Property StartDate Namespace Propeus.Modulo.Abstrato.Interfaces Assembly Propeus.Modulo.Abstrato.dll StartDate Retorna data e hora que o gerenciador iniciou DateTime StartDate { get; } Property Value DateTime"
  },
  "api/Propeus.Modulo.Abstrato.Interfaces.IModuleManagerArguments.CreateModule.html": {
    "href": "api/Propeus.Modulo.Abstrato.Interfaces.IModuleManagerArguments.CreateModule.html",
    "title": "Method CreateModule",
    "keywords": "Method CreateModule Namespace Propeus.Modulo.Abstrato.Interfaces Assembly Propeus.Modulo.Abstrato.dll CreateModule<T>(object[]) Cria uma nova instancia do moduleType T T CreateModule<T>(object[] args) where T : IModule Parameters args object[] Qualquer argumento necessário para o moduleType Returns T Type Parameters T Qualquer tipo herdado de IModule CreateModule(Type, object[]) Cria uma nova instancia do moduleType usando o tipo do parametro moduleType IModule CreateModule(Type moduleType, object[] args) Parameters moduleType Type ModuleType do moduleType args object[] Qualquer argumento necessário para o moduleType Returns IModule IModule CreateModule(string, object[]) Cria uma nova instancia do moduleType buscando o tipo pelo nome IModule CreateModule(string moduleName, object[] args) Parameters moduleName string ModuleName do moduleType args object[] Qualquer argumento necessário para o moduleType Returns IModule IModule"
  },
  "api/Propeus.Modulo.Abstrato.Interfaces.IModuleManagerArguments.html": {
    "href": "api/Propeus.Modulo.Abstrato.Interfaces.IModuleManagerArguments.html",
    "title": "Interface IModuleManagerArguments",
    "keywords": "Interface IModuleManagerArguments Namespace Propeus.Modulo.Abstrato.Interfaces Assembly Propeus.Modulo.Abstrato.dll Interface para criar instancias de moduleType passando argumentos public interface IModuleManagerArguments : IModuleManager, IBaseModel, IDisposable Inherited Members IModuleManager.CreateModule<T>() IModuleManager.CreateModule(Type) IModuleManager.CreateModule(string) IModuleManager.RemoveModule(string) IModuleManager.RemoveModule<T>(T) IModuleManager.RemoveAllModules() IModuleManager.GetModule<T>() IModuleManager.GetModule(Type) IModuleManager.GetModule(string) IModuleManager.ExistsModule(IModule) IModuleManager.ExistsModule(Type) IModuleManager.ExistsModule(string) IModuleManager.RecycleModule<T>(T) IModuleManager.RecycleModule(string) IModuleManager.ListAllModules() IModuleManager.KeepAliveModuleAsync(IModule) IModuleManager.StartDate IModuleManager.LastUpdate IModuleManager.InitializedModules IBaseModel.Version IBaseModel.State IBaseModel.Name IBaseModel.Id IBaseModel.ManifestId IDisposable.Dispose() Extension Methods Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Methods CreateModule(string, object[]) Cria uma nova instancia do moduleType buscando o tipo pelo nome CreateModule(Type, object[]) Cria uma nova instancia do moduleType usando o tipo do parametro moduleType CreateModule<T>(object[]) Cria uma nova instancia do moduleType T"
  },
  "api/Propeus.Modulo.Abstrato.Interfaces.IModuleType.html": {
    "href": "api/Propeus.Modulo.Abstrato.Interfaces.IModuleType.html",
    "title": "Interface IModuleType",
    "keywords": "Interface IModuleType Namespace Propeus.Modulo.Abstrato.Interfaces Assembly Propeus.Modulo.Abstrato.dll Informa detalhes sobre o modulo instanciado public interface IModuleType : IBaseModel, IDisposable Inherited Members IBaseModel.Version IBaseModel.State IBaseModel.Name IBaseModel.Id IBaseModel.ManifestId IDisposable.Dispose() Extension Methods Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Properties IdModule Informa o id gerado para o modulo instanciado IsCollected Informa se o modulo foi coletado pelo GC IsDeleted Informa se o modulo foi eliminado da aplicação IsKeepAlive Indica se o modulo foi definido para se manter vivo IsSingleInstance Informa se o modulo é instancia unica Module Instancia do modulo ModuleType ModuleType do modulo WeakReference Referencia fraca da instancia do modulo Methods KeepAliveModule(bool) Define se o modulo atual deve ser mantido vivo ou nao"
  },
  "api/Propeus.Modulo.Abstrato.Interfaces.IModuleType.IdModule.html": {
    "href": "api/Propeus.Modulo.Abstrato.Interfaces.IModuleType.IdModule.html",
    "title": "Property IdModule",
    "keywords": "Property IdModule Namespace Propeus.Modulo.Abstrato.Interfaces Assembly Propeus.Modulo.Abstrato.dll IdModule Informa o id gerado para o modulo instanciado string IdModule { get; } Property Value string"
  },
  "api/Propeus.Modulo.Abstrato.Interfaces.IModuleType.IsCollected.html": {
    "href": "api/Propeus.Modulo.Abstrato.Interfaces.IModuleType.IsCollected.html",
    "title": "Property IsCollected",
    "keywords": "Property IsCollected Namespace Propeus.Modulo.Abstrato.Interfaces Assembly Propeus.Modulo.Abstrato.dll IsCollected Informa se o modulo foi coletado pelo GC bool IsCollected { get; } Property Value bool"
  },
  "api/Propeus.Modulo.Abstrato.Interfaces.IModuleType.IsDeleted.html": {
    "href": "api/Propeus.Modulo.Abstrato.Interfaces.IModuleType.IsDeleted.html",
    "title": "Property IsDeleted",
    "keywords": "Property IsDeleted Namespace Propeus.Modulo.Abstrato.Interfaces Assembly Propeus.Modulo.Abstrato.dll IsDeleted Informa se o modulo foi eliminado da aplicação bool IsDeleted { get; } Property Value bool"
  },
  "api/Propeus.Modulo.Abstrato.Interfaces.IModuleType.IsKeepAlive.html": {
    "href": "api/Propeus.Modulo.Abstrato.Interfaces.IModuleType.IsKeepAlive.html",
    "title": "Property IsKeepAlive",
    "keywords": "Property IsKeepAlive Namespace Propeus.Modulo.Abstrato.Interfaces Assembly Propeus.Modulo.Abstrato.dll IsKeepAlive Indica se o modulo foi definido para se manter vivo bool IsKeepAlive { get; } Property Value bool"
  },
  "api/Propeus.Modulo.Abstrato.Interfaces.IModuleType.IsSingleInstance.html": {
    "href": "api/Propeus.Modulo.Abstrato.Interfaces.IModuleType.IsSingleInstance.html",
    "title": "Property IsSingleInstance",
    "keywords": "Property IsSingleInstance Namespace Propeus.Modulo.Abstrato.Interfaces Assembly Propeus.Modulo.Abstrato.dll IsSingleInstance Informa se o modulo é instancia unica bool IsSingleInstance { get; } Property Value bool"
  },
  "api/Propeus.Modulo.Abstrato.Interfaces.IModuleType.KeepAliveModule.html": {
    "href": "api/Propeus.Modulo.Abstrato.Interfaces.IModuleType.KeepAliveModule.html",
    "title": "Method KeepAliveModule",
    "keywords": "Method KeepAliveModule Namespace Propeus.Modulo.Abstrato.Interfaces Assembly Propeus.Modulo.Abstrato.dll KeepAliveModule(bool) Define se o modulo atual deve ser mantido vivo ou nao void KeepAliveModule(bool keepAlive) Parameters keepAlive bool Define se o modulo deve ser mantido vivo"
  },
  "api/Propeus.Modulo.Abstrato.Interfaces.IModuleType.Module.html": {
    "href": "api/Propeus.Modulo.Abstrato.Interfaces.IModuleType.Module.html",
    "title": "Property Module",
    "keywords": "Property Module Namespace Propeus.Modulo.Abstrato.Interfaces Assembly Propeus.Modulo.Abstrato.dll Module Instancia do modulo IModule Module { get; } Property Value IModule"
  },
  "api/Propeus.Modulo.Abstrato.Interfaces.IModuleType.ModuleType.html": {
    "href": "api/Propeus.Modulo.Abstrato.Interfaces.IModuleType.ModuleType.html",
    "title": "Property ModuleType",
    "keywords": "Property ModuleType Namespace Propeus.Modulo.Abstrato.Interfaces Assembly Propeus.Modulo.Abstrato.dll ModuleType ModuleType do modulo Type ModuleType { get; } Property Value Type"
  },
  "api/Propeus.Modulo.Abstrato.Interfaces.IModuleType.WeakReference.html": {
    "href": "api/Propeus.Modulo.Abstrato.Interfaces.IModuleType.WeakReference.html",
    "title": "Property WeakReference",
    "keywords": "Property WeakReference Namespace Propeus.Modulo.Abstrato.Interfaces Assembly Propeus.Modulo.Abstrato.dll WeakReference Referencia fraca da instancia do modulo WeakReference WeakReference { get; } Property Value WeakReference"
  },
  "api/Propeus.Modulo.Abstrato.State.html": {
    "href": "api/Propeus.Modulo.Abstrato.State.html",
    "title": "Enum State",
    "keywords": "Enum State Namespace Propeus.Modulo.Abstrato Assembly Propeus.Modulo.Abstrato.dll Informa o estado do modulo public enum State Extension Methods Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Fields Created = 0 Indica que o modulo foi instanciado Error = 4 Define que durante a execução do modulo acionado alguma Exception Initialized = 2 Define que o modulo foi inicializado com sucesso. Off = 3 Define que o modulo foi eliminado pelo gerenciador ou foi chamado o IDisposable externamente Ready = 1 Indica que o modulo foi instanciado e configurado, porem nao comecou a sua execucao"
  },
  "api/Propeus.Modulo.Core.html": {
    "href": "api/Propeus.Modulo.Core.html",
    "title": "Namespace Propeus.Modulo.Core",
    "keywords": "Namespace Propeus.Modulo.Core Classes ModuleManager Controlador de módulos ModuleManagerExtensions Metodos de extensao para criar gerenciadores"
  },
  "api/Propeus.Modulo.Core.ModuleManager.CreateModule.html": {
    "href": "api/Propeus.Modulo.Core.ModuleManager.CreateModule.html",
    "title": "Method CreateModule",
    "keywords": "Method CreateModule Namespace Propeus.Modulo.Core Assembly Propeus.Modulo.Core.dll CreateModule<T>() Cria uma nova instancia do modulo public T CreateModule<T>() where T : IModule Returns T Um modulo herdado de IModule Type Parameters T Qualquer tipo herdado de IModule Examples Para os exemplos abaixo será utilizado o seguinte modulo e sua interface de contrato using Propeus.Modulo.Abstrato; using Propeus.Modulo.Abstrato.Attributes; using Propeus.Modulo.Abstrato.Interfaces; namespace Propeus.Modulo.Example { [Module] internal class ModuloDeExemplo : BaseModule, IInterfaceDeContratoDeExemplo { public ModuloDeExemploParaPropeusModuloCore() : base(false) { } public void EscreverOlaMundo() { System.Console.WriteLine(\"Ola mundo!\"); System.Console.WriteLine(\"Este é um modulo em funcionamento!\"); } } [ModuleContract(typeof(ModuloDeExemplo))] internal interface IInterfaceDeContratoDeExemplo : IModule { void EscreverOlaMundo(); } } tip Um modulo não precisa obrigatoriamente possuir uma interface de contrato, porém é recomendável. Para criar múltiplas instancias de um mesmo modulo caso o IsSingleInstance seja false using System; using Propeus.Modulo.Core; namespace Propeus.Modulo.Example { internal class Program { private static void Main() { using (gerenciador = ModuleManagerExtensions.CreateModuleManager()) { IInterfaceDeContratoDeExemplo module_a = gerenciador.CreateModule>ModuloDeExemplo<(); IInterfaceDeContratoDeExemplo module_b = gerenciador.CreateModule>ModuloDeExemplo<(); } } } } Para criar múltiplas instancias de um mesmo modulo por meio de uma interface de contrato using System; using Propeus.Modulo.Core; namespace Propeus.Modulo.Example { internal class Program { private static void Main() { using (gerenciador = ModuleManagerExtensions.CreateModuleManager()) { IModule module_a = gerenciador.CreateModule>IInterfaceDeContratoDeExemplo<(); IModule module_b = gerenciador.CreateModule>IInterfaceDeContratoDeExemplo<(); } } } } Exceptions ModuleBuilderAbsentException Não há um construtor publico disponível ModuleContractNotFoundException A interface não possui o atributo ModuleContractAttribute ModuleTypeNotFoundException O ModuleContractAttribute não possui um tipo ou nome valido ModuleTypeInvalidException O tipo não é nem class e nem interface ModuleTypeInvalidException A classe informada não herda de IModule ModuleTypeInvalidException A classe informada não possui o atributo ModuleAttribute CreateModule(string) Cria uma nova instancia do modulo baseado pelo nome public IModule CreateModule(string moduleName) Parameters moduleName string Nome do modulo Returns IModule Um modulo herdado de IModule Examples Para os exemplos abaixo será utilizado o seguinte modulo using Propeus.Modulo.Abstrato; using Propeus.Modulo.Abstrato.Attributes; namespace Propeus.Modulo.Example { [Module] internal class ModuloDeExemplo : BaseModule { public ModuloDeExemploParaPropeusModuloCore() : base(false) { } public void EscreverOlaMundo() { System.Console.WriteLine(\"Ola mundo!\"); System.Console.WriteLine(\"Este é um modulo em funcionamento!\"); } } } Para criar múltiplas instancias de um mesmo modulo caso o IsSingleInstance seja false using System; using Propeus.Modulo.Core; namespace Propeus.Modulo.Example { internal class Program { private static void Main() { using (gerenciador = ModuleManagerExtensions.CreateModuleManager()) { IModule module_a = gerenciador.CreateModule(\"ModuloDeExemplo\"); IModule module_b = gerenciador.CreateModule(\"ModuloDeExemplo\"); } } } } important Este método não consegue resolver interface de contrato pelo nome, somente módulos. important O retorno deste método sempre será IModule, tome cuidado ao realizar o cast para um tipo não compatível. warning Tome cuidado ao escrever o nome do modulo, pois este método é case-sensitive, ou seja, letra maiúscula e minúscula faz diferença. Remarks O nome do modulo é o nome da classe Exceptions ModuleBuilderAbsentException Não há um construtor publico disponível ModuleContractNotFoundException A interface não possui o atributo ModuleContractAttribute ModuleTypeNotFoundException O modulo não foi encontrado pelo nome informado ModuleTypeNotFoundException O ModuleContractAttribute não possui um tipo ou nome valido ModuleTypeInvalidException O tipo não é nem class e nem interface ModuleTypeInvalidException A classe informada não herda de IModule ModuleTypeInvalidException A classe informada não possui o atributo ModuleAttribute CreateModule(Type) Cria uma nova instancia do modulo public IModule CreateModule(Type moduleType) Parameters moduleType Type ModuleType do moduleType Returns IModule Um modulo herdado de IModule Examples Para os exemplos abaixo será utilizado o seguinte modulo e sua interface de contrato using Propeus.Modulo.Abstrato; using Propeus.Modulo.Abstrato.Attributes; using Propeus.Modulo.Abstrato.Interfaces; namespace Propeus.Modulo.Example { [Module] internal class ModuloDeExemplo : BaseModule, IInterfaceDeContratoDeExemplo { public ModuloDeExemploParaPropeusModuloCore() : base(false) { } public void EscreverOlaMundo() { System.Console.WriteLine(\"Ola mundo!\"); System.Console.WriteLine(\"Este é um modulo em funcionamento!\"); } } [ModuleContract(typeof(ModuloDeExemplo))] internal interface IInterfaceDeContratoDeExemplo : IModule { void EscreverOlaMundo(); } } tip Um modulo não precisa obrigatoriamente possuir uma interface de contrato, porém é recomendável. Para criar múltiplas instancias de um mesmo modulo caso o IsSingleInstance seja false using System; using Propeus.Modulo.Core; namespace Propeus.Modulo.Example { internal class Program { private static void Main() { using (gerenciador = ModuleManagerExtensions.CreateModuleManager()) { IInterfaceDeContratoDeExemplo module_a = gerenciador.CreateModule(typeof(ModuloDeExemplo)); IInterfaceDeContratoDeExemplo module_b = gerenciador.CreateModule(typeof(ModuloDeExemplo)); } } } } Para criar múltiplas instancias de um mesmo modulo por meio de uma interface de contrato using System; using Propeus.Modulo.Core; namespace Propeus.Modulo.Example { internal class Program { private static void Main() { using (gerenciador = ModuleManagerExtensions.CreateModuleManager()) { IInterfaceDeContratoDeExemplo module_a = gerenciador.CreateModule(typeof(IInterfaceDeContratoDeExemplo)); IInterfaceDeContratoDeExemplo module_b = gerenciador.CreateModule(typeof(IInterfaceDeContratoDeExemplo)); } } } } important O retorno deste método sempre será IModule, tome cuidado ao realizar o cast para um tipo não compatível. Exceptions ArgumentNullException O o parâmetro moduleType é nulo ModuleBuilderAbsentException Não há um construtor publico disponível ModuleContractNotFoundException A interface não possui o atributo ModuleContractAttribute ModuleTypeNotFoundException O ModuleContractAttribute não possui um tipo ou nome valido ModuleTypeInvalidException O tipo não é nem class e nem interface ModuleTypeInvalidException A classe informada não herda de IModule ModuleTypeInvalidException A classe informada não possui o atributo ModuleAttribute"
  },
  "api/Propeus.Modulo.Core.ModuleManager.Dispose.html": {
    "href": "api/Propeus.Modulo.Core.ModuleManager.Dispose.html",
    "title": "Method Dispose",
    "keywords": "Method Dispose Namespace Propeus.Modulo.Core Assembly Propeus.Modulo.Core.dll Dispose(bool) Libera os objetos deste modelo e altera o estado dele para Off protected override void Dispose(bool disposing) Parameters disposing bool Indica se deve alterar o estado do objeto para Off"
  },
  "api/Propeus.Modulo.Core.ModuleManager.ExistsModule.html": {
    "href": "api/Propeus.Modulo.Core.ModuleManager.ExistsModule.html",
    "title": "Method ExistsModule",
    "keywords": "Method ExistsModule Namespace Propeus.Modulo.Core Assembly Propeus.Modulo.Core.dll ExistsModule(Type) Verifica se existe alguma instancia do tipo no gerenciador public bool ExistsModule(Type moduleType) Parameters moduleType Type Tipo do modulo a ser verificado Returns bool Retorna true caso exista, caso contrario, false Examples Para os exemplos abaixo será utilizado o seguinte modulo e sua interface de contrato using Propeus.Modulo.Abstrato; using Propeus.Modulo.Abstrato.Attributes; using Propeus.Modulo.Abstrato.Interfaces; namespace Propeus.Modulo.Example { [Module] internal class ModuloDeExemplo : BaseModule, IInterfaceDeContratoDeExemplo { public ModuloDeExemploParaPropeusModuloCore() : base(false) { } public void EscreverOlaMundo() { System.Console.WriteLine(\"Ola mundo!\"); System.Console.WriteLine(\"Este é um modulo em funcionamento!\"); } } [ModuleContract(typeof(ModuloDeExemplo))] internal interface IInterfaceDeContratoDeExemplo : IModule { void EscreverOlaMundo(); } } tip Um modulo não precisa obrigatoriamente possuir uma interface de contrato, porém é recomendável. Para verificar se existe alguma instancia do tipo using System; using Propeus.Modulo.Core; namespace Propeus.Modulo.Example { internal class Program { private static void Main() { using (gerenciador = ModuleManagerExtensions.CreateModuleManager()) { IModule module_a = gerenciador.CreateModule(typeof(ModuloDeExemplo)); if(gerenciador.ExistsModule(typeof(IInterfaceDeContratoDeExemplo)) { System.Console.WriteLine(\"Existe o modulo! Obaaa!\"); }else{ System.Console.WriteLine(\"Algo de errado nao esta certo...\"); } } } } } important O retorno deste método sempre será IModule, tome cuidado ao realizar o cast para um tipo não compatível. Exceptions ArgumentNullException O parâmetro é nulo ModuleContractNotFoundException A interface não possui o atributo ModuleContractAttribute ModuleTypeInvalidException O tipo não é nem class e nem interface ModuleTypeInvalidException A classe informada não herda de IModule ModuleTypeInvalidException A classe informada não possui o atributo ModuleAttribute ExistsModule(IModule) Verifica se a instancia do modulo existe no genrenciador public bool ExistsModule(IModule moduleInstance) Parameters moduleInstance IModule A instancia do modulo Returns bool Retorna true caso exista, caso contrario, false Exceptions ArgumentNullException O parâmetro é nulo ExistsModule(string) Verifica se existe alguma instancia com o id informando no gerenciador public bool ExistsModule(string idModule) Parameters idModule string Identificação unica do modulo Returns bool Retorna true caso exista, caso contrario, false Exceptions ArgumentNullException O parâmetro é nulo"
  },
  "api/Propeus.Modulo.Core.ModuleManager.GetModule.html": {
    "href": "api/Propeus.Modulo.Core.ModuleManager.GetModule.html",
    "title": "Method GetModule",
    "keywords": "Method GetModule Namespace Propeus.Modulo.Core Assembly Propeus.Modulo.Core.dll GetModule(Type) Obtem a instancia do modulo pelo tipo public IModule GetModule(Type moduleType) Parameters moduleType Type Qualquer tipo herdado de IModule Returns IModule A instancia do modulo Remarks Caso exista mais de uma instancia do mesmo tipo, o primeiro modulo sempre será retornado Exceptions ModuleContractNotFoundException A interface não possui o atributo ModuleContractAttribute ModuleTypeNotFoundException O ModuleContractAttribute não possui um tipo ou nome valido ModuleTypeInvalidException O tipo não é nem class e nem interface ModuleTypeInvalidException A classe informada não herda de IModule ModuleTypeInvalidException A classe informada não possui o atributo ModuleAttribute ModuleNotFoundException Não existe uma instancia valida do tipo do modulo no gerenciador GetModule<T>() Obtem a instancia do modulo pelo tipo public T GetModule<T>() where T : IModule Returns T A instancia do modulo Type Parameters T Qualquer tipo herdado de IModule Exceptions ModuleContractNotFoundException A interface não possui o atributo ModuleContractAttribute ModuleTypeNotFoundException O ModuleContractAttribute não possui um tipo ou nome valido ModuleTypeInvalidException O tipo não é nem class e nem interface ModuleTypeInvalidException A classe informada não herda de IModule ModuleTypeInvalidException A classe informada não possui o atributo ModuleAttribute ModuleNotFoundException Não existe uma instancia valida do tipo do modulo no gerenciador GetModule(string) Obtem a instancia do modulo pelo id public IModule GetModule(string idModule) Parameters idModule string Identificação unica do modulo Returns IModule A instancia do modulo Exceptions ArgumentException Parâmetro nulo ou vazio ModuleDisposedException O modulo informado foi coletado pelo GC ModuleDisposedException O modulo informado foi apagado pelo GC ModuleNotFoundException Não existe uma instancia valida do tipo do modulo no gerenciador"
  },
  "api/Propeus.Modulo.Core.ModuleManager.html": {
    "href": "api/Propeus.Modulo.Core.ModuleManager.html",
    "title": "Class ModuleManager",
    "keywords": "Class ModuleManager Namespace Propeus.Modulo.Core Assembly Propeus.Modulo.Core.dll Controlador de módulos public sealed class ModuleManager : BaseModel, IModuleManager, IBaseModel, IDisposable Inheritance object BaseModel ModuleManager Implements IModuleManager IBaseModel IDisposable Inherited Members BaseModel.Dispose() BaseModel.Version BaseModel.State BaseModel.Name BaseModel.Id BaseModel.ManifestId object.GetType() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods ModuleManagerExtensions.CreateOrGetModule<TModule>(IModuleManager) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Examples Para iniciar este gerenciador deve utilizar o método de extensão chamado CreateModuleManager() using (gerenciador = ModuleManagerExtensions.CreateModuleManager()) { //Seu código aqui... } Properties InitializedModules Indica a quantidade de modulos inicializados pelo gerenciador LastUpdate Data e hora do ultimo evento realizado no gerenciador StartDate Retorna data e hora que o gerenciador iniciou Methods CreateModule(string) Cria uma nova instancia do modulo baseado pelo nome CreateModule(Type) Cria uma nova instancia do modulo CreateModule<T>() Cria uma nova instancia do modulo Dispose(bool) Libera os objetos deste modelo e altera o estado dele para Off ExistsModule(IModule) Verifica se a instancia do modulo existe no genrenciador ExistsModule(string) Verifica se existe alguma instancia com o id informando no gerenciador ExistsModule(Type) Verifica se existe alguma instancia do tipo no gerenciador GetModule(string) Obtem a instancia do modulo pelo id GetModule(Type) Obtem a instancia do modulo pelo tipo GetModule<T>() Obtem a instancia do modulo pelo tipo KeepAliveModuleAsync(IModule) Mantem um modulo vivo mesmo não possuindo referencia alguma ListAllModules() Lista todos os modulos disponiveis RecycleModule(string) Destroi o modulo antigo e retorna um novo do mesmo tipo RecycleModule<T>(T) Destroi o modulo antigo e retorna um novo do mesmo tipo RemoveAllModules() Remove todos os modulos RemoveModule(string) Remove um modulo pelo seu ID RemoveModule<T>(T) Remove um modulo pelo objeto ToString() Exibe informações basicas sobre o modelo"
  },
  "api/Propeus.Modulo.Core.ModuleManager.InitializedModules.html": {
    "href": "api/Propeus.Modulo.Core.ModuleManager.InitializedModules.html",
    "title": "Property InitializedModules",
    "keywords": "Property InitializedModules Namespace Propeus.Modulo.Core Assembly Propeus.Modulo.Core.dll InitializedModules Indica a quantidade de modulos inicializados pelo gerenciador public int InitializedModules { get; } Property Value int Quantidade de módulos instanciados"
  },
  "api/Propeus.Modulo.Core.ModuleManager.KeepAliveModuleAsync.html": {
    "href": "api/Propeus.Modulo.Core.ModuleManager.KeepAliveModuleAsync.html",
    "title": "Method KeepAliveModuleAsync",
    "keywords": "Method KeepAliveModuleAsync Namespace Propeus.Modulo.Core Assembly Propeus.Modulo.Core.dll KeepAliveModuleAsync(IModule) Mantem um modulo vivo mesmo não possuindo referencia alguma public Task KeepAliveModuleAsync(IModule moduleInstance) Parameters moduleInstance IModule Modulo a ser mantido vivo Returns Task Retorna uma tarefa Exceptions ArgumentException Parâmetro nulo ModuleDisposedException O modulo informado foi coletado pelo GC ModuleDisposedException O modulo informado foi apagado pelo GC ModuleNotFoundException Não existe uma instancia valida do tipo do modulo no gerenciador"
  },
  "api/Propeus.Modulo.Core.ModuleManager.LastUpdate.html": {
    "href": "api/Propeus.Modulo.Core.ModuleManager.LastUpdate.html",
    "title": "Property LastUpdate",
    "keywords": "Property LastUpdate Namespace Propeus.Modulo.Core Assembly Propeus.Modulo.Core.dll LastUpdate Data e hora do ultimo evento realizado no gerenciador public DateTime LastUpdate { get; } Property Value DateTime Remarks Os eventos sao o CRUD (Criar, Reiniciar, Atualizar ou Remover) do gerenciador"
  },
  "api/Propeus.Modulo.Core.ModuleManager.ListAllModules.html": {
    "href": "api/Propeus.Modulo.Core.ModuleManager.ListAllModules.html",
    "title": "Method ListAllModules",
    "keywords": "Method ListAllModules Namespace Propeus.Modulo.Core Assembly Propeus.Modulo.Core.dll ListAllModules() Lista todos os modulos disponiveis public IEnumerable<IModule> ListAllModules() Returns IEnumerable<IModule> Lista de modulos ativos"
  },
  "api/Propeus.Modulo.Core.ModuleManager.RecycleModule.html": {
    "href": "api/Propeus.Modulo.Core.ModuleManager.RecycleModule.html",
    "title": "Method RecycleModule",
    "keywords": "Method RecycleModule Namespace Propeus.Modulo.Core Assembly Propeus.Modulo.Core.dll RecycleModule<T>(T) Destroi o modulo antigo e retorna um novo do mesmo tipo public T RecycleModule<T>(T moduleInstance) where T : IModule Parameters moduleInstance T Instancia do modulo a ser reciclado Returns T Nova instancia do modulo Type Parameters T Qualquer tipo herdado de IModule Exceptions ArgumentNullException Parâmetro nulo ModuleDisposedException O modulo informado foi coletado pelo GC ModuleDisposedException O modulo informado foi apagado pelo GC ModuleNotFoundException Não existe uma instancia valida do tipo do modulo no gerenciador ModuleBuilderAbsentException Não há um construtor publico disponível ModuleContractNotFoundException A interface não possui o atributo ModuleContractAttribute ModuleTypeNotFoundException O ModuleContractAttribute não possui um tipo ou nome valido ModuleTypeInvalidException O tipo não é nem class e nem interface ModuleTypeInvalidException A classe informada não herda de IModule ModuleTypeInvalidException A classe informada não possui o atributo ModuleAttribute RecycleModule(string) Destroi o modulo antigo e retorna um novo do mesmo tipo public IModule RecycleModule(string idModule) Parameters idModule string Identificação unica do modulo a ser reciclado Returns IModule Nova instancia do modulo Exceptions ArgumentException Parâmetro nulo ou vazio ModuleDisposedException O modulo informado foi coletado pelo GC ModuleDisposedException O modulo informado foi apagado pelo GC ModuleNotFoundException Não existe uma instancia valida do tipo do modulo no gerenciador ModuleBuilderAbsentException Não há um construtor publico disponível ModuleContractNotFoundException A interface não possui o atributo ModuleContractAttribute ModuleTypeNotFoundException O ModuleContractAttribute não possui um tipo ou nome valido ModuleTypeInvalidException O tipo não é nem class e nem interface ModuleTypeInvalidException A classe informada não herda de IModule ModuleTypeInvalidException A classe informada não possui o atributo ModuleAttribute"
  },
  "api/Propeus.Modulo.Core.ModuleManager.RemoveAllModules.html": {
    "href": "api/Propeus.Modulo.Core.ModuleManager.RemoveAllModules.html",
    "title": "Method RemoveAllModules",
    "keywords": "Method RemoveAllModules Namespace Propeus.Modulo.Core Assembly Propeus.Modulo.Core.dll RemoveAllModules() Remove todos os modulos public void RemoveAllModules()"
  },
  "api/Propeus.Modulo.Core.ModuleManager.RemoveModule.html": {
    "href": "api/Propeus.Modulo.Core.ModuleManager.RemoveModule.html",
    "title": "Method RemoveModule",
    "keywords": "Method RemoveModule Namespace Propeus.Modulo.Core Assembly Propeus.Modulo.Core.dll RemoveModule<T>(T) Remove um modulo pelo objeto public void RemoveModule<T>(T moduleInstance) where T : IModule Parameters moduleInstance T Qualquer instancia de modulo herdado de IModule Type Parameters T Qualquer tipo herdado de IModule Exceptions ArgumentNullException Parâmetro nulo RemoveModule(string) Remove um modulo pelo seu ID public void RemoveModule(string idModule) Parameters idModule string Identificação unica do modulo Exceptions ArgumentException Parâmetro nulo ou vazio"
  },
  "api/Propeus.Modulo.Core.ModuleManager.StartDate.html": {
    "href": "api/Propeus.Modulo.Core.ModuleManager.StartDate.html",
    "title": "Property StartDate",
    "keywords": "Property StartDate Namespace Propeus.Modulo.Core Assembly Propeus.Modulo.Core.dll StartDate Retorna data e hora que o gerenciador iniciou public DateTime StartDate { get; } Property Value DateTime Data e hora que o gerenciador iniciou"
  },
  "api/Propeus.Modulo.Core.ModuleManager.ToString.html": {
    "href": "api/Propeus.Modulo.Core.ModuleManager.ToString.html",
    "title": "Method ToString",
    "keywords": "Method ToString Namespace Propeus.Modulo.Core Assembly Propeus.Modulo.Core.dll ToString() Exibe informações basicas sobre o modelo public override string ToString() Returns string"
  },
  "api/Propeus.Modulo.Core.ModuleManagerExtensions.CreateModuleManager.html": {
    "href": "api/Propeus.Modulo.Core.ModuleManagerExtensions.CreateModuleManager.html",
    "title": "Method CreateModuleManager",
    "keywords": "Method CreateModuleManager Namespace Propeus.Modulo.Core Assembly Propeus.Modulo.Core.dll CreateModuleManager() Cria uma nova instancia do gereciador public static IModuleManager CreateModuleManager() Returns IModuleManager"
  },
  "api/Propeus.Modulo.Core.ModuleManagerExtensions.CreateOrGetModule.html": {
    "href": "api/Propeus.Modulo.Core.ModuleManagerExtensions.CreateOrGetModule.html",
    "title": "Method CreateOrGetModule",
    "keywords": "Method CreateOrGetModule Namespace Propeus.Modulo.Core Assembly Propeus.Modulo.Core.dll CreateOrGetModule<TModule>(IModuleManager) Cria ou obtem um modulo existente public static TModule CreateOrGetModule<TModule>(this IModuleManager moduleManager) where TModule : IModule Parameters moduleManager IModuleManager Gerenciador de modulos Returns TModule Type Parameters TModule Tipo do modulo"
  },
  "api/Propeus.Modulo.Core.ModuleManagerExtensions.html": {
    "href": "api/Propeus.Modulo.Core.ModuleManagerExtensions.html",
    "title": "Class ModuleManagerExtensions",
    "keywords": "Class ModuleManagerExtensions Namespace Propeus.Modulo.Core Assembly Propeus.Modulo.Core.dll Metodos de extensao para criar gerenciadores public static class ModuleManagerExtensions Inheritance object ModuleManagerExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods CreateModuleManager() Cria uma nova instancia do gereciador CreateOrGetModule<TModule>(IModuleManager) Cria ou obtem um modulo existente"
  },
  "api/Propeus.Modulo.Dinamico.html": {
    "href": "api/Propeus.Modulo.Dinamico.html",
    "title": "Namespace Propeus.Modulo.Dinamico",
    "keywords": "Namespace Propeus.Modulo.Dinamico Namespaces Propeus.Modulo.Dinamico.Modules Classes ModuleManager ModuleProxy responsável por administrar modulos em tempo de execução ModuleManagerExtensions"
  },
  "api/Propeus.Modulo.Dinamico.ModuleManager.-ctor.html": {
    "href": "api/Propeus.Modulo.Dinamico.ModuleManager.-ctor.html",
    "title": "Constructor ModuleManager",
    "keywords": "Constructor ModuleManager Namespace Propeus.Modulo.Dinamico Assembly Propeus.Modulo.Dinamico.dll ModuleManager(IModuleManager) Inicializa o _gerenciador public ModuleManager(IModuleManager moduleManager) Parameters moduleManager IModuleManager Gerenciador que irá controlar o modulo"
  },
  "api/Propeus.Modulo.Dinamico.ModuleManager.CreateModule.html": {
    "href": "api/Propeus.Modulo.Dinamico.ModuleManager.CreateModule.html",
    "title": "Method CreateModule",
    "keywords": "Method CreateModule Namespace Propeus.Modulo.Dinamico Assembly Propeus.Modulo.Dinamico.dll CreateModule<T>() Cria uma nova instancia do modulo public T CreateModule<T>() where T : IModule Returns T Um modulo herdado de IModule Type Parameters T Qualquer tipo herdado de IModule Examples Crie uma classe em um projeto separado using System; using Propeus.ModuleProxy.Abstrato.Attributes; using Propeus.ModuleProxy.Core.ModuleManager; using Propeus.ModuleProxy.Dinamico.ModuleManager; namespace Propeus.ModuleProxy.Exemplo { [ModuleProxy] public class CalculadoraModulo : BaseModule { public ModuloTesteA(IModuleManager _gerenciador) : base(_gerenciador, false) { } public int Calcular(int a, int b) { return a+b; } } } No projeto principal, adicione uma interface de contrato using System; using Propeus.ModuleProxy.Abstrato.Attributes; using Propeus.ModuleProxy.Core.ModuleManager; using Propeus.ModuleProxy.Dinamico.ModuleManager; namespace Propeus.ModuleProxy.Exemplo { [ModuloContrato(\"CalculadoraModulo\")] public interface ICalculadoraModuloContrato : IModule { public int Calcular(int a, int b); } internal class Program { private static void Main(string[] args) { using(ModuleManager _gerenciador = new ModuleManager(Propeus.ModuleProxy.Core.ModuleManager.Atual)) { ICalculadoraModuloContrato modulo = (ICalculadoraModuloContrato)_gerenciador.CreateModule>ICalculadoraModuloContrato<(); Console.WriteLine(modulo.Calcular(1,1)); } } } } Exceptions ArgumentNullException Parametro nulo ArgumentException O tipo informado não é uma interface InvalidCastException O tipo nao possui o atributo ModuleContractAttribute ModuleTypeInvalidException ModuleType do modulo invalido ModuleTypeInvalidException ModuleType do modulo nao herdado de IModule ModuleTypeInvalidException ModuleType do modulo nao possui o atributo ModuleAttribute ModuleTypeInvalidException Parametro do construtor nao e um modulo valido ModuleContractNotFoundException ModuleType da interface de contrato nao possui o atributo ModuleContractAttribute ModuleTypeNotFoundException ModuleType nao encontrado pelo nome no atributo ModuleContractAttribute ModuleTypeNotFoundException ModuleType ausente no atributo ModuleContractAttribute ModuleSingleInstanceException Criacao de mais de uma instancia de modulo definido como instancia unica ModuleBuilderAbsentException Construtor ausente no modulo CreateModule(Type) Cria uma nova instancia do modulo public IModule CreateModule(Type moduleType) Parameters moduleType Type ModuleType do moduleType Returns IModule Um modulo herdado de IModule Examples Crie uma classe em um projeto separado using System; using Propeus.ModuleProxy.Abstrato.Attributes; using Propeus.ModuleProxy.Core.ModuleManager; using Propeus.ModuleProxy.Dinamico.ModuleManager; namespace Propeus.ModuleProxy.Exemplo { [ModuleProxy] public class CalculadoraModulo : BaseModule { public ModuloTesteA(IModuleManager _gerenciador) : base(_gerenciador, false) { } public int Calcular(int a, int b) { return a+b; } } } No projeto principal, adicione uma interface de contrato using System; using Propeus.ModuleProxy.Abstrato.Attributes; using Propeus.ModuleProxy.Core.ModuleManager; using Propeus.ModuleProxy.Dinamico.ModuleManager; namespace Propeus.ModuleProxy.Exemplo { [ModuloContrato(\"CalculadoraModulo\")] public interface ICalculadoraModuloContrato : IModule { public int Calcular(int a, int b); } internal class Program { private static void Main(string[] args) { using(ModuleManager _gerenciador = new ModuleManager(Propeus.ModuleProxy.Core.ModuleManager.Atual)) { ICalculadoraModuloContrato modulo = (ICalculadoraModuloContrato)_gerenciador.CreateModule(typeof(ICalculadoraModuloContrato)); Console.WriteLine(modulo.Calcular(1,1)); } } } } Exceptions ArgumentNullException Parametro nulo ArgumentException O tipo informado não é uma interface InvalidCastException O tipo nao possui o atributo ModuleContractAttribute ModuleTypeInvalidException ModuleType do modulo invalido ModuleTypeInvalidException ModuleType do modulo nao herdado de IModule ModuleTypeInvalidException ModuleType do modulo nao possui o atributo ModuleAttribute ModuleTypeInvalidException Parametro do construtor nao e um modulo valido ModuleContractNotFoundException ModuleType da interface de contrato nao possui o atributo ModuleContractAttribute ModuleTypeNotFoundException ModuleType nao encontrado pelo nome no atributo ModuleContractAttribute ModuleTypeNotFoundException ModuleType ausente no atributo ModuleContractAttribute ModuleSingleInstanceException Criacao de mais de uma instancia de modulo definido como instancia unica ModuleBuilderAbsentException Construtor ausente no modulo CreateModule(string) Cria uma nova instancia do modulo baseado pelo nome public IModule CreateModule(string moduleName) Parameters moduleName string Nome do modulo Returns IModule Um modulo herdado de IModule Examples Crie uma classe em um projeto separado using System; using Propeus.ModuleProxy.Abstrato.Attributes; using Propeus.ModuleProxy.Core.ModuleManager; using Propeus.ModuleProxy.Dinamico.ModuleManager; namespace Propeus.ModuleProxy.Exemplo { [ModuleProxy] public class CalculadoraModulo : BaseModule { public ModuloTesteA(IModuleManager _gerenciador) : base(_gerenciador, false) { } public int Calcular(int a, int b) { return a+b; } } } No projeto principal, adicione uma interface de contrato using System; using Propeus.ModuleProxy.Abstrato.Attributes; using Propeus.ModuleProxy.Core.ModuleManager; using Propeus.ModuleProxy.Dinamico.ModuleManager; namespace Propeus.ModuleProxy.Exemplo { [ModuloContrato(\"CalculadoraModulo\")] public interface ICalculadoraModuloContrato : IModule { public int Calcular(int a, int b); } internal class Program { private static void Main(string[] args) { using(ModuleManager _gerenciador = new ModuleManager(Propeus.ModuleProxy.Core.ModuleManager.Atual)) { ICalculadoraModuloContrato modulo = (ICalculadoraModuloContrato)_gerenciador.CreateModule(\"ICalculadoraModuloContrato\"); Console.WriteLine(modulo.Calcular(1,1)); } } } } Remarks O nome do modulo é o nome da classe Exceptions ArgumentNullException Parametro nulo ArgumentException O tipo informado não é uma interface InvalidCastException O tipo nao possui o atributo ModuleContractAttribute ModuleTypeInvalidException ModuleType do modulo invalido ModuleTypeInvalidException ModuleType do modulo nao herdado de IModule ModuleTypeInvalidException ModuleType do modulo nao possui o atributo ModuleAttribute ModuleTypeInvalidException Parametro do construtor nao e um modulo valido ModuleContractNotFoundException ModuleType da interface de contrato nao possui o atributo ModuleContractAttribute ModuleTypeNotFoundException ModuleType nao encontrado pelo nome no atributo ModuleContractAttribute ModuleTypeNotFoundException ModuleType ausente no atributo ModuleContractAttribute ModuleSingleInstanceException Criacao de mais de uma instancia de modulo definido como instancia unica ModuleBuilderAbsentException Construtor ausente no modulo CreateModule<T>(object[]) Cria uma nova instancia do moduleType public T CreateModule<T>(object[] args) where T : IModule Parameters args object[] Qualquer argumento necessário para o moduleType Returns T Type Parameters T Qualquer tipo herdado de IModule Examples Crie uma classe em um projeto separado using System; using Propeus.ModuleProxy.Abstrato.Attributes; using Propeus.ModuleProxy.Core.ModuleManager; using Propeus.ModuleProxy.Dinamico.ModuleManager; namespace Propeus.ModuleProxy.Exemplo { [ModuleProxy] public class CalculadoraModulo : BaseModule { public ModuloTesteA(IModuleManager _gerenciador) : base(_gerenciador, false) { } public int Calcular(int a, int b) { return a+b; } public void CriarInstancia(int valorTipoQualquer, string valorTipoString) { //Voce pode definir quantos parametros e tipos, portanto que seja compativel com a quantidade de argumentos informados ao criar o modulo. //Caso contrario, este metodo nao será invocado } } } No projeto principal, adicione uma interface de contrato using System; using Propeus.ModuleProxy.Abstrato.Attributes; using Propeus.ModuleProxy.Core.ModuleManager; using Propeus.ModuleProxy.Dinamico.ModuleManager; namespace Propeus.ModuleProxy.Exemplo { [ModuloContrato(\"CalculadoraModulo\")] public interface ICalculadoraModuloContrato : IModule { public int Calcular(int a, int b); } internal class Program { private static void Main(string[] args) { using(ModuleManager _gerenciador = new ModuleManager(Propeus.ModuleProxy.Core.ModuleManager.Atual)) { ICalculadoraModuloContrato modulo = (ICalculadoraModuloContrato)_gerenciador.CreateModule>ICalculadoraModuloContrato<(new object[]{1,\"Um valor qualquer para chamar a funcao CriarInstancia\"}); Console.WriteLine(modulo.Calcular(1,1)); } } } } Exceptions ArgumentNullException Parametro nulo ArgumentException O tipo informado não é uma interface InvalidCastException O tipo nao possui o atributo ModuleContractAttribute ModuleTypeInvalidException ModuleType do modulo invalido ModuleTypeInvalidException ModuleType do modulo nao herdado de IModule ModuleTypeInvalidException ModuleType do modulo nao possui o atributo ModuleAttribute ModuleTypeInvalidException Parametro do construtor nao e um modulo valido ModuleContractNotFoundException ModuleType da interface de contrato nao possui o atributo ModuleContractAttribute ModuleTypeNotFoundException ModuleType nao encontrado pelo nome no atributo ModuleContractAttribute ModuleTypeNotFoundException ModuleType ausente no atributo ModuleContractAttribute ModuleSingleInstanceException Criacao de mais de uma instancia de modulo definido como instancia unica ModuleBuilderAbsentException Construtor ausente no modulo CreateModule(Type, object[]) Cria uma nova instancia do moduleType usando o tipo do parametro moduleType public IModule CreateModule(Type moduleType, object[] args) Parameters moduleType Type ModuleType do moduleType args object[] Qualquer argumento necessário para o moduleType Returns IModule IModule Examples Crie uma classe em um projeto separado using System; using Propeus.ModuleProxy.Abstrato.Attributes; using Propeus.ModuleProxy.Core.ModuleManager; using Propeus.ModuleProxy.Dinamico.ModuleManager; namespace Propeus.ModuleProxy.Exemplo { [ModuleProxy] public class CalculadoraModulo : BaseModule { public ModuloTesteA(IModuleManager _gerenciador) : base(_gerenciador, false) { } public int Calcular(int a, int b) { return a+b; } public void CriarInstancia(int valorTipoQualquer, string valorTipoString) { //Voce pode definir quantos parametros e tipos, portanto que seja compativel com a quantidade de argumentos informados ao criar o modulo. //Caso contrario, este metodo nao será invocado } } } No projeto principal, adicione uma interface de contrato using System; using Propeus.ModuleProxy.Abstrato.Attributes; using Propeus.ModuleProxy.Core.ModuleManager; using Propeus.ModuleProxy.Dinamico.ModuleManager; namespace Propeus.ModuleProxy.Exemplo { [ModuloContrato(\"CalculadoraModulo\")] public interface ICalculadoraModuloContrato : IModule { public int Calcular(int a, int b); } internal class Program { private static void Main(string[] args) { using(ModuleManager _gerenciador = new ModuleManager(Propeus.ModuleProxy.Core.ModuleManager.Atual)) { ICalculadoraModuloContrato modulo = (ICalculadoraModuloContrato)_gerenciador.CreateModule(typeof(ICalculadoraModuloContrato),new object[]{1,\"Um valor qualquer para chamar a funcao CriarInstancia\"}); Console.WriteLine(modulo.Calcular(1,1)); } } } } Exceptions ArgumentNullException Parametro nulo ArgumentException O tipo informado não é uma interface InvalidCastException O tipo nao possui o atributo ModuleContractAttribute ModuleTypeInvalidException ModuleType do modulo invalido ModuleTypeInvalidException ModuleType do modulo nao herdado de IModule ModuleTypeInvalidException ModuleType do modulo nao possui o atributo ModuleAttribute ModuleTypeInvalidException Parametro do construtor nao e um modulo valido ModuleContractNotFoundException ModuleType da interface de contrato nao possui o atributo ModuleContractAttribute ModuleTypeNotFoundException ModuleType nao encontrado pelo nome no atributo ModuleContractAttribute ModuleTypeNotFoundException ModuleType ausente no atributo ModuleContractAttribute ModuleSingleInstanceException Criacao de mais de uma instancia de modulo definido como instancia unica ModuleBuilderAbsentException Construtor ausente no modulo CreateModule(string, object[]) Cria uma nova instancia do moduleType buscando o tipo pelo nome public IModule CreateModule(string moduleName, object[] args) Parameters moduleName string ModuleName do moduleType args object[] Qualquer argumento necessário para o moduleType Returns IModule IModule Examples Crie uma classe em um projeto separado using System; using Propeus.ModuleProxy.Abstrato.Attributes; using Propeus.ModuleProxy.Core.ModuleManager; using Propeus.ModuleProxy.Dinamico.ModuleManager; namespace Propeus.ModuleProxy.Exemplo { [ModuleProxy] public class CalculadoraModulo : BaseModule { public ModuloTesteA(IModuleManager _gerenciador) : base(_gerenciador, false) { } public int Calcular(int a, int b) { return a+b; } public void CriarInstancia(int valorTipoQualquer, string valorTipoString) { //Voce pode definir quantos parametros e tipos, portanto que seja compativel com a quantidade de argumentos informados ao criar o modulo. //Caso contrario, este metodo nao será invocado } } } No projeto principal, adicione uma interface de contrato using System; using Propeus.ModuleProxy.Abstrato.Attributes; using Propeus.ModuleProxy.Core.ModuleManager; using Propeus.ModuleProxy.Dinamico.ModuleManager; namespace Propeus.ModuleProxy.Exemplo { [ModuloContrato(\"CalculadoraModulo\")] public interface ICalculadoraModuloContrato : IModule { public int Calcular(int a, int b); } internal class Program { private static void Main(string[] args) { using(ModuleManager _gerenciador = new ModuleManager(Propeus.ModuleProxy.Core.ModuleManager.Atual)) { ICalculadoraModuloContrato modulo = (ICalculadoraModuloContrato)_gerenciador.CreateModule(\"ICalculadoraModuloContrato\",new object[]{1,\"Um valor qualquer para chamar a funcao CriarInstancia\"}); Console.WriteLine(modulo.Calcular(1,1)); } } } } Exceptions ArgumentNullException Parametro nulo ArgumentException O tipo informado não é uma interface InvalidCastException O tipo nao possui o atributo ModuleContractAttribute ModuleTypeInvalidException ModuleType do modulo invalido ModuleTypeInvalidException ModuleType do modulo nao herdado de IModule ModuleTypeInvalidException ModuleType do modulo nao possui o atributo ModuleAttribute ModuleTypeInvalidException Parametro do construtor nao e um modulo valido ModuleContractNotFoundException ModuleType da interface de contrato nao possui o atributo ModuleContractAttribute ModuleTypeNotFoundException ModuleType nao encontrado pelo nome no atributo ModuleContractAttribute ModuleTypeNotFoundException ModuleType ausente no atributo ModuleContractAttribute ModuleSingleInstanceException Criacao de mais de uma instancia de modulo definido como instancia unica ModuleBuilderAbsentException Construtor ausente no modulo"
  },
  "api/Propeus.Modulo.Dinamico.ModuleManager.Dispose.html": {
    "href": "api/Propeus.Modulo.Dinamico.ModuleManager.Dispose.html",
    "title": "Method Dispose",
    "keywords": "Method Dispose Namespace Propeus.Modulo.Dinamico Assembly Propeus.Modulo.Dinamico.dll Dispose(bool) Libera os objetos deste modelo e altera o estado dele para Off protected override void Dispose(bool disposing) Parameters disposing bool Indica se deve alterar o estado do objeto para Off"
  },
  "api/Propeus.Modulo.Dinamico.ModuleManager.ExistsModule.html": {
    "href": "api/Propeus.Modulo.Dinamico.ModuleManager.ExistsModule.html",
    "title": "Method ExistsModule",
    "keywords": "Method ExistsModule Namespace Propeus.Modulo.Dinamico Assembly Propeus.Modulo.Dinamico.dll ExistsModule(Type) Verifica se existe alguma instancia do tipo no gerenciador public bool ExistsModule(Type moduleType) Parameters moduleType Type Tipo do modulo a ser verificado Returns bool Retorna true caso exista, caso contrario, false Examples Crie uma classe em um projeto separado using System; using Propeus.ModuleProxy.Abstrato.Attributes; using Propeus.ModuleProxy.Core.ModuleManager; using Propeus.ModuleProxy.Dinamico.ModuleManager; namespace Propeus.ModuleProxy.Exemplo { [ModuleProxy] public class CalculadoraModulo : BaseModule { public ModuloTesteA(IModuleManager _gerenciador) : base(_gerenciador, false) { } public int Calcular(int a, int b) { return a+b; } public void CriarInstancia(int valorTipoQualquer, string valorTipoString) { //Voce pode definir quantos parametros e tipos, portanto que seja compativel com a quantidade de argumentos informados ao criar o modulo. //Caso contrario, este metodo nao será invocado } } } No projeto principal, adicione uma interface de contrato e depois verifica se existe a instancia using System; using Propeus.ModuleProxy.Abstrato.Attributes; using Propeus.ModuleProxy.Core.ModuleManager; using Propeus.ModuleProxy.Dinamico.ModuleManager; namespace Propeus.ModuleProxy.Exemplo { [ModuloContrato(\"CalculadoraModulo\")] public interface ICalculadoraModuloContrato : IModule { public int Calcular(int a, int b); } internal class Program { private static void Main(string[] args) { using(ModuleManager _gerenciador = new ModuleManager(Propeus.ModuleProxy.Core.ModuleManager.Atual)) { ICalculadoraModuloContrato modulo = (ICalculadoraModuloContrato)_gerenciador.CreateModule(\"ICalculadoraModuloContrato\",new object[]{1,\"Um valor qualquer para chamar a funcao CriarInstancia\"}); Console.WriteLine(modulo.Calcular(1,1)); modulo = _gerenciador.ExistsModule(typeof(ICalculadoraModuloContrato)); } } } } Exceptions ArgumentNullException Parametro nulo ModuleTypeInvalidException ModuleType do modulo invalido ModuleContractNotFoundException ModuleType da interface de contrato nao possui o atributo ModuleContractAttribute ArgumentNullException Parametro nulo ExistsModule(IModule) Verifica se a instancia do modulo existe no genrenciador public bool ExistsModule(IModule moduleInstance) Parameters moduleInstance IModule A instancia do modulo Returns bool Retorna true caso exista, caso contrario, false Examples Crie uma classe em um projeto separado using System; using Propeus.ModuleProxy.Abstrato.Attributes; using Propeus.ModuleProxy.Core.ModuleManager; using Propeus.ModuleProxy.Dinamico.ModuleManager; namespace Propeus.ModuleProxy.Exemplo { [ModuleProxy] public class CalculadoraModulo : BaseModule { public ModuloTesteA(IModuleManager _gerenciador) : base(_gerenciador, false) { } public int Calcular(int a, int b) { return a+b; } public void CriarInstancia(int valorTipoQualquer, string valorTipoString) { //Voce pode definir quantos parametros e tipos, portanto que seja compativel com a quantidade de argumentos informados ao criar o modulo. //Caso contrario, este metodo nao será invocado } } } No projeto principal, adicione uma interface de contrato e depois verifica se existe a instancia using System; using Propeus.ModuleProxy.Abstrato.Attributes; using Propeus.ModuleProxy.Core.ModuleManager; using Propeus.ModuleProxy.Dinamico.ModuleManager; namespace Propeus.ModuleProxy.Exemplo { [ModuloContrato(\"CalculadoraModulo\")] public interface ICalculadoraModuloContrato : IModule { public int Calcular(int a, int b); } internal class Program { private static void Main(string[] args) { using(ModuleManager _gerenciador = new ModuleManager(Propeus.ModuleProxy.Core.ModuleManager.Atual)) { ICalculadoraModuloContrato modulo = (ICalculadoraModuloContrato)_gerenciador.CreateModule(\"ICalculadoraModuloContrato\",new object[]{1,\"Um valor qualquer para chamar a funcao CriarInstancia\"}); Console.WriteLine(modulo.Calcular(1,1)); modulo = _gerenciador.ExistsModule(modulo); } } } } Exceptions ArgumentNullException Parametro nulo ExistsModule(string) Verifica se existe alguma instancia com o id informando no gerenciador public bool ExistsModule(string idModule) Parameters idModule string Identificação unica do modulo Returns bool Retorna true caso exista, caso contrario, false Examples Crie uma classe em um projeto separado using System; using Propeus.ModuleProxy.Abstrato.Attributes; using Propeus.ModuleProxy.Core.ModuleManager; using Propeus.ModuleProxy.Dinamico.ModuleManager; namespace Propeus.ModuleProxy.Exemplo { [ModuleProxy] public class CalculadoraModulo : BaseModule { public ModuloTesteA(IModuleManager _gerenciador) : base(_gerenciador, false) { } public int Calcular(int a, int b) { return a+b; } public void CriarInstancia(int valorTipoQualquer, string valorTipoString) { //Voce pode definir quantos parametros e tipos, portanto que seja compativel com a quantidade de argumentos informados ao criar o modulo. //Caso contrario, este metodo nao será invocado } } } No projeto principal, adicione uma interface de contrato e depois verifica se existe a instancia pelo ID using System; using Propeus.ModuleProxy.Abstrato.Attributes; using Propeus.ModuleProxy.Core.ModuleManager; using Propeus.ModuleProxy.Dinamico.ModuleManager; namespace Propeus.ModuleProxy.Exemplo { [ModuloContrato(\"CalculadoraModulo\")] public interface ICalculadoraModuloContrato : IModule { public int Calcular(int a, int b); } internal class Program { private static void Main(string[] args) { using(ModuleManager _gerenciador = new ModuleManager(Propeus.ModuleProxy.Core.ModuleManager.Atual)) { ICalculadoraModuloContrato modulo = (ICalculadoraModuloContrato)_gerenciador.CreateModule(\"ICalculadoraModuloContrato\",new object[]{1,\"Um valor qualquer para chamar a funcao CriarInstancia\"}); Console.WriteLine(modulo.Calcular(1,1)); modulo = _gerenciador.ExistsModule(modulo.Id); } } } } Exceptions ArgumentNullException Parametro nulo"
  },
  "api/Propeus.Modulo.Dinamico.ModuleManager.GetModule.html": {
    "href": "api/Propeus.Modulo.Dinamico.ModuleManager.GetModule.html",
    "title": "Method GetModule",
    "keywords": "Method GetModule Namespace Propeus.Modulo.Dinamico Assembly Propeus.Modulo.Dinamico.dll GetModule<T>() Obtem a instancia do modulo pelo tipo public T GetModule<T>() where T : IModule Returns T A instancia do modulo Type Parameters T Qualquer tipo herdado de IModule Examples Crie uma classe em um projeto separado using System; using Propeus.ModuleProxy.Abstrato.Attributes; using Propeus.ModuleProxy.Core.ModuleManager; using Propeus.ModuleProxy.Dinamico.ModuleManager; namespace Propeus.ModuleProxy.Exemplo { [ModuleProxy] public class CalculadoraModulo : BaseModule { public ModuloTesteA(IModuleManager _gerenciador) : base(_gerenciador, false) { } public int Calcular(int a, int b) { return a+b; } public void CriarInstancia(int valorTipoQualquer, string valorTipoString) { //Voce pode definir quantos parametros e tipos, portanto que seja compativel com a quantidade de argumentos informados ao criar o modulo. //Caso contrario, este metodo nao será invocado } } } No projeto principal, adicione uma interface de contrato e depois obtem pelo tipo using System; using Propeus.ModuleProxy.Abstrato.Attributes; using Propeus.ModuleProxy.Core.ModuleManager; using Propeus.ModuleProxy.Dinamico.ModuleManager; namespace Propeus.ModuleProxy.Exemplo { [ModuloContrato(\"CalculadoraModulo\")] public interface ICalculadoraModuloContrato : IModule { public int Calcular(int a, int b); } internal class Program { private static void Main(string[] args) { using(ModuleManager _gerenciador = new ModuleManager(Propeus.ModuleProxy.Core.ModuleManager.Atual)) { ICalculadoraModuloContrato modulo = (ICalculadoraModuloContrato)_gerenciador.CreateModule(\"ICalculadoraModuloContrato\",new object[]{1,\"Um valor qualquer para chamar a funcao CriarInstancia\"}); Console.WriteLine(modulo.Calcular(1,1)); modulo = _gerenciador.GetModule>ICalculadoraModuloContrato<(); } } } } Exceptions ModuleTypeInvalidException ModuleType do modulo invalido ModuleContractNotFoundException ModuleType da interface de contrato nao possui o atributo ModuleContractAttribute ModuleNotFoundException Instancia do modulo nao foi inicializado ArgumentNullException Parametro nulo GetModule(Type) Obtem a instancia do modulo pelo tipo public IModule GetModule(Type moduleType) Parameters moduleType Type Qualquer tipo herdado de IModule Returns IModule A instancia do modulo Examples Crie uma classe em um projeto separado using System; using Propeus.ModuleProxy.Abstrato.Attributes; using Propeus.ModuleProxy.Core.ModuleManager; using Propeus.ModuleProxy.Dinamico.ModuleManager; namespace Propeus.ModuleProxy.Exemplo { [ModuleProxy] public class CalculadoraModulo : BaseModule { public ModuloTesteA(IModuleManager _gerenciador) : base(_gerenciador, false) { } public int Calcular(int a, int b) { return a+b; } public void CriarInstancia(int valorTipoQualquer, string valorTipoString) { //Voce pode definir quantos parametros e tipos, portanto que seja compativel com a quantidade de argumentos informados ao criar o modulo. //Caso contrario, este metodo nao será invocado } } } No projeto principal, adicione uma interface de contrato e depois obtem pelo tipo using System; using Propeus.ModuleProxy.Abstrato.Attributes; using Propeus.ModuleProxy.Core.ModuleManager; using Propeus.ModuleProxy.Dinamico.ModuleManager; namespace Propeus.ModuleProxy.Exemplo { [ModuloContrato(\"CalculadoraModulo\")] public interface ICalculadoraModuloContrato : IModule { public int Calcular(int a, int b); } internal class Program { private static void Main(string[] args) { using(ModuleManager _gerenciador = new ModuleManager(Propeus.ModuleProxy.Core.ModuleManager.Atual)) { ICalculadoraModuloContrato modulo = (ICalculadoraModuloContrato)_gerenciador.CreateModule(\"ICalculadoraModuloContrato\",new object[]{1,\"Um valor qualquer para chamar a funcao CriarInstancia\"}); Console.WriteLine(modulo.Calcular(1,1)); modulo = _gerenciador.GetModule(typeof(ICalculadoraModuloContrato)); } } } } Remarks Caso exista mais de uma instancia do mesmo tipo, o primeiro modulo sempre será retornado Exceptions ArgumentNullException Parametro nulo GetModule(string) Obtem a instancia do modulo pelo id public IModule GetModule(string idModule) Parameters idModule string Identificação unica do modulo Returns IModule A instancia do modulo Examples Crie uma classe em um projeto separado using System; using Propeus.ModuleProxy.Abstrato.Attributes; using Propeus.ModuleProxy.Core.ModuleManager; using Propeus.ModuleProxy.Dinamico.ModuleManager; namespace Propeus.ModuleProxy.Exemplo { [ModuleProxy] public class CalculadoraModulo : BaseModule { public ModuloTesteA(IModuleManager _gerenciador) : base(_gerenciador, false) { } public int Calcular(int a, int b) { return a+b; } public void CriarInstancia(int valorTipoQualquer, string valorTipoString) { //Voce pode definir quantos parametros e tipos, portanto que seja compativel com a quantidade de argumentos informados ao criar o modulo. //Caso contrario, este metodo nao será invocado } } } No projeto principal, adicione uma interface de contrato e depois obtem pelo tipo using System; using Propeus.ModuleProxy.Abstrato.Attributes; using Propeus.ModuleProxy.Core.ModuleManager; using Propeus.ModuleProxy.Dinamico.ModuleManager; namespace Propeus.ModuleProxy.Exemplo { [ModuloContrato(\"CalculadoraModulo\")] public interface ICalculadoraModuloContrato : IModule { public int Calcular(int a, int b); } internal class Program { private static void Main(string[] args) { using(ModuleManager _gerenciador = new ModuleManager(Propeus.ModuleProxy.Core.ModuleManager.Atual)) { ICalculadoraModuloContrato modulo = (ICalculadoraModuloContrato)_gerenciador.CreateModule(\"ICalculadoraModuloContrato\",new object[]{1,\"Um valor qualquer para chamar a funcao CriarInstancia\"}); Console.WriteLine(modulo.Calcular(1,1)); modulo = _gerenciador.GetModule(modulo.Id); } } } } Exceptions ArgumentNullException Parametro nulo ModuleNotFoundException Instancia do modulo nao foi inicializado"
  },
  "api/Propeus.Modulo.Dinamico.ModuleManager.html": {
    "href": "api/Propeus.Modulo.Dinamico.ModuleManager.html",
    "title": "Class ModuleManager",
    "keywords": "Class ModuleManager Namespace Propeus.Modulo.Dinamico Assembly Propeus.Modulo.Dinamico.dll ModuleProxy responsável por administrar modulos em tempo de execução [Module] public class ModuleManager : BaseModule, IModule, IModuleManagerArguments, IModuleManager, IBaseModel, IDisposable Inheritance object BaseModel BaseModule ModuleManager Implements IModule IModuleManagerArguments IModuleManager IBaseModel IDisposable Inherited Members BaseModule.IsSingleInstance BaseModel.disposedValue BaseModel.Dispose() BaseModel.Version BaseModel.State BaseModel.Name BaseModel.Id BaseModel.ManifestId object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Constructors ModuleManager(IModuleManager) Inicializa o _gerenciador Properties InitializedModules Indica a quantidade de modulos inicializados pelo gerenciador LastUpdate Data e hora do ultimo evento realizado no gerenciador ModuleDirectory Diretório atual do modulo StartDate Retorna data e hora que o gerenciador iniciou Methods CreateModule(string) Cria uma nova instancia do modulo baseado pelo nome CreateModule(string, object[]) Cria uma nova instancia do moduleType buscando o tipo pelo nome CreateModule(Type) Cria uma nova instancia do modulo CreateModule(Type, object[]) Cria uma nova instancia do moduleType usando o tipo do parametro moduleType CreateModule<T>() Cria uma nova instancia do modulo CreateModule<T>(object[]) Cria uma nova instancia do moduleType Dispose(bool) Libera os objetos deste modelo e altera o estado dele para Off ExistsModule(IModule) Verifica se a instancia do modulo existe no genrenciador ExistsModule(string) Verifica se existe alguma instancia com o id informando no gerenciador ExistsModule(Type) Verifica se existe alguma instancia do tipo no gerenciador GetModule(string) Obtem a instancia do modulo pelo id GetModule(Type) Obtem a instancia do modulo pelo tipo GetModule<T>() Obtem a instancia do modulo pelo tipo KeepAliveModuleAsync(IModule) Mantem um modulo vivo mesmo não possuindo referencia alguma ListAllModules() Lista todos os modulos disponiveis RecycleModule(string) Destroi o modulo antigo e retorna um novo do mesmo tipo RecycleModule<T>(T) Destroi o modulo antigo e retorna um novo do mesmo tipo RemoveAllModules() Remove todos os modulos RemoveModule(string) Remove um modulo pelo seu ID RemoveModule<T>(T) Remove um modulo pelo objeto ToString() Exibe informacoes basicas sobre o modulo"
  },
  "api/Propeus.Modulo.Dinamico.ModuleManager.InitializedModules.html": {
    "href": "api/Propeus.Modulo.Dinamico.ModuleManager.InitializedModules.html",
    "title": "Property InitializedModules",
    "keywords": "Property InitializedModules Namespace Propeus.Modulo.Dinamico Assembly Propeus.Modulo.Dinamico.dll InitializedModules Indica a quantidade de modulos inicializados pelo gerenciador public int InitializedModules { get; } Property Value int Quantidade de módulos instanciados"
  },
  "api/Propeus.Modulo.Dinamico.ModuleManager.KeepAliveModuleAsync.html": {
    "href": "api/Propeus.Modulo.Dinamico.ModuleManager.KeepAliveModuleAsync.html",
    "title": "Method KeepAliveModuleAsync",
    "keywords": "Method KeepAliveModuleAsync Namespace Propeus.Modulo.Dinamico Assembly Propeus.Modulo.Dinamico.dll KeepAliveModuleAsync(IModule) Mantem um modulo vivo mesmo não possuindo referencia alguma public Task KeepAliveModuleAsync(IModule moduleInstance) Parameters moduleInstance IModule Modulo a ser mantido vivo Returns Task Retorna uma tarefa"
  },
  "api/Propeus.Modulo.Dinamico.ModuleManager.LastUpdate.html": {
    "href": "api/Propeus.Modulo.Dinamico.ModuleManager.LastUpdate.html",
    "title": "Property LastUpdate",
    "keywords": "Property LastUpdate Namespace Propeus.Modulo.Dinamico Assembly Propeus.Modulo.Dinamico.dll LastUpdate Data e hora do ultimo evento realizado no gerenciador public DateTime LastUpdate { get; } Property Value DateTime Remarks Os eventos sao o CRUD (Criar, Reiniciar, Atualizar ou Remover) do gerenciador"
  },
  "api/Propeus.Modulo.Dinamico.ModuleManager.ListAllModules.html": {
    "href": "api/Propeus.Modulo.Dinamico.ModuleManager.ListAllModules.html",
    "title": "Method ListAllModules",
    "keywords": "Method ListAllModules Namespace Propeus.Modulo.Dinamico Assembly Propeus.Modulo.Dinamico.dll ListAllModules() Lista todos os modulos disponiveis public IEnumerable<IModule> ListAllModules() Returns IEnumerable<IModule> Lista de modulos ativos Examples Crie uma classe em um projeto separado using System; using Propeus.ModuleProxy.Abstrato.Attributes; using Propeus.ModuleProxy.Core.ModuleManager; using Propeus.ModuleProxy.Dinamico.ModuleManager; namespace Propeus.ModuleProxy.Exemplo { [ModuleProxy] public class CalculadoraModulo : BaseModule { public ModuloTesteA(IModuleManager _gerenciador) : base(_gerenciador, false) { } public int Calcular(int a, int b) { return a+b; } public void CriarInstancia(int valorTipoQualquer, string valorTipoString) { //Voce pode definir quantos parametros e tipos, portanto que seja compativel com a quantidade de argumentos informados ao criar o modulo. //Caso contrario, este metodo nao será invocado } } } No projeto principal, adicione uma interface de contrato e depois verifica se existe a instancia using System; using Propeus.ModuleProxy.Abstrato.Attributes; using Propeus.ModuleProxy.Core.ModuleManager; using Propeus.ModuleProxy.Dinamico.ModuleManager; namespace Propeus.ModuleProxy.Exemplo { [ModuloContrato(\"CalculadoraModulo\")] public interface ICalculadoraModuloContrato : IModule { public int Calcular(int a, int b); } internal class Program { private static void Main(string[] args) { using(ModuleManager _gerenciador = new ModuleManager(Propeus.ModuleProxy.Core.ModuleManager.Atual)) { ICalculadoraModuloContrato modulo = (ICalculadoraModuloContrato)_gerenciador.CreateModule(\"ICalculadoraModuloContrato\",new object[]{1,\"Um valor qualquer para chamar a funcao CriarInstancia\"}); Console.WriteLine(modulo.Calcular(1,1)); IEnumerable>IModule< = _gerenciador.ListAllModules(); } } } }"
  },
  "api/Propeus.Modulo.Dinamico.ModuleManager.ModuleDirectory.html": {
    "href": "api/Propeus.Modulo.Dinamico.ModuleManager.ModuleDirectory.html",
    "title": "Property ModuleDirectory",
    "keywords": "Property ModuleDirectory Namespace Propeus.Modulo.Dinamico Assembly Propeus.Modulo.Dinamico.dll ModuleDirectory Diretório atual do modulo public string ModuleDirectory { get; set; } Property Value string"
  },
  "api/Propeus.Modulo.Dinamico.ModuleManager.RecycleModule.html": {
    "href": "api/Propeus.Modulo.Dinamico.ModuleManager.RecycleModule.html",
    "title": "Method RecycleModule",
    "keywords": "Method RecycleModule Namespace Propeus.Modulo.Dinamico Assembly Propeus.Modulo.Dinamico.dll RecycleModule<T>(T) Destroi o modulo antigo e retorna um novo do mesmo tipo public T RecycleModule<T>(T moduleInstance) where T : IModule Parameters moduleInstance T Instancia do modulo a ser reciclado Returns T Nova instancia do modulo Type Parameters T Qualquer tipo herdado de IModule Examples Crie uma classe em um projeto separado using System; using Propeus.ModuleProxy.Abstrato.Attributes; using Propeus.ModuleProxy.Core.ModuleManager; using Propeus.ModuleProxy.Dinamico.ModuleManager; namespace Propeus.ModuleProxy.Exemplo { [ModuleProxy] public class CalculadoraModulo : BaseModule { public ModuloTesteA(IModuleManager _gerenciador) : base(_gerenciador, false) { } public int Calcular(int a, int b) { return a+b; } public void CriarInstancia(int valorTipoQualquer, string valorTipoString) { //Voce pode definir quantos parametros e tipos, portanto que seja compativel com a quantidade de argumentos informados ao criar o modulo. //Caso contrario, este metodo nao será invocado } } } No projeto principal, adicione uma interface de contrato e depois recicle using System; using Propeus.ModuleProxy.Abstrato.Attributes; using Propeus.ModuleProxy.Core.ModuleManager; using Propeus.ModuleProxy.Dinamico.ModuleManager; namespace Propeus.ModuleProxy.Exemplo { [ModuloContrato(\"CalculadoraModulo\")] public interface ICalculadoraModuloContrato : IModule { public int Calcular(int a, int b); } internal class Program { private static void Main(string[] args) { using(ModuleManager _gerenciador = new ModuleManager(Propeus.ModuleProxy.Core.ModuleManager.Atual)) { ICalculadoraModuloContrato modulo = (ICalculadoraModuloContrato)_gerenciador.CreateModule(\"ICalculadoraModuloContrato\",new object[]{1,\"Um valor qualquer para chamar a funcao CriarInstancia\"}); Console.WriteLine(modulo.Calcular(1,1)); _gerenciador.Recilcar(modulo); } } } } Exceptions ArgumentNullException Parametro nulo RecycleModule(string) Destroi o modulo antigo e retorna um novo do mesmo tipo public IModule RecycleModule(string idModule) Parameters idModule string Identificação unica do modulo a ser reciclado Returns IModule Nova instancia do modulo Examples Crie uma classe em um projeto separado using System; using Propeus.ModuleProxy.Abstrato.Attributes; using Propeus.ModuleProxy.Core.ModuleManager; using Propeus.ModuleProxy.Dinamico.ModuleManager; namespace Propeus.ModuleProxy.Exemplo { [ModuleProxy] public class CalculadoraModulo : BaseModule { public ModuloTesteA(IModuleManager _gerenciador) : base(_gerenciador, false) { } public int Calcular(int a, int b) { return a+b; } public void CriarInstancia(int valorTipoQualquer, string valorTipoString) { //Voce pode definir quantos parametros e tipos, portanto que seja compativel com a quantidade de argumentos informados ao criar o modulo. //Caso contrario, este metodo nao será invocado } } } No projeto principal, adicione uma interface de contrato e depois recicle pelo ID using System; using Propeus.ModuleProxy.Abstrato.Attributes; using Propeus.ModuleProxy.Core.ModuleManager; using Propeus.ModuleProxy.Dinamico.ModuleManager; namespace Propeus.ModuleProxy.Exemplo { [ModuloContrato(\"CalculadoraModulo\")] public interface ICalculadoraModuloContrato : IModule { public int Calcular(int a, int b); } internal class Program { private static void Main(string[] args) { using(ModuleManager _gerenciador = new ModuleManager(Propeus.ModuleProxy.Core.ModuleManager.Atual)) { ICalculadoraModuloContrato modulo = (ICalculadoraModuloContrato)_gerenciador.CreateModule(\"ICalculadoraModuloContrato\",new object[]{1,\"Um valor qualquer para chamar a funcao CriarInstancia\"}); Console.WriteLine(modulo.Calcular(1,1)); modulo = _gerenciador.Recilcar(modulo.Id); } } } } Exceptions ArgumentNullException Parametro nulo ModuleNotFoundException Instancia do modulo nao foi inicializado ModuleDisposedException Instancia do modulo foi coletado pelo GC ou acionou o Dispose() ArgumentNullException Parametro nulo"
  },
  "api/Propeus.Modulo.Dinamico.ModuleManager.RemoveAllModules.html": {
    "href": "api/Propeus.Modulo.Dinamico.ModuleManager.RemoveAllModules.html",
    "title": "Method RemoveAllModules",
    "keywords": "Method RemoveAllModules Namespace Propeus.Modulo.Dinamico Assembly Propeus.Modulo.Dinamico.dll RemoveAllModules() Remove todos os modulos public void RemoveAllModules() Examples Crie uma classe em um projeto separado using System; using Propeus.ModuleProxy.Abstrato.Attributes; using Propeus.ModuleProxy.Core.ModuleManager; using Propeus.ModuleProxy.Dinamico.ModuleManager; namespace Propeus.ModuleProxy.Exemplo { [ModuleProxy] public class CalculadoraModulo : BaseModule { public ModuloTesteA(IModuleManager _gerenciador) : base(_gerenciador, false) { } public int Calcular(int a, int b) { return a+b; } public void CriarInstancia(int valorTipoQualquer, string valorTipoString) { //Voce pode definir quantos parametros e tipos, portanto que seja compativel com a quantidade de argumentos informados ao criar o modulo. //Caso contrario, este metodo nao será invocado } } } No projeto principal, adicione uma interface de contrato e depois remova pelo ID using System; using Propeus.ModuleProxy.Abstrato.Attributes; using Propeus.ModuleProxy.Core.ModuleManager; using Propeus.ModuleProxy.Dinamico.ModuleManager; namespace Propeus.ModuleProxy.Exemplo { [ModuloContrato(\"CalculadoraModulo\")] public interface ICalculadoraModuloContrato : IModule { public int Calcular(int a, int b); } internal class Program { private static void Main(string[] args) { using(ModuleManager _gerenciador = new ModuleManager(Propeus.ModuleProxy.Core.ModuleManager.Atual)) { ICalculadoraModuloContrato modulo = (ICalculadoraModuloContrato)_gerenciador.CreateModule(\"ICalculadoraModuloContrato\",new object[]{1,\"Um valor qualquer para chamar a funcao CriarInstancia\"}); Console.WriteLine(modulo.Calcular(1,1)); _gerenciador.RemoveAllModules(); } } } }"
  },
  "api/Propeus.Modulo.Dinamico.ModuleManager.RemoveModule.html": {
    "href": "api/Propeus.Modulo.Dinamico.ModuleManager.RemoveModule.html",
    "title": "Method RemoveModule",
    "keywords": "Method RemoveModule Namespace Propeus.Modulo.Dinamico Assembly Propeus.Modulo.Dinamico.dll RemoveModule<T>(T) Remove um modulo pelo objeto public void RemoveModule<T>(T moduleInstance) where T : IModule Parameters moduleInstance T Qualquer instancia de modulo herdado de IModule Type Parameters T Qualquer tipo herdado de IModule Examples Crie uma classe em um projeto separado using System; using Propeus.ModuleProxy.Abstrato.Attributes; using Propeus.ModuleProxy.Core.ModuleManager; using Propeus.ModuleProxy.Dinamico.ModuleManager; namespace Propeus.ModuleProxy.Exemplo { [ModuleProxy] public class CalculadoraModulo : BaseModule { public ModuloTesteA(IModuleManager _gerenciador) : base(_gerenciador, false) { } public int Calcular(int a, int b) { return a+b; } public void CriarInstancia(int valorTipoQualquer, string valorTipoString) { //Voce pode definir quantos parametros e tipos, portanto que seja compativel com a quantidade de argumentos informados ao criar o modulo. //Caso contrario, este metodo nao será invocado } } } No projeto principal, adicione uma interface de contrato e depois remova using System; using Propeus.ModuleProxy.Abstrato.Attributes; using Propeus.ModuleProxy.Core.ModuleManager; using Propeus.ModuleProxy.Dinamico.ModuleManager; namespace Propeus.ModuleProxy.Exemplo { [ModuloContrato(\"CalculadoraModulo\")] public interface ICalculadoraModuloContrato : IModule { public int Calcular(int a, int b); } internal class Program { private static void Main(string[] args) { using(ModuleManager _gerenciador = new ModuleManager(Propeus.ModuleProxy.Core.ModuleManager.Atual)) { ICalculadoraModuloContrato modulo = (ICalculadoraModuloContrato)_gerenciador.CreateModule(\"ICalculadoraModuloContrato\",new object[]{1,\"Um valor qualquer para chamar a funcao CriarInstancia\"}); Console.WriteLine(modulo.Calcular(1,1)); _gerenciador.RemoveModule(modulo); } } } } Exceptions ArgumentNullException Parametro nulo RemoveModule(string) Remove um modulo pelo seu ID public void RemoveModule(string idModule) Parameters idModule string Identificação unica do modulo Examples Crie uma classe em um projeto separado using System; using Propeus.ModuleProxy.Abstrato.Attributes; using Propeus.ModuleProxy.Core.ModuleManager; using Propeus.ModuleProxy.Dinamico.ModuleManager; namespace Propeus.ModuleProxy.Exemplo { [ModuleProxy] public class CalculadoraModulo : BaseModule { public ModuloTesteA(IModuleManager _gerenciador) : base(_gerenciador, false) { } public int Calcular(int a, int b) { return a+b; } public void CriarInstancia(int valorTipoQualquer, string valorTipoString) { //Voce pode definir quantos parametros e tipos, portanto que seja compativel com a quantidade de argumentos informados ao criar o modulo. //Caso contrario, este metodo nao será invocado } } } No projeto principal, adicione uma interface de contrato e depois remova pelo ID using System; using Propeus.ModuleProxy.Abstrato.Attributes; using Propeus.ModuleProxy.Core.ModuleManager; using Propeus.ModuleProxy.Dinamico.ModuleManager; namespace Propeus.ModuleProxy.Exemplo { [ModuloContrato(\"CalculadoraModulo\")] public interface ICalculadoraModuloContrato : IModule { public int Calcular(int a, int b); } internal class Program { private static void Main(string[] args) { using(ModuleManager _gerenciador = new ModuleManager(Propeus.ModuleProxy.Core.ModuleManager.Atual)) { ICalculadoraModuloContrato modulo = (ICalculadoraModuloContrato)_gerenciador.CreateModule(\"ICalculadoraModuloContrato\",new object[]{1,\"Um valor qualquer para chamar a funcao CriarInstancia\"}); Console.WriteLine(modulo.Calcular(1,1)); _gerenciador.RemoveModule(modulo.Id); } } } } Exceptions ArgumentNullException Parametro nulo ModuleNotFoundException Instancia do modulo nao foi inicializado ModuleDisposedException Instancia do modulo foi coletado pelo GC ou acionou o Dispose()"
  },
  "api/Propeus.Modulo.Dinamico.ModuleManager.StartDate.html": {
    "href": "api/Propeus.Modulo.Dinamico.ModuleManager.StartDate.html",
    "title": "Property StartDate",
    "keywords": "Property StartDate Namespace Propeus.Modulo.Dinamico Assembly Propeus.Modulo.Dinamico.dll StartDate Retorna data e hora que o gerenciador iniciou public DateTime StartDate { get; } Property Value DateTime"
  },
  "api/Propeus.Modulo.Dinamico.ModuleManager.ToString.html": {
    "href": "api/Propeus.Modulo.Dinamico.ModuleManager.ToString.html",
    "title": "Method ToString",
    "keywords": "Method ToString Namespace Propeus.Modulo.Dinamico Assembly Propeus.Modulo.Dinamico.dll ToString() Exibe informacoes basicas sobre o modulo public override string ToString() Returns string"
  },
  "api/Propeus.Modulo.Dinamico.ModuleManagerExtensions.CreateModuleManager.html": {
    "href": "api/Propeus.Modulo.Dinamico.ModuleManagerExtensions.CreateModuleManager.html",
    "title": "Method CreateModuleManager",
    "keywords": "Method CreateModuleManager Namespace Propeus.Modulo.Dinamico Assembly Propeus.Modulo.Dinamico.dll CreateModuleManager(IModuleManager) Cria uma nova instancia do gereciador public static IModuleManager CreateModuleManager(IModuleManager moduleManagerCore) Parameters moduleManagerCore IModuleManager Returns IModuleManager"
  },
  "api/Propeus.Modulo.Dinamico.ModuleManagerExtensions.CreateModuleManagerDefault.html": {
    "href": "api/Propeus.Modulo.Dinamico.ModuleManagerExtensions.CreateModuleManagerDefault.html",
    "title": "Method CreateModuleManagerDefault",
    "keywords": "Method CreateModuleManagerDefault Namespace Propeus.Modulo.Dinamico Assembly Propeus.Modulo.Dinamico.dll CreateModuleManagerDefault(IModuleManager) Cria uma nova instancia do gereciador com alguns modulos adicionais public static IModuleManager CreateModuleManagerDefault(IModuleManager moduleManagerCore) Parameters moduleManagerCore IModuleManager Returns IModuleManager"
  },
  "api/Propeus.Modulo.Dinamico.ModuleManagerExtensions.html": {
    "href": "api/Propeus.Modulo.Dinamico.ModuleManagerExtensions.html",
    "title": "Class ModuleManagerExtensions",
    "keywords": "Class ModuleManagerExtensions Namespace Propeus.Modulo.Dinamico Assembly Propeus.Modulo.Dinamico.dll public static class ModuleManagerExtensions Inheritance object ModuleManagerExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods CreateModuleManager(IModuleManager) Cria uma nova instancia do gereciador CreateModuleManagerDefault(IModuleManager) Cria uma nova instancia do gereciador com alguns modulos adicionais"
  },
  "api/Propeus.Modulo.Dinamico.Modules.html": {
    "href": "api/Propeus.Modulo.Dinamico.Modules.html",
    "title": "Namespace Propeus.Modulo.Dinamico.Modules",
    "keywords": "Namespace Propeus.Modulo.Dinamico.Modules Classes ListenerModule Modulo para definir ouvintes para o ModuleWatcherModule ModuleWatcherModule Modulo para mapear e atualizar outros modulos em tempo de execucao"
  },
  "api/Propeus.Modulo.Dinamico.Modules.ListenerModule.-ctor.html": {
    "href": "api/Propeus.Modulo.Dinamico.Modules.ListenerModule.-ctor.html",
    "title": "Constructor ListenerModule",
    "keywords": "Constructor ListenerModule Namespace Propeus.Modulo.Dinamico.Modules Assembly Propeus.Modulo.Dinamico.dll ListenerModule(IModuleManager) public ListenerModule(IModuleManager moduleManager) Parameters moduleManager IModuleManager"
  },
  "api/Propeus.Modulo.Dinamico.Modules.ListenerModule.GetAllModules.html": {
    "href": "api/Propeus.Modulo.Dinamico.Modules.ListenerModule.GetAllModules.html",
    "title": "Method GetAllModules",
    "keywords": "Method GetAllModules Namespace Propeus.Modulo.Dinamico.Modules Assembly Propeus.Modulo.Dinamico.dll GetAllModules() Obtem todos tipos de modulos validos public IEnumerable<Type> GetAllModules() Returns IEnumerable<Type>"
  },
  "api/Propeus.Modulo.Dinamico.Modules.ListenerModule.html": {
    "href": "api/Propeus.Modulo.Dinamico.Modules.ListenerModule.html",
    "title": "Class ListenerModule",
    "keywords": "Class ListenerModule Namespace Propeus.Modulo.Dinamico.Modules Assembly Propeus.Modulo.Dinamico.dll Modulo para definir ouvintes para o ModuleWatcherModule [Module] public class ListenerModule : BaseModule, IModule, IBaseModel, IDisposable Inheritance object BaseModel BaseModule ListenerModule Implements IModule IBaseModel IDisposable Inherited Members BaseModule.ToString() BaseModule.IsSingleInstance BaseModel.disposedValue BaseModel.Dispose(bool) BaseModel.Dispose() BaseModel.Version BaseModel.State BaseModel.Name BaseModel.Id BaseModel.ManifestId object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Constructors ListenerModule(IModuleManager) Methods GetAllModules() Obtem todos tipos de modulos validos SetOnLoadModule(Action<Type>) Adiciona evento para escutar eventos de carregamento de modulo SetOnRebuildModule(Action<Type>) Adiciona evento para escutar eventos de regarregamento de modulo SetOnUnloadModule(Action<Type>) Adiciona evento para escutar eventos de descarregamento de modulo"
  },
  "api/Propeus.Modulo.Dinamico.Modules.ListenerModule.SetOnLoadModule.html": {
    "href": "api/Propeus.Modulo.Dinamico.Modules.ListenerModule.SetOnLoadModule.html",
    "title": "Method SetOnLoadModule",
    "keywords": "Method SetOnLoadModule Namespace Propeus.Modulo.Dinamico.Modules Assembly Propeus.Modulo.Dinamico.dll SetOnLoadModule(Action<Type>) Adiciona evento para escutar eventos de carregamento de modulo public void SetOnLoadModule(Action<Type> onLoadModule) Parameters onLoadModule Action<Type>"
  },
  "api/Propeus.Modulo.Dinamico.Modules.ListenerModule.SetOnRebuildModule.html": {
    "href": "api/Propeus.Modulo.Dinamico.Modules.ListenerModule.SetOnRebuildModule.html",
    "title": "Method SetOnRebuildModule",
    "keywords": "Method SetOnRebuildModule Namespace Propeus.Modulo.Dinamico.Modules Assembly Propeus.Modulo.Dinamico.dll SetOnRebuildModule(Action<Type>) Adiciona evento para escutar eventos de regarregamento de modulo public void SetOnRebuildModule(Action<Type> onRebuildModule) Parameters onRebuildModule Action<Type>"
  },
  "api/Propeus.Modulo.Dinamico.Modules.ListenerModule.SetOnUnloadModule.html": {
    "href": "api/Propeus.Modulo.Dinamico.Modules.ListenerModule.SetOnUnloadModule.html",
    "title": "Method SetOnUnloadModule",
    "keywords": "Method SetOnUnloadModule Namespace Propeus.Modulo.Dinamico.Modules Assembly Propeus.Modulo.Dinamico.dll SetOnUnloadModule(Action<Type>) Adiciona evento para escutar eventos de descarregamento de modulo public void SetOnUnloadModule(Action<Type> onUnloadModule) Parameters onUnloadModule Action<Type>"
  },
  "api/Propeus.Modulo.Dinamico.Modules.ModuleWatcherModule.-ctor.html": {
    "href": "api/Propeus.Modulo.Dinamico.Modules.ModuleWatcherModule.-ctor.html",
    "title": "Constructor ModuleWatcherModule",
    "keywords": "Constructor ModuleWatcherModule Namespace Propeus.Modulo.Dinamico.Modules Assembly Propeus.Modulo.Dinamico.dll ModuleWatcherModule(IModuleManager) Construtor padrao public ModuleWatcherModule(IModuleManager moduleManager) Parameters moduleManager IModuleManager Gerenciador de modulos"
  },
  "api/Propeus.Modulo.Dinamico.Modules.ModuleWatcherModule.CriarConfiguracao.html": {
    "href": "api/Propeus.Modulo.Dinamico.Modules.ModuleWatcherModule.CriarConfiguracao.html",
    "title": "Method CriarConfiguracao",
    "keywords": "Method CriarConfiguracao Namespace Propeus.Modulo.Dinamico.Modules Assembly Propeus.Modulo.Dinamico.dll CriarConfiguracao() Metodo para configuracao do modulo public void CriarConfiguracao()"
  },
  "api/Propeus.Modulo.Dinamico.Modules.ModuleWatcherModule.CriarInstancia.html": {
    "href": "api/Propeus.Modulo.Dinamico.Modules.ModuleWatcherModule.CriarInstancia.html",
    "title": "Method CriarInstancia",
    "keywords": "Method CriarInstancia Namespace Propeus.Modulo.Dinamico.Modules Assembly Propeus.Modulo.Dinamico.dll CriarInstancia(IModuleManager) Metodo para criar instancias de objetos essenciais para o funcionamento do modulo public void CriarInstancia(IModuleManager moduleManager) Parameters moduleManager IModuleManager Gerenciador de modulo"
  },
  "api/Propeus.Modulo.Dinamico.Modules.ModuleWatcherModule.GetAllModules.html": {
    "href": "api/Propeus.Modulo.Dinamico.Modules.ModuleWatcherModule.GetAllModules.html",
    "title": "Method GetAllModules",
    "keywords": "Method GetAllModules Namespace Propeus.Modulo.Dinamico.Modules Assembly Propeus.Modulo.Dinamico.dll GetAllModules() Obtem todos tipos de modulos validos public IEnumerable<Type> GetAllModules() Returns IEnumerable<Type>"
  },
  "api/Propeus.Modulo.Dinamico.Modules.ModuleWatcherModule.GetModuleFromContract.html": {
    "href": "api/Propeus.Modulo.Dinamico.Modules.ModuleWatcherModule.GetModuleFromContract.html",
    "title": "Method GetModuleFromContract",
    "keywords": "Method GetModuleFromContract Namespace Propeus.Modulo.Dinamico.Modules Assembly Propeus.Modulo.Dinamico.dll GetModuleFromContract(Type) public Type GetModuleFromContract(Type contractType) Parameters contractType Type Returns Type"
  },
  "api/Propeus.Modulo.Dinamico.Modules.ModuleWatcherModule.html": {
    "href": "api/Propeus.Modulo.Dinamico.Modules.ModuleWatcherModule.html",
    "title": "Class ModuleWatcherModule",
    "keywords": "Class ModuleWatcherModule Namespace Propeus.Modulo.Dinamico.Modules Assembly Propeus.Modulo.Dinamico.dll Modulo para mapear e atualizar outros modulos em tempo de execucao [Module] public class ModuleWatcherModule : BaseModule, IModule, IBaseModel, IDisposable Inheritance object BaseModel BaseModule ModuleWatcherModule Implements IModule IBaseModel IDisposable Inherited Members BaseModule.ToString() BaseModule.IsSingleInstance BaseModel.disposedValue BaseModel.Dispose(bool) BaseModel.Dispose() BaseModel.Version BaseModel.State BaseModel.Name BaseModel.Id BaseModel.ManifestId object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Constructors ModuleWatcherModule(IModuleManager) Construtor padrao Properties this[string] Methods CriarConfiguracao() Metodo para configuracao do modulo CriarInstancia(IModuleManager) Metodo para criar instancias de objetos essenciais para o funcionamento do modulo GetAllModules() Obtem todos tipos de modulos validos GetModuleFromContract(Type) Events OnLoadModule Evento para carregamento de um novo modulo OnReloadModule Evento para recarregamento de um novo modulo OnUnloadModule Evento para descarregamento de um modulo existente"
  },
  "api/Propeus.Modulo.Dinamico.Modules.ModuleWatcherModule.Item.html": {
    "href": "api/Propeus.Modulo.Dinamico.Modules.ModuleWatcherModule.Item.html",
    "title": "Property this",
    "keywords": "Property this Namespace Propeus.Modulo.Dinamico.Modules Assembly Propeus.Modulo.Dinamico.dll this[string] public Type this[string nameType] { get; set; } Parameters nameType string Property Value Type"
  },
  "api/Propeus.Modulo.Dinamico.Modules.ModuleWatcherModule.OnLoadModule.html": {
    "href": "api/Propeus.Modulo.Dinamico.Modules.ModuleWatcherModule.OnLoadModule.html",
    "title": "Event OnLoadModule",
    "keywords": "Event OnLoadModule Namespace Propeus.Modulo.Dinamico.Modules Assembly Propeus.Modulo.Dinamico.dll Evento para carregamento de um novo modulo public event Action<Type> OnLoadModule Returns Action<Type>"
  },
  "api/Propeus.Modulo.Dinamico.Modules.ModuleWatcherModule.OnReloadModule.html": {
    "href": "api/Propeus.Modulo.Dinamico.Modules.ModuleWatcherModule.OnReloadModule.html",
    "title": "Event OnReloadModule",
    "keywords": "Event OnReloadModule Namespace Propeus.Modulo.Dinamico.Modules Assembly Propeus.Modulo.Dinamico.dll Evento para recarregamento de um novo modulo public event Action<Type> OnReloadModule Returns Action<Type>"
  },
  "api/Propeus.Modulo.Dinamico.Modules.ModuleWatcherModule.OnUnloadModule.html": {
    "href": "api/Propeus.Modulo.Dinamico.Modules.ModuleWatcherModule.OnUnloadModule.html",
    "title": "Event OnUnloadModule",
    "keywords": "Event OnUnloadModule Namespace Propeus.Modulo.Dinamico.Modules Assembly Propeus.Modulo.Dinamico.dll Evento para descarregamento de um modulo existente public event Action<Type> OnUnloadModule Returns Action<Type>"
  },
  "api/Propeus.Modulo.Hosting.Contracts.html": {
    "href": "api/Propeus.Modulo.Hosting.Contracts.html",
    "title": "Namespace Propeus.Modulo.Hosting.Contracts",
    "keywords": "Namespace Propeus.Modulo.Hosting.Contracts Interfaces IModuleProviderModuleContract"
  },
  "api/Propeus.Modulo.Hosting.Contracts.IModuleProviderModuleContract.GetAllModules.html": {
    "href": "api/Propeus.Modulo.Hosting.Contracts.IModuleProviderModuleContract.GetAllModules.html",
    "title": "Method GetAllModules",
    "keywords": "Method GetAllModules Namespace Propeus.Modulo.Hosting.Contracts Assembly Propeus.Modulo.Hosting.dll GetAllModules() Obtem todos tipos de modulos validos IEnumerable<Type> GetAllModules() Returns IEnumerable<Type>"
  },
  "api/Propeus.Modulo.Hosting.Contracts.IModuleProviderModuleContract.html": {
    "href": "api/Propeus.Modulo.Hosting.Contracts.IModuleProviderModuleContract.html",
    "title": "Interface IModuleProviderModuleContract",
    "keywords": "Interface IModuleProviderModuleContract Namespace Propeus.Modulo.Hosting.Contracts Assembly Propeus.Modulo.Hosting.dll [ModuleContract(\"ListenerModule\")] public interface IModuleProviderModuleContract : IModule, IBaseModel, IDisposable Inherited Members IModule.IsSingleInstance IBaseModel.Version IBaseModel.State IBaseModel.Name IBaseModel.Id IBaseModel.ManifestId IDisposable.Dispose() Extension Methods Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Methods GetAllModules() Obtem todos tipos de modulos validos SetOnLoadModule(Action<Type>) Adiciona evento para escutar eventos de carregamento de modulo SetOnRebuildModule(Action<Type>) Adiciona evento para escutar eventos de regarregamento de modulo SetOnUnloadModule(Action<Type>) Adiciona evento para escutar eventos de descarregamento de modulo"
  },
  "api/Propeus.Modulo.Hosting.Contracts.IModuleProviderModuleContract.SetOnLoadModule.html": {
    "href": "api/Propeus.Modulo.Hosting.Contracts.IModuleProviderModuleContract.SetOnLoadModule.html",
    "title": "Method SetOnLoadModule",
    "keywords": "Method SetOnLoadModule Namespace Propeus.Modulo.Hosting.Contracts Assembly Propeus.Modulo.Hosting.dll SetOnLoadModule(Action<Type>) Adiciona evento para escutar eventos de carregamento de modulo void SetOnLoadModule(Action<Type> onLoadModule) Parameters onLoadModule Action<Type>"
  },
  "api/Propeus.Modulo.Hosting.Contracts.IModuleProviderModuleContract.SetOnRebuildModule.html": {
    "href": "api/Propeus.Modulo.Hosting.Contracts.IModuleProviderModuleContract.SetOnRebuildModule.html",
    "title": "Method SetOnRebuildModule",
    "keywords": "Method SetOnRebuildModule Namespace Propeus.Modulo.Hosting.Contracts Assembly Propeus.Modulo.Hosting.dll SetOnRebuildModule(Action<Type>) Adiciona evento para escutar eventos de regarregamento de modulo void SetOnRebuildModule(Action<Type> onRebuildModule) Parameters onRebuildModule Action<Type>"
  },
  "api/Propeus.Modulo.Hosting.Contracts.IModuleProviderModuleContract.SetOnUnloadModule.html": {
    "href": "api/Propeus.Modulo.Hosting.Contracts.IModuleProviderModuleContract.SetOnUnloadModule.html",
    "title": "Method SetOnUnloadModule",
    "keywords": "Method SetOnUnloadModule Namespace Propeus.Modulo.Hosting.Contracts Assembly Propeus.Modulo.Hosting.dll SetOnUnloadModule(Action<Type>) Adiciona evento para escutar eventos de descarregamento de modulo void SetOnUnloadModule(Action<Type> onUnloadModule) Parameters onUnloadModule Action<Type>"
  },
  "api/Propeus.Modulo.Hosting.Extensions.ConfigureGerenciador.html": {
    "href": "api/Propeus.Modulo.Hosting.Extensions.ConfigureGerenciador.html",
    "title": "Method ConfigureGerenciador",
    "keywords": "Method ConfigureGerenciador Namespace Propeus.Modulo.Hosting Assembly Propeus.Modulo.Hosting.dll ConfigureGerenciador(IHostBuilder, IModuleManager) Anexa o IModuleManager como um provedor de Injecao de dependencia secundario public static IHostBuilder ConfigureGerenciador(this IHostBuilder configureHostBuilder, IModuleManager gerenciador) Parameters configureHostBuilder IHostBuilder O builder gerenciador IModuleManager O gerenciador a ser anexado na aplicacao Returns IHostBuilder"
  },
  "api/Propeus.Modulo.Hosting.Extensions.html": {
    "href": "api/Propeus.Modulo.Hosting.Extensions.html",
    "title": "Class Extensions",
    "keywords": "Class Extensions Namespace Propeus.Modulo.Hosting Assembly Propeus.Modulo.Hosting.dll public static class Extensions Inheritance object Extensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods ConfigureGerenciador(IHostBuilder, IModuleManager) Anexa o IModuleManager como um provedor de Injecao de dependencia secundario"
  },
  "api/Propeus.Modulo.Hosting.html": {
    "href": "api/Propeus.Modulo.Hosting.html",
    "title": "Namespace Propeus.Modulo.Hosting",
    "keywords": "Namespace Propeus.Modulo.Hosting Namespaces Propeus.Modulo.Hosting.Contracts Propeus.Modulo.Hosting.MS_MVC Propeus.Modulo.Hosting.ViewEngine Classes Extensions ModuleActionDescriptorChangeProvider ModuloController ModuloServiceProviderFactory"
  },
  "api/Propeus.Modulo.Hosting.ModuleActionDescriptorChangeProvider.-ctor.html": {
    "href": "api/Propeus.Modulo.Hosting.ModuleActionDescriptorChangeProvider.-ctor.html",
    "title": "Constructor ModuleActionDescriptorChangeProvider",
    "keywords": "Constructor ModuleActionDescriptorChangeProvider Namespace Propeus.Modulo.Hosting Assembly Propeus.Modulo.Hosting.dll ModuleActionDescriptorChangeProvider() public ModuleActionDescriptorChangeProvider()"
  },
  "api/Propeus.Modulo.Hosting.ModuleActionDescriptorChangeProvider.GetChangeToken.html": {
    "href": "api/Propeus.Modulo.Hosting.ModuleActionDescriptorChangeProvider.GetChangeToken.html",
    "title": "Method GetChangeToken",
    "keywords": "Method GetChangeToken Namespace Propeus.Modulo.Hosting Assembly Propeus.Modulo.Hosting.dll GetChangeToken() public IChangeToken GetChangeToken() Returns IChangeToken"
  },
  "api/Propeus.Modulo.Hosting.ModuleActionDescriptorChangeProvider.HasChanged.html": {
    "href": "api/Propeus.Modulo.Hosting.ModuleActionDescriptorChangeProvider.HasChanged.html",
    "title": "Property HasChanged",
    "keywords": "Property HasChanged Namespace Propeus.Modulo.Hosting Assembly Propeus.Modulo.Hosting.dll HasChanged public bool HasChanged { get; set; } Property Value bool"
  },
  "api/Propeus.Modulo.Hosting.ModuleActionDescriptorChangeProvider.html": {
    "href": "api/Propeus.Modulo.Hosting.ModuleActionDescriptorChangeProvider.html",
    "title": "Class ModuleActionDescriptorChangeProvider",
    "keywords": "Class ModuleActionDescriptorChangeProvider Namespace Propeus.Modulo.Hosting Assembly Propeus.Modulo.Hosting.dll public class ModuleActionDescriptorChangeProvider : IActionDescriptorChangeProvider Inheritance object ModuleActionDescriptorChangeProvider Implements IActionDescriptorChangeProvider Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Constructors ModuleActionDescriptorChangeProvider() Properties HasChanged Instance TokenSource Methods GetChangeToken()"
  },
  "api/Propeus.Modulo.Hosting.ModuleActionDescriptorChangeProvider.Instance.html": {
    "href": "api/Propeus.Modulo.Hosting.ModuleActionDescriptorChangeProvider.Instance.html",
    "title": "Property Instance",
    "keywords": "Property Instance Namespace Propeus.Modulo.Hosting Assembly Propeus.Modulo.Hosting.dll Instance public static ModuleActionDescriptorChangeProvider Instance { get; } Property Value ModuleActionDescriptorChangeProvider"
  },
  "api/Propeus.Modulo.Hosting.ModuleActionDescriptorChangeProvider.TokenSource.html": {
    "href": "api/Propeus.Modulo.Hosting.ModuleActionDescriptorChangeProvider.TokenSource.html",
    "title": "Property TokenSource",
    "keywords": "Property TokenSource Namespace Propeus.Modulo.Hosting Assembly Propeus.Modulo.Hosting.dll TokenSource public CancellationTokenSource TokenSource { get; } Property Value CancellationTokenSource"
  },
  "api/Propeus.Modulo.Hosting.ModuloController.-ctor.html": {
    "href": "api/Propeus.Modulo.Hosting.ModuloController.-ctor.html",
    "title": "Constructor ModuloController",
    "keywords": "Constructor ModuloController Namespace Propeus.Modulo.Hosting Assembly Propeus.Modulo.Hosting.dll ModuloController() public ModuloController()"
  },
  "api/Propeus.Modulo.Hosting.ModuloController.html": {
    "href": "api/Propeus.Modulo.Hosting.ModuloController.html",
    "title": "Class ModuloController",
    "keywords": "Class ModuloController Namespace Propeus.Modulo.Hosting Assembly Propeus.Modulo.Hosting.dll [Module] public class ModuloController : ModuloControllerBase, IModule, IBaseModel, IDisposable, IActionFilter, IAsyncActionFilter, IFilterMetadata Inheritance object BaseModel BaseModule ModuloControllerBase ModuloController Implements IModule IBaseModel IDisposable IActionFilter IAsyncActionFilter IFilterMetadata Inherited Members ModuloControllerBase.StatusCode(int) ModuloControllerBase.StatusCode(int, object) ModuloControllerBase.Content(string) ModuloControllerBase.Content(string, string) ModuloControllerBase.Content(string, string, Encoding) ModuloControllerBase.Content(string, MediaTypeHeaderValue) ModuloControllerBase.NoContent() ModuloControllerBase.Ok() ModuloControllerBase.Ok(object) ModuloControllerBase.Redirect(string) ModuloControllerBase.RedirectPermanent(string) ModuloControllerBase.RedirectPreserveMethod(string) ModuloControllerBase.RedirectPermanentPreserveMethod(string) ModuloControllerBase.LocalRedirect(string) ModuloControllerBase.LocalRedirectPermanent(string) ModuloControllerBase.LocalRedirectPreserveMethod(string) ModuloControllerBase.LocalRedirectPermanentPreserveMethod(string) ModuloControllerBase.RedirectToAction() ModuloControllerBase.RedirectToAction(string) ModuloControllerBase.RedirectToAction(string, object) ModuloControllerBase.RedirectToAction(string, string) ModuloControllerBase.RedirectToAction(string, string, object) ModuloControllerBase.RedirectToAction(string, string, string) ModuloControllerBase.RedirectToAction(string, string, object, string) ModuloControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ModuloControllerBase.RedirectToActionPermanent(string) ModuloControllerBase.RedirectToActionPermanent(string, object) ModuloControllerBase.RedirectToActionPermanent(string, string) ModuloControllerBase.RedirectToActionPermanent(string, string, string) ModuloControllerBase.RedirectToActionPermanent(string, string, object) ModuloControllerBase.RedirectToActionPermanent(string, string, object, string) ModuloControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ModuloControllerBase.RedirectToRoute(string) ModuloControllerBase.RedirectToRoute(object) ModuloControllerBase.RedirectToRoute(string, object) ModuloControllerBase.RedirectToRoute(string, string) ModuloControllerBase.RedirectToRoute(string, object, string) ModuloControllerBase.RedirectToRoutePreserveMethod(string, object, string) ModuloControllerBase.RedirectToRoutePermanent(string) ModuloControllerBase.RedirectToRoutePermanent(object) ModuloControllerBase.RedirectToRoutePermanent(string, object) ModuloControllerBase.RedirectToRoutePermanent(string, string) ModuloControllerBase.RedirectToRoutePermanent(string, object, string) ModuloControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ModuloControllerBase.RedirectToPage(string) ModuloControllerBase.RedirectToPage(string, object) ModuloControllerBase.RedirectToPage(string, string) ModuloControllerBase.RedirectToPage(string, string, object) ModuloControllerBase.RedirectToPage(string, string, string) ModuloControllerBase.RedirectToPage(string, string, object, string) ModuloControllerBase.RedirectToPagePermanent(string) ModuloControllerBase.RedirectToPagePermanent(string, object) ModuloControllerBase.RedirectToPagePermanent(string, string) ModuloControllerBase.RedirectToPagePermanent(string, string, string) ModuloControllerBase.RedirectToPagePermanent(string, string, object, string) ModuloControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ModuloControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ModuloControllerBase.File(byte[], string) ModuloControllerBase.File(byte[], string, bool) ModuloControllerBase.File(byte[], string, string) ModuloControllerBase.File(byte[], string, string, bool) ModuloControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ModuloControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ModuloControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ModuloControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ModuloControllerBase.File(Stream, string) ModuloControllerBase.File(Stream, string, bool) ModuloControllerBase.File(Stream, string, string) ModuloControllerBase.File(Stream, string, string, bool) ModuloControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ModuloControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ModuloControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ModuloControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ModuloControllerBase.File(string, string) ModuloControllerBase.File(string, string, bool) ModuloControllerBase.File(string, string, string) ModuloControllerBase.File(string, string, string, bool) ModuloControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ModuloControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ModuloControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ModuloControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ModuloControllerBase.PhysicalFile(string, string) ModuloControllerBase.PhysicalFile(string, string, bool) ModuloControllerBase.PhysicalFile(string, string, string) ModuloControllerBase.PhysicalFile(string, string, string, bool) ModuloControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ModuloControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ModuloControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ModuloControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ModuloControllerBase.Unauthorized() ModuloControllerBase.Unauthorized(object) ModuloControllerBase.NotFound() ModuloControllerBase.NotFound(object) ModuloControllerBase.BadRequest() ModuloControllerBase.BadRequest(object) ModuloControllerBase.BadRequest(ModelStateDictionary) ModuloControllerBase.UnprocessableEntity() ModuloControllerBase.UnprocessableEntity(object) ModuloControllerBase.UnprocessableEntity(ModelStateDictionary) ModuloControllerBase.Conflict() ModuloControllerBase.Conflict(object) ModuloControllerBase.Conflict(ModelStateDictionary) ModuloControllerBase.ValidationProblem(ValidationProblemDetails) ModuloControllerBase.ValidationProblem(ModelStateDictionary) ModuloControllerBase.ValidationProblem() ModuloControllerBase.Created(string, object) ModuloControllerBase.Created(Uri, object) ModuloControllerBase.CreatedAtAction(string, object) ModuloControllerBase.CreatedAtAction(string, object, object) ModuloControllerBase.CreatedAtAction(string, string, object, object) ModuloControllerBase.CreatedAtRoute(string, object) ModuloControllerBase.CreatedAtRoute(object, object) ModuloControllerBase.CreatedAtRoute(string, object, object) ModuloControllerBase.Accepted() ModuloControllerBase.Accepted(object) ModuloControllerBase.Accepted(Uri) ModuloControllerBase.Accepted(string) ModuloControllerBase.Accepted(string, object) ModuloControllerBase.Accepted(Uri, object) ModuloControllerBase.AcceptedAtAction(string) ModuloControllerBase.AcceptedAtAction(string, string) ModuloControllerBase.AcceptedAtAction(string, object) ModuloControllerBase.AcceptedAtAction(string, string, object) ModuloControllerBase.AcceptedAtAction(string, object, object) ModuloControllerBase.AcceptedAtAction(string, string, object, object) ModuloControllerBase.AcceptedAtRoute(object) ModuloControllerBase.AcceptedAtRoute(string) ModuloControllerBase.AcceptedAtRoute(string, object) ModuloControllerBase.AcceptedAtRoute(object, object) ModuloControllerBase.AcceptedAtRoute(string, object, object) ModuloControllerBase.Challenge() ModuloControllerBase.Challenge(params string[]) ModuloControllerBase.Challenge(AuthenticationProperties) ModuloControllerBase.Challenge(AuthenticationProperties, params string[]) ModuloControllerBase.Forbid() ModuloControllerBase.Forbid(params string[]) ModuloControllerBase.Forbid(AuthenticationProperties) ModuloControllerBase.Forbid(AuthenticationProperties, params string[]) ModuloControllerBase.SignIn(ClaimsPrincipal, string) ModuloControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ModuloControllerBase.SignOut(params string[]) ModuloControllerBase.SignOut(AuthenticationProperties, params string[]) ModuloControllerBase.TryUpdateModelAsync<TModel>(TModel) ModuloControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ModuloControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ModuloControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ModuloControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ModuloControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ModuloControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ModuloControllerBase.TryUpdateModelAsync(object, Type, string) ModuloControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ModuloControllerBase.TryValidateModel(object) ModuloControllerBase.TryValidateModel(object, string) ModuloControllerBase.HttpContext ModuloControllerBase.Request ModuloControllerBase.Response ModuloControllerBase.RouteData ModuloControllerBase.ModelState ModuloControllerBase.ControllerContext ModuloControllerBase.MetadataProvider ModuloControllerBase.ModelBinderFactory ModuloControllerBase.Url ModuloControllerBase.ObjectValidator ModuloControllerBase.User BaseModule.ToString() BaseModule.IsSingleInstance BaseModel.disposedValue BaseModel.Dispose(bool) BaseModel.Dispose() BaseModel.Version BaseModel.State BaseModel.Name BaseModel.Id BaseModel.ManifestId object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Constructors ModuloController() Properties TempData ViewBag ViewData Methods Json(object) Json(object, JsonSerializerSettings) OnActionExecuted(ActionExecutedContext) OnActionExecuting(ActionExecutingContext) OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) PartialView() PartialView(object) PartialView(string) PartialView(string, object) View() View(object) View(string) View(string, object) ViewComponent(string) ViewComponent(string, object) ViewComponent(Type) ViewComponent(Type, object)"
  },
  "api/Propeus.Modulo.Hosting.ModuloController.Json.html": {
    "href": "api/Propeus.Modulo.Hosting.ModuloController.Json.html",
    "title": "Method Json",
    "keywords": "Method Json Namespace Propeus.Modulo.Hosting Assembly Propeus.Modulo.Hosting.dll Json(object) [NonAction] public virtual JsonResult Json(object data) Parameters data object Returns JsonResult Json(object, JsonSerializerSettings) [NonAction] public virtual JsonResult Json(object data, JsonSerializerSettings serializerSettings) Parameters data object serializerSettings JsonSerializerSettings Returns JsonResult"
  },
  "api/Propeus.Modulo.Hosting.ModuloController.OnActionExecuted.html": {
    "href": "api/Propeus.Modulo.Hosting.ModuloController.OnActionExecuted.html",
    "title": "Method OnActionExecuted",
    "keywords": "Method OnActionExecuted Namespace Propeus.Modulo.Hosting Assembly Propeus.Modulo.Hosting.dll OnActionExecuted(ActionExecutedContext) [NonAction] public virtual void OnActionExecuted(ActionExecutedContext context) Parameters context ActionExecutedContext"
  },
  "api/Propeus.Modulo.Hosting.ModuloController.OnActionExecuting.html": {
    "href": "api/Propeus.Modulo.Hosting.ModuloController.OnActionExecuting.html",
    "title": "Method OnActionExecuting",
    "keywords": "Method OnActionExecuting Namespace Propeus.Modulo.Hosting Assembly Propeus.Modulo.Hosting.dll OnActionExecuting(ActionExecutingContext) [NonAction] public virtual void OnActionExecuting(ActionExecutingContext context) Parameters context ActionExecutingContext"
  },
  "api/Propeus.Modulo.Hosting.ModuloController.OnActionExecutionAsync.html": {
    "href": "api/Propeus.Modulo.Hosting.ModuloController.OnActionExecutionAsync.html",
    "title": "Method OnActionExecutionAsync",
    "keywords": "Method OnActionExecutionAsync Namespace Propeus.Modulo.Hosting Assembly Propeus.Modulo.Hosting.dll OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) [NonAction] public virtual Task OnActionExecutionAsync(ActionExecutingContext context, ActionExecutionDelegate next) Parameters context ActionExecutingContext next ActionExecutionDelegate Returns Task"
  },
  "api/Propeus.Modulo.Hosting.ModuloController.PartialView.html": {
    "href": "api/Propeus.Modulo.Hosting.ModuloController.PartialView.html",
    "title": "Method PartialView",
    "keywords": "Method PartialView Namespace Propeus.Modulo.Hosting Assembly Propeus.Modulo.Hosting.dll PartialView() [NonAction] public virtual PartialViewResult PartialView() Returns PartialViewResult PartialView(string) [NonAction] public virtual PartialViewResult PartialView(string viewName) Parameters viewName string Returns PartialViewResult PartialView(object) [NonAction] public virtual PartialViewResult PartialView(object model) Parameters model object Returns PartialViewResult PartialView(string, object) [NonAction] public virtual PartialViewResult PartialView(string viewName, object model) Parameters viewName string model object Returns PartialViewResult"
  },
  "api/Propeus.Modulo.Hosting.ModuloController.TempData.html": {
    "href": "api/Propeus.Modulo.Hosting.ModuloController.TempData.html",
    "title": "Property TempData",
    "keywords": "Property TempData Namespace Propeus.Modulo.Hosting Assembly Propeus.Modulo.Hosting.dll TempData public ITempDataDictionary TempData { get; set; } Property Value ITempDataDictionary"
  },
  "api/Propeus.Modulo.Hosting.ModuloController.View.html": {
    "href": "api/Propeus.Modulo.Hosting.ModuloController.View.html",
    "title": "Method View",
    "keywords": "Method View Namespace Propeus.Modulo.Hosting Assembly Propeus.Modulo.Hosting.dll View() [NonAction] public virtual ViewResult View() Returns ViewResult View(string) [NonAction] public virtual ViewResult View(string viewName) Parameters viewName string Returns ViewResult View(object) [NonAction] public virtual ViewResult View(object model) Parameters model object Returns ViewResult View(string, object) [NonAction] public virtual ViewResult View(string viewName, object model) Parameters viewName string model object Returns ViewResult"
  },
  "api/Propeus.Modulo.Hosting.ModuloController.ViewBag.html": {
    "href": "api/Propeus.Modulo.Hosting.ModuloController.ViewBag.html",
    "title": "Property ViewBag",
    "keywords": "Property ViewBag Namespace Propeus.Modulo.Hosting Assembly Propeus.Modulo.Hosting.dll ViewBag public dynamic ViewBag { get; } Property Value dynamic"
  },
  "api/Propeus.Modulo.Hosting.ModuloController.ViewComponent.html": {
    "href": "api/Propeus.Modulo.Hosting.ModuloController.ViewComponent.html",
    "title": "Method ViewComponent",
    "keywords": "Method ViewComponent Namespace Propeus.Modulo.Hosting Assembly Propeus.Modulo.Hosting.dll ViewComponent(string) [NonAction] public virtual ViewComponentResult ViewComponent(string componentName) Parameters componentName string Returns ViewComponentResult ViewComponent(Type) [NonAction] public virtual ViewComponentResult ViewComponent(Type componentType) Parameters componentType Type Returns ViewComponentResult ViewComponent(string, object) [NonAction] public virtual ViewComponentResult ViewComponent(string componentName, object arguments) Parameters componentName string arguments object Returns ViewComponentResult ViewComponent(Type, object) [NonAction] public virtual ViewComponentResult ViewComponent(Type componentType, object arguments) Parameters componentType Type arguments object Returns ViewComponentResult"
  },
  "api/Propeus.Modulo.Hosting.ModuloController.ViewData.html": {
    "href": "api/Propeus.Modulo.Hosting.ModuloController.ViewData.html",
    "title": "Property ViewData",
    "keywords": "Property ViewData Namespace Propeus.Modulo.Hosting Assembly Propeus.Modulo.Hosting.dll ViewData [ViewDataDictionary] public ViewDataDictionary ViewData { get; set; } Property Value ViewDataDictionary"
  },
  "api/Propeus.Modulo.Hosting.ModuloServiceProviderFactory.-ctor.html": {
    "href": "api/Propeus.Modulo.Hosting.ModuloServiceProviderFactory.-ctor.html",
    "title": "Constructor ModuloServiceProviderFactory",
    "keywords": "Constructor ModuloServiceProviderFactory Namespace Propeus.Modulo.Hosting Assembly Propeus.Modulo.Hosting.dll ModuloServiceProviderFactory() public ModuloServiceProviderFactory()"
  },
  "api/Propeus.Modulo.Hosting.ModuloServiceProviderFactory.CreateBuilder.html": {
    "href": "api/Propeus.Modulo.Hosting.ModuloServiceProviderFactory.CreateBuilder.html",
    "title": "Method CreateBuilder",
    "keywords": "Method CreateBuilder Namespace Propeus.Modulo.Hosting Assembly Propeus.Modulo.Hosting.dll CreateBuilder(IServiceCollection) public IServiceCollection CreateBuilder(IServiceCollection services) Parameters services IServiceCollection Returns IServiceCollection"
  },
  "api/Propeus.Modulo.Hosting.ModuloServiceProviderFactory.CreateServiceProvider.html": {
    "href": "api/Propeus.Modulo.Hosting.ModuloServiceProviderFactory.CreateServiceProvider.html",
    "title": "Method CreateServiceProvider",
    "keywords": "Method CreateServiceProvider Namespace Propeus.Modulo.Hosting Assembly Propeus.Modulo.Hosting.dll CreateServiceProvider(IServiceCollection) public IServiceProvider CreateServiceProvider(IServiceCollection containerBuilder) Parameters containerBuilder IServiceCollection Returns IServiceProvider"
  },
  "api/Propeus.Modulo.Hosting.ModuloServiceProviderFactory.html": {
    "href": "api/Propeus.Modulo.Hosting.ModuloServiceProviderFactory.html",
    "title": "Class ModuloServiceProviderFactory",
    "keywords": "Class ModuloServiceProviderFactory Namespace Propeus.Modulo.Hosting Assembly Propeus.Modulo.Hosting.dll public class ModuloServiceProviderFactory : IServiceProviderFactory<IServiceCollection> Inheritance object ModuloServiceProviderFactory Implements IServiceProviderFactory<IServiceCollection> Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Constructors ModuloServiceProviderFactory() Methods CreateBuilder(IServiceCollection) CreateServiceProvider(IServiceCollection)"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.html",
    "title": "Namespace Propeus.Modulo.Hosting.MS_MVC",
    "keywords": "Namespace Propeus.Modulo.Hosting.MS_MVC Classes ModuloControllerBase"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.-ctor.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.-ctor.html",
    "title": "Constructor ModuloControllerBase",
    "keywords": "Constructor ModuloControllerBase Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll ModuloControllerBase() public ModuloControllerBase()"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.Accepted.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.Accepted.html",
    "title": "Method Accepted",
    "keywords": "Method Accepted Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll Accepted() [NonAction] public virtual AcceptedResult Accepted() Returns AcceptedResult Accepted(object?) [NonAction] public virtual AcceptedResult Accepted(object? value) Parameters value object Returns AcceptedResult Accepted(Uri) [NonAction] public virtual AcceptedResult Accepted(Uri uri) Parameters uri Uri Returns AcceptedResult Accepted(string) [NonAction] public virtual AcceptedResult Accepted(string uri) Parameters uri string Returns AcceptedResult Accepted(string, object?) [NonAction] public virtual AcceptedResult Accepted(string uri, object? value) Parameters uri string value object Returns AcceptedResult Accepted(Uri, object?) [NonAction] public virtual AcceptedResult Accepted(Uri uri, object? value) Parameters uri Uri value object Returns AcceptedResult"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.AcceptedAtAction.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.AcceptedAtAction.html",
    "title": "Method AcceptedAtAction",
    "keywords": "Method AcceptedAtAction Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll AcceptedAtAction(string) [NonAction] public virtual AcceptedAtActionResult AcceptedAtAction(string actionName) Parameters actionName string Returns AcceptedAtActionResult AcceptedAtAction(string, string) [NonAction] public virtual AcceptedAtActionResult AcceptedAtAction(string actionName, string controllerName) Parameters actionName string controllerName string Returns AcceptedAtActionResult AcceptedAtAction(string, object?) [NonAction] public virtual AcceptedAtActionResult AcceptedAtAction(string actionName, object? value) Parameters actionName string value object Returns AcceptedAtActionResult AcceptedAtAction(string, string?, object?) [NonAction] public virtual AcceptedAtActionResult AcceptedAtAction(string actionName, string? controllerName, object? routeValues) Parameters actionName string controllerName string routeValues object Returns AcceptedAtActionResult AcceptedAtAction(string, object, object?) [NonAction] public virtual AcceptedAtActionResult AcceptedAtAction(string actionName, object routeValues, object? value) Parameters actionName string routeValues object value object Returns AcceptedAtActionResult AcceptedAtAction(string, string?, object?, object?) [NonAction] public virtual AcceptedAtActionResult AcceptedAtAction(string actionName, string? controllerName, object? routeValues, object? value) Parameters actionName string controllerName string routeValues object value object Returns AcceptedAtActionResult"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.AcceptedAtRoute.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.AcceptedAtRoute.html",
    "title": "Method AcceptedAtRoute",
    "keywords": "Method AcceptedAtRoute Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll AcceptedAtRoute(object?) [NonAction] public virtual AcceptedAtRouteResult AcceptedAtRoute(object? routeValues) Parameters routeValues object Returns AcceptedAtRouteResult AcceptedAtRoute(string) [NonAction] public virtual AcceptedAtRouteResult AcceptedAtRoute(string routeName) Parameters routeName string Returns AcceptedAtRouteResult AcceptedAtRoute(string, object) [NonAction] public virtual AcceptedAtRouteResult AcceptedAtRoute(string routeName, object routeValues) Parameters routeName string routeValues object Returns AcceptedAtRouteResult AcceptedAtRoute(object, object?) [NonAction] public virtual AcceptedAtRouteResult AcceptedAtRoute(object routeValues, object? value) Parameters routeValues object value object Returns AcceptedAtRouteResult AcceptedAtRoute(string?, object?, object?) [NonAction] public virtual AcceptedAtRouteResult AcceptedAtRoute(string? routeName, object? routeValues, object? value) Parameters routeName string routeValues object value object Returns AcceptedAtRouteResult"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.BadRequest.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.BadRequest.html",
    "title": "Method BadRequest",
    "keywords": "Method BadRequest Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll BadRequest() [NonAction] public virtual BadRequestResult BadRequest() Returns BadRequestResult BadRequest(object?) [NonAction] public virtual BadRequestObjectResult BadRequest(object? error) Parameters error object Returns BadRequestObjectResult BadRequest(ModelStateDictionary) [NonAction] public virtual BadRequestObjectResult BadRequest(ModelStateDictionary modelState) Parameters modelState ModelStateDictionary Returns BadRequestObjectResult"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.Challenge.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.Challenge.html",
    "title": "Method Challenge",
    "keywords": "Method Challenge Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll Challenge() [NonAction] public virtual ChallengeResult Challenge() Returns ChallengeResult Challenge(params string[]) [NonAction] public virtual ChallengeResult Challenge(params string[] authenticationSchemes) Parameters authenticationSchemes string[] Returns ChallengeResult Challenge(AuthenticationProperties) [NonAction] public virtual ChallengeResult Challenge(AuthenticationProperties properties) Parameters properties AuthenticationProperties Returns ChallengeResult Challenge(AuthenticationProperties, params string[]) [NonAction] public virtual ChallengeResult Challenge(AuthenticationProperties properties, params string[] authenticationSchemes) Parameters properties AuthenticationProperties authenticationSchemes string[] Returns ChallengeResult"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.Conflict.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.Conflict.html",
    "title": "Method Conflict",
    "keywords": "Method Conflict Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll Conflict() [NonAction] public virtual ConflictResult Conflict() Returns ConflictResult Conflict(object?) [NonAction] public virtual ConflictObjectResult Conflict(object? error) Parameters error object Returns ConflictObjectResult Conflict(ModelStateDictionary) [NonAction] public virtual ConflictObjectResult Conflict(ModelStateDictionary modelState) Parameters modelState ModelStateDictionary Returns ConflictObjectResult"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.Content.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.Content.html",
    "title": "Method Content",
    "keywords": "Method Content Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll Content(string) [NonAction] public virtual ContentResult Content(string content) Parameters content string Returns ContentResult Content(string, string) [NonAction] public virtual ContentResult Content(string content, string contentType) Parameters content string contentType string Returns ContentResult Content(string, string, Encoding) [NonAction] public virtual ContentResult Content(string content, string contentType, Encoding contentEncoding) Parameters content string contentType string contentEncoding Encoding Returns ContentResult Content(string, MediaTypeHeaderValue) [NonAction] public virtual ContentResult Content(string content, MediaTypeHeaderValue contentType) Parameters content string contentType MediaTypeHeaderValue Returns ContentResult"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.ControllerContext.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.ControllerContext.html",
    "title": "Property ControllerContext",
    "keywords": "Property ControllerContext Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll ControllerContext [ControllerContext] public ControllerContext ControllerContext { get; set; } Property Value ControllerContext"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.Created.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.Created.html",
    "title": "Method Created",
    "keywords": "Method Created Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll Created(string, object?) [NonAction] public virtual CreatedResult Created(string uri, object? value) Parameters uri string value object Returns CreatedResult Created(Uri, object?) [NonAction] public virtual CreatedResult Created(Uri uri, object? value) Parameters uri Uri value object Returns CreatedResult"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.CreatedAtAction.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.CreatedAtAction.html",
    "title": "Method CreatedAtAction",
    "keywords": "Method CreatedAtAction Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll CreatedAtAction(string, object?) [NonAction] public virtual CreatedAtActionResult CreatedAtAction(string actionName, object? value) Parameters actionName string value object Returns CreatedAtActionResult CreatedAtAction(string, object, object?) [NonAction] public virtual CreatedAtActionResult CreatedAtAction(string actionName, object routeValues, object? value) Parameters actionName string routeValues object value object Returns CreatedAtActionResult CreatedAtAction(string, string, object, object?) [NonAction] public virtual CreatedAtActionResult CreatedAtAction(string actionName, string controllerName, object routeValues, object? value) Parameters actionName string controllerName string routeValues object value object Returns CreatedAtActionResult"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.CreatedAtRoute.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.CreatedAtRoute.html",
    "title": "Method CreatedAtRoute",
    "keywords": "Method CreatedAtRoute Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll CreatedAtRoute(string, object?) [NonAction] public virtual CreatedAtRouteResult CreatedAtRoute(string routeName, object? value) Parameters routeName string value object Returns CreatedAtRouteResult CreatedAtRoute(object, object?) [NonAction] public virtual CreatedAtRouteResult CreatedAtRoute(object routeValues, object? value) Parameters routeValues object value object Returns CreatedAtRouteResult CreatedAtRoute(string, object, object?) [NonAction] public virtual CreatedAtRouteResult CreatedAtRoute(string routeName, object routeValues, object? value) Parameters routeName string routeValues object value object Returns CreatedAtRouteResult"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.File.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.File.html",
    "title": "Method File",
    "keywords": "Method File Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll File(byte[], string) [NonAction] public virtual FileContentResult File(byte[] fileContents, string contentType) Parameters fileContents byte[] contentType string Returns FileContentResult File(byte[], string, bool) [NonAction] public virtual FileContentResult File(byte[] fileContents, string contentType, bool enableRangeProcessing) Parameters fileContents byte[] contentType string enableRangeProcessing bool Returns FileContentResult File(byte[], string, string) [NonAction] public virtual FileContentResult File(byte[] fileContents, string contentType, string fileDownloadName) Parameters fileContents byte[] contentType string fileDownloadName string Returns FileContentResult File(byte[], string, string, bool) [NonAction] public virtual FileContentResult File(byte[] fileContents, string contentType, string fileDownloadName, bool enableRangeProcessing) Parameters fileContents byte[] contentType string fileDownloadName string enableRangeProcessing bool Returns FileContentResult File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) [NonAction] public virtual FileContentResult File(byte[] fileContents, string contentType, DateTimeOffset? lastModified, EntityTagHeaderValue entityTag) Parameters fileContents byte[] contentType string lastModified DateTimeOffset? entityTag EntityTagHeaderValue Returns FileContentResult File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) [NonAction] public virtual FileContentResult File(byte[] fileContents, string contentType, DateTimeOffset? lastModified, EntityTagHeaderValue entityTag, bool enableRangeProcessing) Parameters fileContents byte[] contentType string lastModified DateTimeOffset? entityTag EntityTagHeaderValue enableRangeProcessing bool Returns FileContentResult File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) [NonAction] public virtual FileContentResult File(byte[] fileContents, string contentType, string fileDownloadName, DateTimeOffset? lastModified, EntityTagHeaderValue entityTag) Parameters fileContents byte[] contentType string fileDownloadName string lastModified DateTimeOffset? entityTag EntityTagHeaderValue Returns FileContentResult File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) [NonAction] public virtual FileContentResult File(byte[] fileContents, string contentType, string fileDownloadName, DateTimeOffset? lastModified, EntityTagHeaderValue entityTag, bool enableRangeProcessing) Parameters fileContents byte[] contentType string fileDownloadName string lastModified DateTimeOffset? entityTag EntityTagHeaderValue enableRangeProcessing bool Returns FileContentResult File(Stream, string) [NonAction] public virtual FileStreamResult File(Stream fileStream, string contentType) Parameters fileStream Stream contentType string Returns FileStreamResult File(Stream, string, bool) [NonAction] public virtual FileStreamResult File(Stream fileStream, string contentType, bool enableRangeProcessing) Parameters fileStream Stream contentType string enableRangeProcessing bool Returns FileStreamResult File(Stream, string, string) [NonAction] public virtual FileStreamResult File(Stream fileStream, string contentType, string fileDownloadName) Parameters fileStream Stream contentType string fileDownloadName string Returns FileStreamResult File(Stream, string, string, bool) [NonAction] public virtual FileStreamResult File(Stream fileStream, string contentType, string fileDownloadName, bool enableRangeProcessing) Parameters fileStream Stream contentType string fileDownloadName string enableRangeProcessing bool Returns FileStreamResult File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) [NonAction] public virtual FileStreamResult File(Stream fileStream, string contentType, DateTimeOffset? lastModified, EntityTagHeaderValue entityTag) Parameters fileStream Stream contentType string lastModified DateTimeOffset? entityTag EntityTagHeaderValue Returns FileStreamResult File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) [NonAction] public virtual FileStreamResult File(Stream fileStream, string contentType, DateTimeOffset? lastModified, EntityTagHeaderValue entityTag, bool enableRangeProcessing) Parameters fileStream Stream contentType string lastModified DateTimeOffset? entityTag EntityTagHeaderValue enableRangeProcessing bool Returns FileStreamResult File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) [NonAction] public virtual FileStreamResult File(Stream fileStream, string contentType, string fileDownloadName, DateTimeOffset? lastModified, EntityTagHeaderValue entityTag) Parameters fileStream Stream contentType string fileDownloadName string lastModified DateTimeOffset? entityTag EntityTagHeaderValue Returns FileStreamResult File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) [NonAction] public virtual FileStreamResult File(Stream fileStream, string contentType, string fileDownloadName, DateTimeOffset? lastModified, EntityTagHeaderValue entityTag, bool enableRangeProcessing) Parameters fileStream Stream contentType string fileDownloadName string lastModified DateTimeOffset? entityTag EntityTagHeaderValue enableRangeProcessing bool Returns FileStreamResult File(string, string) [NonAction] public virtual VirtualFileResult File(string virtualPath, string contentType) Parameters virtualPath string contentType string Returns VirtualFileResult File(string, string, bool) [NonAction] public virtual VirtualFileResult File(string virtualPath, string contentType, bool enableRangeProcessing) Parameters virtualPath string contentType string enableRangeProcessing bool Returns VirtualFileResult File(string, string, string) [NonAction] public virtual VirtualFileResult File(string virtualPath, string contentType, string fileDownloadName) Parameters virtualPath string contentType string fileDownloadName string Returns VirtualFileResult File(string, string, string, bool) [NonAction] public virtual VirtualFileResult File(string virtualPath, string contentType, string fileDownloadName, bool enableRangeProcessing) Parameters virtualPath string contentType string fileDownloadName string enableRangeProcessing bool Returns VirtualFileResult File(string, string, DateTimeOffset?, EntityTagHeaderValue) [NonAction] public virtual VirtualFileResult File(string virtualPath, string contentType, DateTimeOffset? lastModified, EntityTagHeaderValue entityTag) Parameters virtualPath string contentType string lastModified DateTimeOffset? entityTag EntityTagHeaderValue Returns VirtualFileResult File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) [NonAction] public virtual VirtualFileResult File(string virtualPath, string contentType, DateTimeOffset? lastModified, EntityTagHeaderValue entityTag, bool enableRangeProcessing) Parameters virtualPath string contentType string lastModified DateTimeOffset? entityTag EntityTagHeaderValue enableRangeProcessing bool Returns VirtualFileResult File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) [NonAction] public virtual VirtualFileResult File(string virtualPath, string contentType, string fileDownloadName, DateTimeOffset? lastModified, EntityTagHeaderValue entityTag) Parameters virtualPath string contentType string fileDownloadName string lastModified DateTimeOffset? entityTag EntityTagHeaderValue Returns VirtualFileResult File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) [NonAction] public virtual VirtualFileResult File(string virtualPath, string contentType, string fileDownloadName, DateTimeOffset? lastModified, EntityTagHeaderValue entityTag, bool enableRangeProcessing) Parameters virtualPath string contentType string fileDownloadName string lastModified DateTimeOffset? entityTag EntityTagHeaderValue enableRangeProcessing bool Returns VirtualFileResult"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.Forbid.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.Forbid.html",
    "title": "Method Forbid",
    "keywords": "Method Forbid Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll Forbid() [NonAction] public virtual ForbidResult Forbid() Returns ForbidResult Forbid(params string[]) [NonAction] public virtual ForbidResult Forbid(params string[] authenticationSchemes) Parameters authenticationSchemes string[] Returns ForbidResult Forbid(AuthenticationProperties) [NonAction] public virtual ForbidResult Forbid(AuthenticationProperties properties) Parameters properties AuthenticationProperties Returns ForbidResult Forbid(AuthenticationProperties, params string[]) [NonAction] public virtual ForbidResult Forbid(AuthenticationProperties properties, params string[] authenticationSchemes) Parameters properties AuthenticationProperties authenticationSchemes string[] Returns ForbidResult"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.html",
    "title": "Class ModuloControllerBase",
    "keywords": "Class ModuloControllerBase Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll [Module(AutoUpdate = true)] public class ModuloControllerBase : BaseModule, IModule, IBaseModel, IDisposable Inheritance object BaseModel BaseModule ModuloControllerBase Implements IModule IBaseModel IDisposable Derived ModuloController Inherited Members BaseModule.ToString() BaseModule.IsSingleInstance BaseModel.disposedValue BaseModel.Dispose(bool) BaseModel.Dispose() BaseModel.Version BaseModel.State BaseModel.Name BaseModel.Id BaseModel.ManifestId object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Constructors ModuloControllerBase() Properties ControllerContext HttpContext MetadataProvider ModelBinderFactory ModelState ObjectValidator Request Response RouteData Url User Methods Accepted() Accepted(object?) Accepted(string) Accepted(string, object?) Accepted(Uri) Accepted(Uri, object?) AcceptedAtAction(string) AcceptedAtAction(string, object?) AcceptedAtAction(string, object, object?) AcceptedAtAction(string, string) AcceptedAtAction(string, string?, object?) AcceptedAtAction(string, string?, object?, object?) AcceptedAtRoute(object?) AcceptedAtRoute(object, object?) AcceptedAtRoute(string) AcceptedAtRoute(string, object) AcceptedAtRoute(string?, object?, object?) BadRequest() BadRequest(ModelStateDictionary) BadRequest(object?) Challenge() Challenge(AuthenticationProperties) Challenge(AuthenticationProperties, params string[]) Challenge(params string[]) Conflict() Conflict(ModelStateDictionary) Conflict(object?) Content(string) Content(string, MediaTypeHeaderValue) Content(string, string) Content(string, string, Encoding) Created(string, object?) Created(Uri, object?) CreatedAtAction(string, object?) CreatedAtAction(string, object, object?) CreatedAtAction(string, string, object, object?) CreatedAtRoute(object, object?) CreatedAtRoute(string, object?) CreatedAtRoute(string, object, object?) File(byte[], string) File(byte[], string, bool) File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) File(byte[], string, string) File(byte[], string, string, bool) File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) File(Stream, string) File(Stream, string, bool) File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) File(Stream, string, string) File(Stream, string, string, bool) File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) File(string, string) File(string, string, bool) File(string, string, DateTimeOffset?, EntityTagHeaderValue) File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) File(string, string, string) File(string, string, string, bool) File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) Forbid() Forbid(AuthenticationProperties) Forbid(AuthenticationProperties, params string[]) Forbid(params string[]) LocalRedirect(string) LocalRedirectPermanent(string) LocalRedirectPermanentPreserveMethod(string) LocalRedirectPreserveMethod(string) NoContent() NotFound() NotFound(object?) Ok() Ok(object?) PhysicalFile(string, string) PhysicalFile(string, string, bool) PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) PhysicalFile(string, string, string) PhysicalFile(string, string, string, bool) PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) Redirect(string) RedirectPermanent(string) RedirectPermanentPreserveMethod(string) RedirectPreserveMethod(string) RedirectToAction() RedirectToAction(string) RedirectToAction(string, object) RedirectToAction(string, string) RedirectToAction(string, string, object) RedirectToAction(string, string, object, string) RedirectToAction(string, string, string) RedirectToActionPermanent(string) RedirectToActionPermanent(string, object) RedirectToActionPermanent(string, string) RedirectToActionPermanent(string, string, object) RedirectToActionPermanent(string, string, object, string) RedirectToActionPermanent(string, string, string) RedirectToActionPermanentPreserveMethod(string, string, object, string) RedirectToActionPreserveMethod(string, string, object, string) RedirectToPage(string) RedirectToPage(string, object) RedirectToPage(string, string) RedirectToPage(string, string, object) RedirectToPage(string, string, object, string) RedirectToPage(string, string, string) RedirectToPagePermanent(string) RedirectToPagePermanent(string, object) RedirectToPagePermanent(string, string) RedirectToPagePermanent(string, string, object, string) RedirectToPagePermanent(string, string, string) RedirectToPagePermanentPreserveMethod(string, string, object, string) RedirectToPagePreserveMethod(string, string, object, string) RedirectToRoute(object) RedirectToRoute(string) RedirectToRoute(string, object) RedirectToRoute(string, object, string) RedirectToRoute(string, string) RedirectToRoutePermanent(object) RedirectToRoutePermanent(string) RedirectToRoutePermanent(string, object) RedirectToRoutePermanent(string, object, string) RedirectToRoutePermanent(string, string) RedirectToRoutePermanentPreserveMethod(string, object, string) RedirectToRoutePreserveMethod(string, object, string) SignIn(ClaimsPrincipal, AuthenticationProperties, string) SignIn(ClaimsPrincipal, string) SignOut(AuthenticationProperties, params string[]) SignOut(params string[]) StatusCode(int) StatusCode(int, object?) TryUpdateModelAsync(object, Type, string) TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) TryUpdateModelAsync<TModel>(TModel) TryUpdateModelAsync<TModel>(TModel, string) TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) TryValidateModel(object) TryValidateModel(object, string?) Unauthorized() Unauthorized(object?) UnprocessableEntity() UnprocessableEntity(ModelStateDictionary) UnprocessableEntity(object?) ValidationProblem() ValidationProblem(ModelStateDictionary) ValidationProblem(ValidationProblemDetails)"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.HttpContext.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.HttpContext.html",
    "title": "Property HttpContext",
    "keywords": "Property HttpContext Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll HttpContext public HttpContext HttpContext { get; } Property Value HttpContext"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.LocalRedirect.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.LocalRedirect.html",
    "title": "Method LocalRedirect",
    "keywords": "Method LocalRedirect Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll LocalRedirect(string) [NonAction] public virtual LocalRedirectResult LocalRedirect(string localUrl) Parameters localUrl string Returns LocalRedirectResult"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.LocalRedirectPermanent.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.LocalRedirectPermanent.html",
    "title": "Method LocalRedirectPermanent",
    "keywords": "Method LocalRedirectPermanent Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll LocalRedirectPermanent(string) [NonAction] public virtual LocalRedirectResult LocalRedirectPermanent(string localUrl) Parameters localUrl string Returns LocalRedirectResult"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.LocalRedirectPermanentPreserveMethod.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.LocalRedirectPermanentPreserveMethod.html",
    "title": "Method LocalRedirectPermanentPreserveMethod",
    "keywords": "Method LocalRedirectPermanentPreserveMethod Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll LocalRedirectPermanentPreserveMethod(string) [NonAction] public virtual LocalRedirectResult LocalRedirectPermanentPreserveMethod(string localUrl) Parameters localUrl string Returns LocalRedirectResult"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.LocalRedirectPreserveMethod.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.LocalRedirectPreserveMethod.html",
    "title": "Method LocalRedirectPreserveMethod",
    "keywords": "Method LocalRedirectPreserveMethod Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll LocalRedirectPreserveMethod(string) [NonAction] public virtual LocalRedirectResult LocalRedirectPreserveMethod(string localUrl) Parameters localUrl string Returns LocalRedirectResult"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.MetadataProvider.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.MetadataProvider.html",
    "title": "Property MetadataProvider",
    "keywords": "Property MetadataProvider Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll MetadataProvider public IModelMetadataProvider? MetadataProvider { get; set; } Property Value IModelMetadataProvider"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.ModelBinderFactory.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.ModelBinderFactory.html",
    "title": "Property ModelBinderFactory",
    "keywords": "Property ModelBinderFactory Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll ModelBinderFactory public IModelBinderFactory? ModelBinderFactory { get; set; } Property Value IModelBinderFactory"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.ModelState.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.ModelState.html",
    "title": "Property ModelState",
    "keywords": "Property ModelState Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll ModelState public ModelStateDictionary ModelState { get; } Property Value ModelStateDictionary"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.NoContent.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.NoContent.html",
    "title": "Method NoContent",
    "keywords": "Method NoContent Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll NoContent() [NonAction] public virtual NoContentResult NoContent() Returns NoContentResult"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.NotFound.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.NotFound.html",
    "title": "Method NotFound",
    "keywords": "Method NotFound Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll NotFound() [NonAction] public virtual NotFoundResult NotFound() Returns NotFoundResult NotFound(object?) [NonAction] public virtual NotFoundObjectResult NotFound(object? value) Parameters value object Returns NotFoundObjectResult"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.ObjectValidator.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.ObjectValidator.html",
    "title": "Property ObjectValidator",
    "keywords": "Property ObjectValidator Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll ObjectValidator public IObjectModelValidator? ObjectValidator { get; set; } Property Value IObjectModelValidator"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.Ok.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.Ok.html",
    "title": "Method Ok",
    "keywords": "Method Ok Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll Ok() [NonAction] public virtual OkResult Ok() Returns OkResult Ok(object?) [NonAction] public virtual OkObjectResult Ok(object? value) Parameters value object Returns OkObjectResult"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.PhysicalFile.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.PhysicalFile.html",
    "title": "Method PhysicalFile",
    "keywords": "Method PhysicalFile Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll PhysicalFile(string, string) [NonAction] public virtual PhysicalFileResult PhysicalFile(string physicalPath, string contentType) Parameters physicalPath string contentType string Returns PhysicalFileResult PhysicalFile(string, string, bool) [NonAction] public virtual PhysicalFileResult PhysicalFile(string physicalPath, string contentType, bool enableRangeProcessing) Parameters physicalPath string contentType string enableRangeProcessing bool Returns PhysicalFileResult PhysicalFile(string, string, string) [NonAction] public virtual PhysicalFileResult PhysicalFile(string physicalPath, string contentType, string fileDownloadName) Parameters physicalPath string contentType string fileDownloadName string Returns PhysicalFileResult PhysicalFile(string, string, string, bool) [NonAction] public virtual PhysicalFileResult PhysicalFile(string physicalPath, string contentType, string fileDownloadName, bool enableRangeProcessing) Parameters physicalPath string contentType string fileDownloadName string enableRangeProcessing bool Returns PhysicalFileResult PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) [NonAction] public virtual PhysicalFileResult PhysicalFile(string physicalPath, string contentType, DateTimeOffset? lastModified, EntityTagHeaderValue entityTag) Parameters physicalPath string contentType string lastModified DateTimeOffset? entityTag EntityTagHeaderValue Returns PhysicalFileResult PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) [NonAction] public virtual PhysicalFileResult PhysicalFile(string physicalPath, string contentType, DateTimeOffset? lastModified, EntityTagHeaderValue entityTag, bool enableRangeProcessing) Parameters physicalPath string contentType string lastModified DateTimeOffset? entityTag EntityTagHeaderValue enableRangeProcessing bool Returns PhysicalFileResult PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) [NonAction] public virtual PhysicalFileResult PhysicalFile(string physicalPath, string contentType, string fileDownloadName, DateTimeOffset? lastModified, EntityTagHeaderValue entityTag) Parameters physicalPath string contentType string fileDownloadName string lastModified DateTimeOffset? entityTag EntityTagHeaderValue Returns PhysicalFileResult PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) [NonAction] public virtual PhysicalFileResult PhysicalFile(string physicalPath, string contentType, string fileDownloadName, DateTimeOffset? lastModified, EntityTagHeaderValue entityTag, bool enableRangeProcessing) Parameters physicalPath string contentType string fileDownloadName string lastModified DateTimeOffset? entityTag EntityTagHeaderValue enableRangeProcessing bool Returns PhysicalFileResult"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.Redirect.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.Redirect.html",
    "title": "Method Redirect",
    "keywords": "Method Redirect Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll Redirect(string) [NonAction] public virtual RedirectResult Redirect(string url) Parameters url string Returns RedirectResult"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.RedirectPermanent.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.RedirectPermanent.html",
    "title": "Method RedirectPermanent",
    "keywords": "Method RedirectPermanent Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll RedirectPermanent(string) [NonAction] public virtual RedirectResult RedirectPermanent(string url) Parameters url string Returns RedirectResult"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.RedirectPermanentPreserveMethod.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.RedirectPermanentPreserveMethod.html",
    "title": "Method RedirectPermanentPreserveMethod",
    "keywords": "Method RedirectPermanentPreserveMethod Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll RedirectPermanentPreserveMethod(string) [NonAction] public virtual RedirectResult RedirectPermanentPreserveMethod(string url) Parameters url string Returns RedirectResult"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.RedirectPreserveMethod.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.RedirectPreserveMethod.html",
    "title": "Method RedirectPreserveMethod",
    "keywords": "Method RedirectPreserveMethod Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll RedirectPreserveMethod(string) [NonAction] public virtual RedirectResult RedirectPreserveMethod(string url) Parameters url string Returns RedirectResult"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.RedirectToAction.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.RedirectToAction.html",
    "title": "Method RedirectToAction",
    "keywords": "Method RedirectToAction Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll RedirectToAction() [NonAction] public virtual RedirectToActionResult RedirectToAction() Returns RedirectToActionResult RedirectToAction(string) [NonAction] public virtual RedirectToActionResult RedirectToAction(string actionName) Parameters actionName string Returns RedirectToActionResult RedirectToAction(string, object) [NonAction] public virtual RedirectToActionResult RedirectToAction(string actionName, object routeValues) Parameters actionName string routeValues object Returns RedirectToActionResult RedirectToAction(string, string) [NonAction] public virtual RedirectToActionResult RedirectToAction(string actionName, string controllerName) Parameters actionName string controllerName string Returns RedirectToActionResult RedirectToAction(string, string, object) [NonAction] public virtual RedirectToActionResult RedirectToAction(string actionName, string controllerName, object routeValues) Parameters actionName string controllerName string routeValues object Returns RedirectToActionResult RedirectToAction(string, string, string) [NonAction] public virtual RedirectToActionResult RedirectToAction(string actionName, string controllerName, string fragment) Parameters actionName string controllerName string fragment string Returns RedirectToActionResult RedirectToAction(string, string, object, string) [NonAction] public virtual RedirectToActionResult RedirectToAction(string actionName, string controllerName, object routeValues, string fragment) Parameters actionName string controllerName string routeValues object fragment string Returns RedirectToActionResult"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.RedirectToActionPermanent.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.RedirectToActionPermanent.html",
    "title": "Method RedirectToActionPermanent",
    "keywords": "Method RedirectToActionPermanent Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll RedirectToActionPermanent(string) [NonAction] public virtual RedirectToActionResult RedirectToActionPermanent(string actionName) Parameters actionName string Returns RedirectToActionResult RedirectToActionPermanent(string, object) [NonAction] public virtual RedirectToActionResult RedirectToActionPermanent(string actionName, object routeValues) Parameters actionName string routeValues object Returns RedirectToActionResult RedirectToActionPermanent(string, string) [NonAction] public virtual RedirectToActionResult RedirectToActionPermanent(string actionName, string controllerName) Parameters actionName string controllerName string Returns RedirectToActionResult RedirectToActionPermanent(string, string, string) [NonAction] public virtual RedirectToActionResult RedirectToActionPermanent(string actionName, string controllerName, string fragment) Parameters actionName string controllerName string fragment string Returns RedirectToActionResult RedirectToActionPermanent(string, string, object) [NonAction] public virtual RedirectToActionResult RedirectToActionPermanent(string actionName, string controllerName, object routeValues) Parameters actionName string controllerName string routeValues object Returns RedirectToActionResult RedirectToActionPermanent(string, string, object, string) [NonAction] public virtual RedirectToActionResult RedirectToActionPermanent(string actionName, string controllerName, object routeValues, string fragment) Parameters actionName string controllerName string routeValues object fragment string Returns RedirectToActionResult"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.RedirectToActionPermanentPreserveMethod.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.RedirectToActionPermanentPreserveMethod.html",
    "title": "Method RedirectToActionPermanentPreserveMethod",
    "keywords": "Method RedirectToActionPermanentPreserveMethod Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll RedirectToActionPermanentPreserveMethod(string, string, object, string) [NonAction] public virtual RedirectToActionResult RedirectToActionPermanentPreserveMethod(string actionName = null, string controllerName = null, object routeValues = null, string fragment = null) Parameters actionName string controllerName string routeValues object fragment string Returns RedirectToActionResult"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.RedirectToActionPreserveMethod.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.RedirectToActionPreserveMethod.html",
    "title": "Method RedirectToActionPreserveMethod",
    "keywords": "Method RedirectToActionPreserveMethod Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll RedirectToActionPreserveMethod(string, string, object, string) [NonAction] public virtual RedirectToActionResult RedirectToActionPreserveMethod(string actionName = null, string controllerName = null, object routeValues = null, string fragment = null) Parameters actionName string controllerName string routeValues object fragment string Returns RedirectToActionResult"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.RedirectToPage.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.RedirectToPage.html",
    "title": "Method RedirectToPage",
    "keywords": "Method RedirectToPage Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll RedirectToPage(string) [NonAction] public virtual RedirectToPageResult RedirectToPage(string pageName) Parameters pageName string Returns RedirectToPageResult RedirectToPage(string, object) [NonAction] public virtual RedirectToPageResult RedirectToPage(string pageName, object routeValues) Parameters pageName string routeValues object Returns RedirectToPageResult RedirectToPage(string, string) [NonAction] public virtual RedirectToPageResult RedirectToPage(string pageName, string pageHandler) Parameters pageName string pageHandler string Returns RedirectToPageResult RedirectToPage(string, string, object) [NonAction] public virtual RedirectToPageResult RedirectToPage(string pageName, string pageHandler, object routeValues) Parameters pageName string pageHandler string routeValues object Returns RedirectToPageResult RedirectToPage(string, string, string) [NonAction] public virtual RedirectToPageResult RedirectToPage(string pageName, string pageHandler, string fragment) Parameters pageName string pageHandler string fragment string Returns RedirectToPageResult RedirectToPage(string, string, object, string) [NonAction] public virtual RedirectToPageResult RedirectToPage(string pageName, string pageHandler, object routeValues, string fragment) Parameters pageName string pageHandler string routeValues object fragment string Returns RedirectToPageResult"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.RedirectToPagePermanent.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.RedirectToPagePermanent.html",
    "title": "Method RedirectToPagePermanent",
    "keywords": "Method RedirectToPagePermanent Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll RedirectToPagePermanent(string) [NonAction] public virtual RedirectToPageResult RedirectToPagePermanent(string pageName) Parameters pageName string Returns RedirectToPageResult RedirectToPagePermanent(string, object) [NonAction] public virtual RedirectToPageResult RedirectToPagePermanent(string pageName, object routeValues) Parameters pageName string routeValues object Returns RedirectToPageResult RedirectToPagePermanent(string, string) [NonAction] public virtual RedirectToPageResult RedirectToPagePermanent(string pageName, string pageHandler) Parameters pageName string pageHandler string Returns RedirectToPageResult RedirectToPagePermanent(string, string, string) [NonAction] public virtual RedirectToPageResult RedirectToPagePermanent(string pageName, string pageHandler, string fragment) Parameters pageName string pageHandler string fragment string Returns RedirectToPageResult RedirectToPagePermanent(string, string, object, string) [NonAction] public virtual RedirectToPageResult RedirectToPagePermanent(string pageName, string pageHandler, object routeValues, string fragment) Parameters pageName string pageHandler string routeValues object fragment string Returns RedirectToPageResult"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.RedirectToPagePermanentPreserveMethod.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.RedirectToPagePermanentPreserveMethod.html",
    "title": "Method RedirectToPagePermanentPreserveMethod",
    "keywords": "Method RedirectToPagePermanentPreserveMethod Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll RedirectToPagePermanentPreserveMethod(string, string, object, string) [NonAction] public virtual RedirectToPageResult RedirectToPagePermanentPreserveMethod(string pageName, string pageHandler = null, object routeValues = null, string fragment = null) Parameters pageName string pageHandler string routeValues object fragment string Returns RedirectToPageResult"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.RedirectToPagePreserveMethod.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.RedirectToPagePreserveMethod.html",
    "title": "Method RedirectToPagePreserveMethod",
    "keywords": "Method RedirectToPagePreserveMethod Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll RedirectToPagePreserveMethod(string, string, object, string) [NonAction] public virtual RedirectToPageResult RedirectToPagePreserveMethod(string pageName, string pageHandler = null, object routeValues = null, string fragment = null) Parameters pageName string pageHandler string routeValues object fragment string Returns RedirectToPageResult"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.RedirectToRoute.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.RedirectToRoute.html",
    "title": "Method RedirectToRoute",
    "keywords": "Method RedirectToRoute Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll RedirectToRoute(string) [NonAction] public virtual RedirectToRouteResult RedirectToRoute(string routeName) Parameters routeName string Returns RedirectToRouteResult RedirectToRoute(object) [NonAction] public virtual RedirectToRouteResult RedirectToRoute(object routeValues) Parameters routeValues object Returns RedirectToRouteResult RedirectToRoute(string, object) [NonAction] public virtual RedirectToRouteResult RedirectToRoute(string routeName, object routeValues) Parameters routeName string routeValues object Returns RedirectToRouteResult RedirectToRoute(string, string) [NonAction] public virtual RedirectToRouteResult RedirectToRoute(string routeName, string fragment) Parameters routeName string fragment string Returns RedirectToRouteResult RedirectToRoute(string, object, string) [NonAction] public virtual RedirectToRouteResult RedirectToRoute(string routeName, object routeValues, string fragment) Parameters routeName string routeValues object fragment string Returns RedirectToRouteResult"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.RedirectToRoutePermanent.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.RedirectToRoutePermanent.html",
    "title": "Method RedirectToRoutePermanent",
    "keywords": "Method RedirectToRoutePermanent Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll RedirectToRoutePermanent(string) [NonAction] public virtual RedirectToRouteResult RedirectToRoutePermanent(string routeName) Parameters routeName string Returns RedirectToRouteResult RedirectToRoutePermanent(object) [NonAction] public virtual RedirectToRouteResult RedirectToRoutePermanent(object routeValues) Parameters routeValues object Returns RedirectToRouteResult RedirectToRoutePermanent(string, object) [NonAction] public virtual RedirectToRouteResult RedirectToRoutePermanent(string routeName, object routeValues) Parameters routeName string routeValues object Returns RedirectToRouteResult RedirectToRoutePermanent(string, string) [NonAction] public virtual RedirectToRouteResult RedirectToRoutePermanent(string routeName, string fragment) Parameters routeName string fragment string Returns RedirectToRouteResult RedirectToRoutePermanent(string, object, string) [NonAction] public virtual RedirectToRouteResult RedirectToRoutePermanent(string routeName, object routeValues, string fragment) Parameters routeName string routeValues object fragment string Returns RedirectToRouteResult"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.RedirectToRoutePermanentPreserveMethod.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.RedirectToRoutePermanentPreserveMethod.html",
    "title": "Method RedirectToRoutePermanentPreserveMethod",
    "keywords": "Method RedirectToRoutePermanentPreserveMethod Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll RedirectToRoutePermanentPreserveMethod(string, object, string) [NonAction] public virtual RedirectToRouteResult RedirectToRoutePermanentPreserveMethod(string routeName = null, object routeValues = null, string fragment = null) Parameters routeName string routeValues object fragment string Returns RedirectToRouteResult"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.RedirectToRoutePreserveMethod.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.RedirectToRoutePreserveMethod.html",
    "title": "Method RedirectToRoutePreserveMethod",
    "keywords": "Method RedirectToRoutePreserveMethod Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll RedirectToRoutePreserveMethod(string, object, string) [NonAction] public virtual RedirectToRouteResult RedirectToRoutePreserveMethod(string routeName = null, object routeValues = null, string fragment = null) Parameters routeName string routeValues object fragment string Returns RedirectToRouteResult"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.Request.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.Request.html",
    "title": "Property Request",
    "keywords": "Property Request Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll Request public HttpRequest Request { get; } Property Value HttpRequest"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.Response.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.Response.html",
    "title": "Property Response",
    "keywords": "Property Response Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll Response public HttpResponse Response { get; } Property Value HttpResponse"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.RouteData.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.RouteData.html",
    "title": "Property RouteData",
    "keywords": "Property RouteData Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll RouteData public RouteData RouteData { get; } Property Value RouteData"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.SignIn.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.SignIn.html",
    "title": "Method SignIn",
    "keywords": "Method SignIn Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll SignIn(ClaimsPrincipal, string) [NonAction] public virtual SignInResult SignIn(ClaimsPrincipal principal, string authenticationScheme) Parameters principal ClaimsPrincipal authenticationScheme string Returns SignInResult SignIn(ClaimsPrincipal, AuthenticationProperties, string) [NonAction] public virtual SignInResult SignIn(ClaimsPrincipal principal, AuthenticationProperties properties, string authenticationScheme) Parameters principal ClaimsPrincipal properties AuthenticationProperties authenticationScheme string Returns SignInResult"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.SignOut.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.SignOut.html",
    "title": "Method SignOut",
    "keywords": "Method SignOut Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll SignOut(params string[]) [NonAction] public virtual SignOutResult SignOut(params string[] authenticationSchemes) Parameters authenticationSchemes string[] Returns SignOutResult SignOut(AuthenticationProperties, params string[]) [NonAction] public virtual SignOutResult SignOut(AuthenticationProperties properties, params string[] authenticationSchemes) Parameters properties AuthenticationProperties authenticationSchemes string[] Returns SignOutResult"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.StatusCode.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.StatusCode.html",
    "title": "Method StatusCode",
    "keywords": "Method StatusCode Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll StatusCode(int) [NonAction] public virtual StatusCodeResult StatusCode(int statusCode) Parameters statusCode int Returns StatusCodeResult StatusCode(int, object?) [NonAction] public virtual ObjectResult StatusCode(int statusCode, object? value) Parameters statusCode int value object Returns ObjectResult"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.TryUpdateModelAsync.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.TryUpdateModelAsync.html",
    "title": "Method TryUpdateModelAsync",
    "keywords": "Method TryUpdateModelAsync Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll TryUpdateModelAsync<TModel>(TModel) [NonAction] public virtual Task<bool> TryUpdateModelAsync<TModel>(TModel model) where TModel : class Parameters model TModel Returns Task<bool> Type Parameters TModel TryUpdateModelAsync<TModel>(TModel, string) [NonAction] public virtual Task<bool> TryUpdateModelAsync<TModel>(TModel model, string prefix) where TModel : class Parameters model TModel prefix string Returns Task<bool> Type Parameters TModel TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) [NonAction] public virtual Task<bool> TryUpdateModelAsync<TModel>(TModel model, string prefix, IValueProvider valueProvider) where TModel : class Parameters model TModel prefix string valueProvider IValueProvider Returns Task<bool> Type Parameters TModel TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) [NonAction] public Task<bool> TryUpdateModelAsync<TModel>(TModel model, string prefix, params Expression<Func<TModel, object>>[] includeExpressions) where TModel : class Parameters model TModel prefix string includeExpressions Expression<Func<TModel, object>>[] Returns Task<bool> Type Parameters TModel TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) [NonAction] public Task<bool> TryUpdateModelAsync<TModel>(TModel model, string prefix, Func<ModelMetadata, bool> propertyFilter) where TModel : class Parameters model TModel prefix string propertyFilter Func<ModelMetadata, bool> Returns Task<bool> Type Parameters TModel TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) [NonAction] public Task<bool> TryUpdateModelAsync<TModel>(TModel model, string prefix, IValueProvider valueProvider, params Expression<Func<TModel, object>>[] includeExpressions) where TModel : class Parameters model TModel prefix string valueProvider IValueProvider includeExpressions Expression<Func<TModel, object>>[] Returns Task<bool> Type Parameters TModel TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) [NonAction] public Task<bool> TryUpdateModelAsync<TModel>(TModel model, string prefix, IValueProvider valueProvider, Func<ModelMetadata, bool> propertyFilter) where TModel : class Parameters model TModel prefix string valueProvider IValueProvider propertyFilter Func<ModelMetadata, bool> Returns Task<bool> Type Parameters TModel TryUpdateModelAsync(object, Type, string) [NonAction] public virtual Task<bool> TryUpdateModelAsync(object model, Type modelType, string prefix) Parameters model object modelType Type prefix string Returns Task<bool> TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) [NonAction] public Task<bool> TryUpdateModelAsync(object model, Type modelType, string prefix, IValueProvider valueProvider, Func<ModelMetadata, bool> propertyFilter) Parameters model object modelType Type prefix string valueProvider IValueProvider propertyFilter Func<ModelMetadata, bool> Returns Task<bool>"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.TryValidateModel.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.TryValidateModel.html",
    "title": "Method TryValidateModel",
    "keywords": "Method TryValidateModel Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll TryValidateModel(object) [NonAction] public virtual bool TryValidateModel(object model) Parameters model object Returns bool TryValidateModel(object, string?) [NonAction] public virtual bool TryValidateModel(object model, string? prefix) Parameters model object prefix string Returns bool"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.Unauthorized.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.Unauthorized.html",
    "title": "Method Unauthorized",
    "keywords": "Method Unauthorized Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll Unauthorized() [NonAction] public virtual UnauthorizedResult Unauthorized() Returns UnauthorizedResult Unauthorized(object?) [NonAction] public virtual UnauthorizedObjectResult Unauthorized(object? value) Parameters value object Returns UnauthorizedObjectResult"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.UnprocessableEntity.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.UnprocessableEntity.html",
    "title": "Method UnprocessableEntity",
    "keywords": "Method UnprocessableEntity Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll UnprocessableEntity() [NonAction] public virtual UnprocessableEntityResult UnprocessableEntity() Returns UnprocessableEntityResult UnprocessableEntity(object?) [NonAction] public virtual UnprocessableEntityObjectResult UnprocessableEntity(object? error) Parameters error object Returns UnprocessableEntityObjectResult UnprocessableEntity(ModelStateDictionary) [NonAction] public virtual UnprocessableEntityObjectResult UnprocessableEntity(ModelStateDictionary modelState) Parameters modelState ModelStateDictionary Returns UnprocessableEntityObjectResult"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.Url.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.Url.html",
    "title": "Property Url",
    "keywords": "Property Url Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll Url public IUrlHelper? Url { get; set; } Property Value IUrlHelper"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.User.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.User.html",
    "title": "Property User",
    "keywords": "Property User Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll User public ClaimsPrincipal User { get; } Property Value ClaimsPrincipal"
  },
  "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.ValidationProblem.html": {
    "href": "api/Propeus.Modulo.Hosting.MS_MVC.ModuloControllerBase.ValidationProblem.html",
    "title": "Method ValidationProblem",
    "keywords": "Method ValidationProblem Namespace Propeus.Modulo.Hosting.MS_MVC Assembly Propeus.Modulo.Hosting.dll ValidationProblem(ValidationProblemDetails) [NonAction] public virtual ActionResult ValidationProblem(ValidationProblemDetails descriptor) Parameters descriptor ValidationProblemDetails Returns ActionResult ValidationProblem(ModelStateDictionary) [NonAction] public virtual ActionResult ValidationProblem(ModelStateDictionary modelStateDictionary) Parameters modelStateDictionary ModelStateDictionary Returns ActionResult ValidationProblem() [NonAction] public virtual ActionResult ValidationProblem() Returns ActionResult"
  },
  "api/Propeus.Modulo.Hosting.ViewEngine.html": {
    "href": "api/Propeus.Modulo.Hosting.ViewEngine.html",
    "title": "Namespace Propeus.Modulo.Hosting.ViewEngine",
    "keywords": "Namespace Propeus.Modulo.Hosting.ViewEngine Classes ModuloFileInfo"
  },
  "api/Propeus.Modulo.Hosting.ViewEngine.ModuloFileInfo.-ctor.html": {
    "href": "api/Propeus.Modulo.Hosting.ViewEngine.ModuloFileInfo.-ctor.html",
    "title": "Constructor ModuloFileInfo",
    "keywords": "Constructor ModuloFileInfo Namespace Propeus.Modulo.Hosting.ViewEngine Assembly Propeus.Modulo.Hosting.dll ModuloFileInfo(ModuloController, string) public ModuloFileInfo(ModuloController moduloController, string viewName) Parameters moduloController ModuloController viewName string"
  },
  "api/Propeus.Modulo.Hosting.ViewEngine.ModuloFileInfo.CreateReadStream.html": {
    "href": "api/Propeus.Modulo.Hosting.ViewEngine.ModuloFileInfo.CreateReadStream.html",
    "title": "Method CreateReadStream",
    "keywords": "Method CreateReadStream Namespace Propeus.Modulo.Hosting.ViewEngine Assembly Propeus.Modulo.Hosting.dll CreateReadStream() public Stream CreateReadStream() Returns Stream"
  },
  "api/Propeus.Modulo.Hosting.ViewEngine.ModuloFileInfo.Exists.html": {
    "href": "api/Propeus.Modulo.Hosting.ViewEngine.ModuloFileInfo.Exists.html",
    "title": "Property Exists",
    "keywords": "Property Exists Namespace Propeus.Modulo.Hosting.ViewEngine Assembly Propeus.Modulo.Hosting.dll Exists public bool Exists { get; } Property Value bool"
  },
  "api/Propeus.Modulo.Hosting.ViewEngine.ModuloFileInfo.html": {
    "href": "api/Propeus.Modulo.Hosting.ViewEngine.ModuloFileInfo.html",
    "title": "Class ModuloFileInfo",
    "keywords": "Class ModuloFileInfo Namespace Propeus.Modulo.Hosting.ViewEngine Assembly Propeus.Modulo.Hosting.dll public class ModuloFileInfo : IFileInfo Inheritance object ModuloFileInfo Implements IFileInfo Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Constructors ModuloFileInfo(ModuloController, string) Properties Exists IsDirectory LastModified Length Name PhysicalPath Methods CreateReadStream()"
  },
  "api/Propeus.Modulo.Hosting.ViewEngine.ModuloFileInfo.IsDirectory.html": {
    "href": "api/Propeus.Modulo.Hosting.ViewEngine.ModuloFileInfo.IsDirectory.html",
    "title": "Property IsDirectory",
    "keywords": "Property IsDirectory Namespace Propeus.Modulo.Hosting.ViewEngine Assembly Propeus.Modulo.Hosting.dll IsDirectory public bool IsDirectory { get; } Property Value bool"
  },
  "api/Propeus.Modulo.Hosting.ViewEngine.ModuloFileInfo.LastModified.html": {
    "href": "api/Propeus.Modulo.Hosting.ViewEngine.ModuloFileInfo.LastModified.html",
    "title": "Property LastModified",
    "keywords": "Property LastModified Namespace Propeus.Modulo.Hosting.ViewEngine Assembly Propeus.Modulo.Hosting.dll LastModified public DateTimeOffset LastModified { get; } Property Value DateTimeOffset"
  },
  "api/Propeus.Modulo.Hosting.ViewEngine.ModuloFileInfo.Length.html": {
    "href": "api/Propeus.Modulo.Hosting.ViewEngine.ModuloFileInfo.Length.html",
    "title": "Property Length",
    "keywords": "Property Length Namespace Propeus.Modulo.Hosting.ViewEngine Assembly Propeus.Modulo.Hosting.dll Length public long Length { get; } Property Value long"
  },
  "api/Propeus.Modulo.Hosting.ViewEngine.ModuloFileInfo.Name.html": {
    "href": "api/Propeus.Modulo.Hosting.ViewEngine.ModuloFileInfo.Name.html",
    "title": "Property Name",
    "keywords": "Property Name Namespace Propeus.Modulo.Hosting.ViewEngine Assembly Propeus.Modulo.Hosting.dll Name public string Name { get; } Property Value string"
  },
  "api/Propeus.Modulo.Hosting.ViewEngine.ModuloFileInfo.PhysicalPath.html": {
    "href": "api/Propeus.Modulo.Hosting.ViewEngine.ModuloFileInfo.PhysicalPath.html",
    "title": "Property PhysicalPath",
    "keywords": "Property PhysicalPath Namespace Propeus.Modulo.Hosting.ViewEngine Assembly Propeus.Modulo.Hosting.dll PhysicalPath public string PhysicalPath { get; } Property Value string"
  },
  "api/Propeus.Modulo.html": {
    "href": "api/Propeus.Modulo.html",
    "title": "Namespace Propeus.Modulo",
    "keywords": "Namespace Propeus.Modulo Namespaces Propeus.Modulo.Abstrato Propeus.Modulo.Core Propeus.Modulo.Dinamico Propeus.Modulo.Hosting Propeus.Modulo.IL Propeus.Modulo.Util Propeus.Modulo.WorkerService"
  },
  "api/Propeus.Modulo.IL.Core.Enums.html": {
    "href": "api/Propeus.Modulo.IL.Core.Enums.html",
    "title": "Namespace Propeus.Modulo.IL.Core.Enums",
    "keywords": "Namespace Propeus.Modulo.IL.Core.Enums Enums Token"
  },
  "api/Propeus.Modulo.IL.Core.Enums.Token.html": {
    "href": "api/Propeus.Modulo.IL.Core.Enums.Token.html",
    "title": "Enum Token",
    "keywords": "Enum Token Namespace Propeus.Modulo.IL.Core.Enums Assembly Propeus.Modulo.IL.Core.dll public enum Token Extension Methods Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Fields Abstrato = 9 Ansi = 17 Auto = 15 Classe = 10 EscopoPrivado = 13 Estatico = 19 Final = 5 Interno = 3 NomeEspecial = 7 NovoSlot = 6 OcutarAssinatura = 8 Privado = 0 Protegido = 2 PublicaAninhado = 18 Publico = 1 ReusoSlot = 12 RotuloNomeEspecial = 11 Selado = 16 Virtual = 4 VtableLayoutMask = 14"
  },
  "api/Propeus.Modulo.IL.Core.Geradores.html": {
    "href": "api/Propeus.Modulo.IL.Core.Geradores.html",
    "title": "Namespace Propeus.Modulo.IL.Core.Geradores",
    "keywords": "Namespace Propeus.Modulo.IL.Core.Geradores Classes ILClasseProvider"
  },
  "api/Propeus.Modulo.IL.Core.Geradores.ILClasseProvider.Acessadores.html": {
    "href": "api/Propeus.Modulo.IL.Core.Geradores.ILClasseProvider.Acessadores.html",
    "title": "Property Acessadores",
    "keywords": "Property Acessadores Namespace Propeus.Modulo.IL.Core.Geradores Assembly Propeus.Modulo.IL.Core.dll Acessadores public Token[] Acessadores { get; } Property Value Token[]"
  },
  "api/Propeus.Modulo.IL.Core.Geradores.ILClasseProvider.Atributos.html": {
    "href": "api/Propeus.Modulo.IL.Core.Geradores.ILClasseProvider.Atributos.html",
    "title": "Property Atributos",
    "keywords": "Property Atributos Namespace Propeus.Modulo.IL.Core.Geradores Assembly Propeus.Modulo.IL.Core.dll Atributos public Type[] Atributos { get; } Property Value Type[]"
  },
  "api/Propeus.Modulo.IL.Core.Geradores.ILClasseProvider.Base.html": {
    "href": "api/Propeus.Modulo.IL.Core.Geradores.ILClasseProvider.Base.html",
    "title": "Property Base",
    "keywords": "Property Base Namespace Propeus.Modulo.IL.Core.Geradores Assembly Propeus.Modulo.IL.Core.dll Base public Type Base { get; } Property Value Type"
  },
  "api/Propeus.Modulo.IL.Core.Geradores.ILClasseProvider.Dispose.html": {
    "href": "api/Propeus.Modulo.IL.Core.Geradores.ILClasseProvider.Dispose.html",
    "title": "Method Dispose",
    "keywords": "Method Dispose Namespace Propeus.Modulo.IL.Core.Geradores Assembly Propeus.Modulo.IL.Core.dll Dispose(bool) protected virtual void Dispose(bool disposing) Parameters disposing bool Dispose() public void Dispose()"
  },
  "api/Propeus.Modulo.IL.Core.Geradores.ILClasseProvider.Executado.html": {
    "href": "api/Propeus.Modulo.IL.Core.Geradores.ILClasseProvider.Executado.html",
    "title": "Property Executado",
    "keywords": "Property Executado Namespace Propeus.Modulo.IL.Core.Geradores Assembly Propeus.Modulo.IL.Core.dll Executado public bool Executado { get; } Property Value bool"
  },
  "api/Propeus.Modulo.IL.Core.Geradores.ILClasseProvider.Executar.html": {
    "href": "api/Propeus.Modulo.IL.Core.Geradores.ILClasseProvider.Executar.html",
    "title": "Method Executar",
    "keywords": "Method Executar Namespace Propeus.Modulo.IL.Core.Geradores Assembly Propeus.Modulo.IL.Core.dll Executar() public void Executar()"
  },
  "api/Propeus.Modulo.IL.Core.Geradores.ILClasseProvider.html": {
    "href": "api/Propeus.Modulo.IL.Core.Geradores.ILClasseProvider.html",
    "title": "Class ILClasseProvider",
    "keywords": "Class ILClasseProvider Namespace Propeus.Modulo.IL.Core.Geradores Assembly Propeus.Modulo.IL.Core.dll public class ILClasseProvider : IILExecutor, IDisposable Inheritance object ILClasseProvider Implements IILExecutor IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods ClasseHelpers.CriarProxyClasse(ILClasseProvider, Type, Type[]) ClasseHelpers.ObterTipoGerado(ILClasseProvider) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Properties Acessadores Atributos Base Executado Interfaces Namespace Nome Versao Methods Dispose() Dispose(bool) Executar() NovaVersao(string, Type, Type[], Token[]) ToString()"
  },
  "api/Propeus.Modulo.IL.Core.Geradores.ILClasseProvider.Interfaces.html": {
    "href": "api/Propeus.Modulo.IL.Core.Geradores.ILClasseProvider.Interfaces.html",
    "title": "Property Interfaces",
    "keywords": "Property Interfaces Namespace Propeus.Modulo.IL.Core.Geradores Assembly Propeus.Modulo.IL.Core.dll Interfaces public Type[] Interfaces { get; } Property Value Type[]"
  },
  "api/Propeus.Modulo.IL.Core.Geradores.ILClasseProvider.Namespace.html": {
    "href": "api/Propeus.Modulo.IL.Core.Geradores.ILClasseProvider.Namespace.html",
    "title": "Property Namespace",
    "keywords": "Property Namespace Namespace Propeus.Modulo.IL.Core.Geradores Assembly Propeus.Modulo.IL.Core.dll Namespace public string Namespace { get; } Property Value string"
  },
  "api/Propeus.Modulo.IL.Core.Geradores.ILClasseProvider.Nome.html": {
    "href": "api/Propeus.Modulo.IL.Core.Geradores.ILClasseProvider.Nome.html",
    "title": "Property Nome",
    "keywords": "Property Nome Namespace Propeus.Modulo.IL.Core.Geradores Assembly Propeus.Modulo.IL.Core.dll Nome public string Nome { get; } Property Value string"
  },
  "api/Propeus.Modulo.IL.Core.Geradores.ILClasseProvider.NovaVersao.html": {
    "href": "api/Propeus.Modulo.IL.Core.Geradores.ILClasseProvider.NovaVersao.html",
    "title": "Method NovaVersao",
    "keywords": "Method NovaVersao Namespace Propeus.Modulo.IL.Core.Geradores Assembly Propeus.Modulo.IL.Core.dll NovaVersao(string, Type, Type[], Token[]) public ILClasseProvider NovaVersao(string @namespace = null, Type @base = null, Type[] interfaces = null, Token[] acessadores = null) Parameters namespace string base Type interfaces Type[] acessadores Token[] Returns ILClasseProvider"
  },
  "api/Propeus.Modulo.IL.Core.Geradores.ILClasseProvider.ToString.html": {
    "href": "api/Propeus.Modulo.IL.Core.Geradores.ILClasseProvider.ToString.html",
    "title": "Method ToString",
    "keywords": "Method ToString Namespace Propeus.Modulo.IL.Core.Geradores Assembly Propeus.Modulo.IL.Core.dll ToString() public override string ToString() Returns string"
  },
  "api/Propeus.Modulo.IL.Core.Geradores.ILClasseProvider.Versao.html": {
    "href": "api/Propeus.Modulo.IL.Core.Geradores.ILClasseProvider.Versao.html",
    "title": "Property Versao",
    "keywords": "Property Versao Namespace Propeus.Modulo.IL.Core.Geradores Assembly Propeus.Modulo.IL.Core.dll Versao public int Versao { get; } Property Value int"
  },
  "api/Propeus.Modulo.IL.Core.Helpers.ClasseHelpers.CriarProxyClasse.html": {
    "href": "api/Propeus.Modulo.IL.Core.Helpers.ClasseHelpers.CriarProxyClasse.html",
    "title": "Method CriarProxyClasse",
    "keywords": "Method CriarProxyClasse Namespace Propeus.Modulo.IL.Core.Helpers Assembly Propeus.Modulo.IL.Core.dll CriarProxyClasse(ILClasseProvider, Type, Type[]) public static ILClasseProvider CriarProxyClasse(this ILClasseProvider iLGerador, Type classe, Type[] interfaces = null) Parameters iLGerador ILClasseProvider classe Type interfaces Type[] Returns ILClasseProvider CriarProxyClasse(ILModulo, Type, Type[], Type[]) public static ILClasseProvider CriarProxyClasse(this ILModulo iLGerador, Type classe, Type[] interfaces = null, Type[] atributos = null) Parameters iLGerador ILModulo classe Type interfaces Type[] atributos Type[] Returns ILClasseProvider"
  },
  "api/Propeus.Modulo.IL.Core.Helpers.ClasseHelpers.html": {
    "href": "api/Propeus.Modulo.IL.Core.Helpers.ClasseHelpers.html",
    "title": "Class ClasseHelpers",
    "keywords": "Class ClasseHelpers Namespace Propeus.Modulo.IL.Core.Helpers Assembly Propeus.Modulo.IL.Core.dll public static class ClasseHelpers Inheritance object ClasseHelpers Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods CriarProxyClasse(ILClasseProvider, Type, Type[]) CriarProxyClasse(ILModulo, Type, Type[], Type[]) ObterTipoGerado(ILClasseProvider)"
  },
  "api/Propeus.Modulo.IL.Core.Helpers.ClasseHelpers.ObterTipoGerado.html": {
    "href": "api/Propeus.Modulo.IL.Core.Helpers.ClasseHelpers.ObterTipoGerado.html",
    "title": "Method ObterTipoGerado",
    "keywords": "Method ObterTipoGerado Namespace Propeus.Modulo.IL.Core.Helpers Assembly Propeus.Modulo.IL.Core.dll ObterTipoGerado(ILClasseProvider) public static Type ObterTipoGerado(this ILClasseProvider iLClasseProvider) Parameters iLClasseProvider ILClasseProvider Returns Type"
  },
  "api/Propeus.Modulo.IL.Core.Helpers.GeradorHelper.Dispose.html": {
    "href": "api/Propeus.Modulo.IL.Core.Helpers.GeradorHelper.Dispose.html",
    "title": "Method Dispose",
    "keywords": "Method Dispose Namespace Propeus.Modulo.IL.Core.Helpers Assembly Propeus.Modulo.IL.Core.dll Dispose(ILGerador) public static void Dispose(this ILGerador iLGerador) Parameters iLGerador ILGerador Dispose(ILModulo) public static void Dispose(this ILModulo iLModulo) Parameters iLModulo ILModulo"
  },
  "api/Propeus.Modulo.IL.Core.Helpers.GeradorHelper.Gerador.html": {
    "href": "api/Propeus.Modulo.IL.Core.Helpers.GeradorHelper.Gerador.html",
    "title": "Property Gerador",
    "keywords": "Property Gerador Namespace Propeus.Modulo.IL.Core.Helpers Assembly Propeus.Modulo.IL.Core.dll Gerador public static ILGerador Gerador { get; } Property Value ILGerador"
  },
  "api/Propeus.Modulo.IL.Core.Helpers.GeradorHelper.html": {
    "href": "api/Propeus.Modulo.IL.Core.Helpers.GeradorHelper.html",
    "title": "Class GeradorHelper",
    "keywords": "Class GeradorHelper Namespace Propeus.Modulo.IL.Core.Helpers Assembly Propeus.Modulo.IL.Core.dll public static class GeradorHelper Inheritance object GeradorHelper Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties Gerador Modulo Methods Dispose(ILGerador) Dispose(ILModulo)"
  },
  "api/Propeus.Modulo.IL.Core.Helpers.GeradorHelper.Modulo.html": {
    "href": "api/Propeus.Modulo.IL.Core.Helpers.GeradorHelper.Modulo.html",
    "title": "Property Modulo",
    "keywords": "Property Modulo Namespace Propeus.Modulo.IL.Core.Helpers Assembly Propeus.Modulo.IL.Core.dll Modulo public static ILModulo Modulo { get; } Property Value ILModulo"
  },
  "api/Propeus.Modulo.IL.Core.Helpers.html": {
    "href": "api/Propeus.Modulo.IL.Core.Helpers.html",
    "title": "Namespace Propeus.Modulo.IL.Core.Helpers",
    "keywords": "Namespace Propeus.Modulo.IL.Core.Helpers Classes ClasseHelpers GeradorHelper"
  },
  "api/Propeus.Modulo.IL.Core.html": {
    "href": "api/Propeus.Modulo.IL.Core.html",
    "title": "Namespace Propeus.Modulo.IL.Core",
    "keywords": "Namespace Propeus.Modulo.IL.Core Namespaces Propeus.Modulo.IL.Core.Enums Propeus.Modulo.IL.Core.Geradores Propeus.Modulo.IL.Core.Helpers Propeus.Modulo.IL.Core.Interfaces"
  },
  "api/Propeus.Modulo.IL.Core.Interfaces.html": {
    "href": "api/Propeus.Modulo.IL.Core.Interfaces.html",
    "title": "Namespace Propeus.Modulo.IL.Core.Interfaces",
    "keywords": "Namespace Propeus.Modulo.IL.Core.Interfaces Interfaces IILExecutor"
  },
  "api/Propeus.Modulo.IL.Core.Interfaces.IILExecutor.Executar.html": {
    "href": "api/Propeus.Modulo.IL.Core.Interfaces.IILExecutor.Executar.html",
    "title": "Method Executar",
    "keywords": "Method Executar Namespace Propeus.Modulo.IL.Core.Interfaces Assembly Propeus.Modulo.IL.Core.dll Executar() void Executar()"
  },
  "api/Propeus.Modulo.IL.Core.Interfaces.IILExecutor.html": {
    "href": "api/Propeus.Modulo.IL.Core.Interfaces.IILExecutor.html",
    "title": "Interface IILExecutor",
    "keywords": "Interface IILExecutor Namespace Propeus.Modulo.IL.Core.Interfaces Assembly Propeus.Modulo.IL.Core.dll public interface IILExecutor Extension Methods Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Methods Executar()"
  },
  "api/Propeus.Modulo.IL.Geradores.html": {
    "href": "api/Propeus.Modulo.IL.Geradores.html",
    "title": "Namespace Propeus.Modulo.IL.Geradores",
    "keywords": "Namespace Propeus.Modulo.IL.Geradores Classes ILGerador ILModulo"
  },
  "api/Propeus.Modulo.IL.Geradores.ILGerador.-ctor.html": {
    "href": "api/Propeus.Modulo.IL.Geradores.ILGerador.-ctor.html",
    "title": "Constructor ILGerador",
    "keywords": "Constructor ILGerador Namespace Propeus.Modulo.IL.Geradores Assembly Propeus.Modulo.IL.Core.dll ILGerador(string) public ILGerador(string nomeAssembly = \"IL_Gerador_Assembly_\") Parameters nomeAssembly string"
  },
  "api/Propeus.Modulo.IL.Geradores.ILGerador.Dispose.html": {
    "href": "api/Propeus.Modulo.IL.Geradores.ILGerador.Dispose.html",
    "title": "Method Dispose",
    "keywords": "Method Dispose Namespace Propeus.Modulo.IL.Geradores Assembly Propeus.Modulo.IL.Core.dll Dispose(bool) protected virtual void Dispose(bool disposing) Parameters disposing bool Dispose() public void Dispose()"
  },
  "api/Propeus.Modulo.IL.Geradores.ILGerador.html": {
    "href": "api/Propeus.Modulo.IL.Geradores.ILGerador.html",
    "title": "Class ILGerador",
    "keywords": "Class ILGerador Namespace Propeus.Modulo.IL.Geradores Assembly Propeus.Modulo.IL.Core.dll public class ILGerador : IDisposable Inheritance object ILGerador Implements IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods GeradorHelper.Dispose(ILGerador) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Constructors ILGerador(string) Methods Dispose() Dispose(bool)"
  },
  "api/Propeus.Modulo.IL.Geradores.ILModulo.Dispose.html": {
    "href": "api/Propeus.Modulo.IL.Geradores.ILModulo.Dispose.html",
    "title": "Method Dispose",
    "keywords": "Method Dispose Namespace Propeus.Modulo.IL.Geradores Assembly Propeus.Modulo.IL.Core.dll Dispose(bool) protected virtual void Dispose(bool disposing) Parameters disposing bool Dispose() public void Dispose()"
  },
  "api/Propeus.Modulo.IL.Geradores.ILModulo.Executar.html": {
    "href": "api/Propeus.Modulo.IL.Geradores.ILModulo.Executar.html",
    "title": "Method Executar",
    "keywords": "Method Executar Namespace Propeus.Modulo.IL.Geradores Assembly Propeus.Modulo.IL.Core.dll Executar() public void Executar()"
  },
  "api/Propeus.Modulo.IL.Geradores.ILModulo.html": {
    "href": "api/Propeus.Modulo.IL.Geradores.ILModulo.html",
    "title": "Class ILModulo",
    "keywords": "Class ILModulo Namespace Propeus.Modulo.IL.Geradores Assembly Propeus.Modulo.IL.Core.dll public class ILModulo : IILExecutor, IDisposable Inheritance object ILModulo Implements IILExecutor IDisposable Inherited Members object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods ClasseHelpers.CriarProxyClasse(ILModulo, Type, Type[], Type[]) GeradorHelper.Dispose(ILModulo) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Methods Dispose() Dispose(bool) Executar() ToString()"
  },
  "api/Propeus.Modulo.IL.Geradores.ILModulo.ToString.html": {
    "href": "api/Propeus.Modulo.IL.Geradores.ILModulo.ToString.html",
    "title": "Method ToString",
    "keywords": "Method ToString Namespace Propeus.Modulo.IL.Geradores Assembly Propeus.Modulo.IL.Core.dll ToString() public override string ToString() Returns string"
  },
  "api/Propeus.Modulo.IL.html": {
    "href": "api/Propeus.Modulo.IL.html",
    "title": "Namespace Propeus.Modulo.IL",
    "keywords": "Namespace Propeus.Modulo.IL Namespaces Propeus.Modulo.IL.Core Propeus.Modulo.IL.Geradores"
  },
  "api/Propeus.Modulo.Util.Atributos.Helper.html": {
    "href": "api/Propeus.Modulo.Util.Atributos.Helper.html",
    "title": "Class Helper",
    "keywords": "Class Helper Namespace Propeus.Modulo.Util.Atributos Assembly Propeus.Modulo.Util.dll Classe de ajuda para Attribute public static class Helper Inheritance object Helper Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods PossuiAtributo<T>(Type) Verifica se o obj possui o atributo"
  },
  "api/Propeus.Modulo.Util.Atributos.Helper.PossuiAtributo.html": {
    "href": "api/Propeus.Modulo.Util.Atributos.Helper.PossuiAtributo.html",
    "title": "Method PossuiAtributo",
    "keywords": "Method PossuiAtributo Namespace Propeus.Modulo.Util.Atributos Assembly Propeus.Modulo.Util.dll PossuiAtributo<T>(Type) Verifica se o obj possui o atributo public static bool PossuiAtributo<T>(this Type obj) where T : Attribute Parameters obj Type Qualquer objeto do tipo Type Returns bool Type Parameters T Tipo do atributo a ser procurado Exceptions ArgumentException Argumento obj nulo"
  },
  "api/Propeus.Modulo.Util.Atributos.html": {
    "href": "api/Propeus.Modulo.Util.Atributos.html",
    "title": "Namespace Propeus.Modulo.Util.Atributos",
    "keywords": "Namespace Propeus.Modulo.Util.Atributos Classes Helper Classe de ajuda para Attribute"
  },
  "api/Propeus.Modulo.Util.html": {
    "href": "api/Propeus.Modulo.Util.html",
    "title": "Namespace Propeus.Modulo.Util",
    "keywords": "Namespace Propeus.Modulo.Util Namespaces Propeus.Modulo.Util.Atributos Propeus.Modulo.Util.Objetos Propeus.Modulo.Util.Thread Propeus.Modulo.Util.Tipos"
  },
  "api/Propeus.Modulo.Util.Objetos.Helper.html": {
    "href": "api/Propeus.Modulo.Util.Objetos.Helper.html",
    "title": "Class Helper",
    "keywords": "Class Helper Namespace Propeus.Modulo.Util.Objetos Assembly Propeus.Modulo.Util.dll Classe de ajuda para tipos variados public static class Helper Inheritance object Helper Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods IsNullable<T>(T) Verifica se o objeto informado é nulo To(object, Type) Converte qualquer objeto para o tipo desejado"
  },
  "api/Propeus.Modulo.Util.Objetos.Helper.IsNullable.html": {
    "href": "api/Propeus.Modulo.Util.Objetos.Helper.IsNullable.html",
    "title": "Method IsNullable",
    "keywords": "Method IsNullable Namespace Propeus.Modulo.Util.Objetos Assembly Propeus.Modulo.Util.dll IsNullable<T>(T) Verifica se o objeto informado é nulo public static bool IsNullable<T>(this T obj) Parameters obj T Instancia do objeto Returns bool Type Parameters T Tipo do objeto Remarks Codigo extraido de https://stackoverflow.com/questions/374651/how-to-check-if-an-object-is-nullable"
  },
  "api/Propeus.Modulo.Util.Objetos.Helper.To.html": {
    "href": "api/Propeus.Modulo.Util.Objetos.Helper.To.html",
    "title": "Method To",
    "keywords": "Method To Namespace Propeus.Modulo.Util.Objetos Assembly Propeus.Modulo.Util.dll To(object, Type) Converte qualquer objeto para o tipo desejado public static object To(this object obj, Type para) Parameters obj object Objeto a ser convertido para Type Tipo a ser convertido Returns object Exceptions ArgumentNullException Argumento nulo ArgumentException Argumento invalido OverflowException"
  },
  "api/Propeus.Modulo.Util.Objetos.html": {
    "href": "api/Propeus.Modulo.Util.Objetos.html",
    "title": "Namespace Propeus.Modulo.Util.Objetos",
    "keywords": "Namespace Propeus.Modulo.Util.Objetos Classes Helper Classe de ajuda para tipos variados"
  },
  "api/Propeus.Modulo.Util.Thread.html": {
    "href": "api/Propeus.Modulo.Util.Thread.html",
    "title": "Namespace Propeus.Modulo.Util.Thread",
    "keywords": "Namespace Propeus.Modulo.Util.Thread Classes LimitedConcurrencyLevelTaskScheduler https://docs.microsoft.com/pt-br/dotnet/api/system.threading._tasks.taskscheduler?view=netcore-3.1"
  },
  "api/Propeus.Modulo.Util.Thread.LimitedConcurrencyLevelTaskScheduler.-ctor.html": {
    "href": "api/Propeus.Modulo.Util.Thread.LimitedConcurrencyLevelTaskScheduler.-ctor.html",
    "title": "Constructor LimitedConcurrencyLevelTaskScheduler",
    "keywords": "Constructor LimitedConcurrencyLevelTaskScheduler Namespace Propeus.Modulo.Util.Thread Assembly Propeus.Modulo.Util.dll LimitedConcurrencyLevelTaskScheduler(int) Creates a new instance with the specified degree of parallelism. public LimitedConcurrencyLevelTaskScheduler(int maxDegreeOfParallelism) Parameters maxDegreeOfParallelism int"
  },
  "api/Propeus.Modulo.Util.Thread.LimitedConcurrencyLevelTaskScheduler.GetScheduledTasks.html": {
    "href": "api/Propeus.Modulo.Util.Thread.LimitedConcurrencyLevelTaskScheduler.GetScheduledTasks.html",
    "title": "Method GetScheduledTasks",
    "keywords": "Method GetScheduledTasks Namespace Propeus.Modulo.Util.Thread Assembly Propeus.Modulo.Util.dll GetScheduledTasks() Gets an enumerable of the _tasks currently scheduled on this _scheduler. protected override sealed IEnumerable<Task> GetScheduledTasks() Returns IEnumerable<Task>"
  },
  "api/Propeus.Modulo.Util.Thread.LimitedConcurrencyLevelTaskScheduler.html": {
    "href": "api/Propeus.Modulo.Util.Thread.LimitedConcurrencyLevelTaskScheduler.html",
    "title": "Class LimitedConcurrencyLevelTaskScheduler",
    "keywords": "Class LimitedConcurrencyLevelTaskScheduler Namespace Propeus.Modulo.Util.Thread Assembly Propeus.Modulo.Util.dll https://docs.microsoft.com/pt-br/dotnet/api/system.threading._tasks.taskscheduler?view=netcore-3.1 public class LimitedConcurrencyLevelTaskScheduler : TaskScheduler Inheritance object TaskScheduler LimitedConcurrencyLevelTaskScheduler Inherited Members TaskScheduler.FromCurrentSynchronizationContext() TaskScheduler.TryExecuteTask(Task) TaskScheduler.Default TaskScheduler.Current TaskScheduler.Id TaskScheduler.UnobservedTaskException object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Constructors LimitedConcurrencyLevelTaskScheduler(int) Creates a new instance with the specified degree of parallelism. Properties MaximumConcurrencyLevel Gets the maximum concurrency level supported by this _scheduler. Methods GetScheduledTasks() Gets an enumerable of the _tasks currently scheduled on this _scheduler. QueueTask(Task) Queues a task to the _scheduler. TryDequeue(Task) Attempt to remove a previously scheduled task from the _scheduler. TryExecuteTaskInline(Task, bool) Attempts to execute the specified task on the current thread."
  },
  "api/Propeus.Modulo.Util.Thread.LimitedConcurrencyLevelTaskScheduler.MaximumConcurrencyLevel.html": {
    "href": "api/Propeus.Modulo.Util.Thread.LimitedConcurrencyLevelTaskScheduler.MaximumConcurrencyLevel.html",
    "title": "Property MaximumConcurrencyLevel",
    "keywords": "Property MaximumConcurrencyLevel Namespace Propeus.Modulo.Util.Thread Assembly Propeus.Modulo.Util.dll MaximumConcurrencyLevel Gets the maximum concurrency level supported by this _scheduler. public override sealed int MaximumConcurrencyLevel { get; } Property Value int"
  },
  "api/Propeus.Modulo.Util.Thread.LimitedConcurrencyLevelTaskScheduler.QueueTask.html": {
    "href": "api/Propeus.Modulo.Util.Thread.LimitedConcurrencyLevelTaskScheduler.QueueTask.html",
    "title": "Method QueueTask",
    "keywords": "Method QueueTask Namespace Propeus.Modulo.Util.Thread Assembly Propeus.Modulo.Util.dll QueueTask(Task) Queues a task to the _scheduler. protected override sealed void QueueTask(Task task) Parameters task Task"
  },
  "api/Propeus.Modulo.Util.Thread.LimitedConcurrencyLevelTaskScheduler.TryDequeue.html": {
    "href": "api/Propeus.Modulo.Util.Thread.LimitedConcurrencyLevelTaskScheduler.TryDequeue.html",
    "title": "Method TryDequeue",
    "keywords": "Method TryDequeue Namespace Propeus.Modulo.Util.Thread Assembly Propeus.Modulo.Util.dll TryDequeue(Task) Attempt to remove a previously scheduled task from the _scheduler. protected override sealed bool TryDequeue(Task task) Parameters task Task Returns bool"
  },
  "api/Propeus.Modulo.Util.Thread.LimitedConcurrencyLevelTaskScheduler.TryExecuteTaskInline.html": {
    "href": "api/Propeus.Modulo.Util.Thread.LimitedConcurrencyLevelTaskScheduler.TryExecuteTaskInline.html",
    "title": "Method TryExecuteTaskInline",
    "keywords": "Method TryExecuteTaskInline Namespace Propeus.Modulo.Util.Thread Assembly Propeus.Modulo.Util.dll TryExecuteTaskInline(Task, bool) Attempts to execute the specified task on the current thread. protected override sealed bool TryExecuteTaskInline(Task task, bool taskWasPreviouslyQueued) Parameters task Task taskWasPreviouslyQueued bool Returns bool"
  },
  "api/Propeus.Modulo.Util.Tipos.Helper.Default.html": {
    "href": "api/Propeus.Modulo.Util.Tipos.Helper.Default.html",
    "title": "Method Default",
    "keywords": "Method Default Namespace Propeus.Modulo.Util.Tipos Assembly Propeus.Modulo.Util.dll Default(Type) Obtem o valor padrão do tipo passado no parametro type public static object Default(this Type type) Parameters type Type Returns object"
  },
  "api/Propeus.Modulo.Util.Tipos.Helper.html": {
    "href": "api/Propeus.Modulo.Util.Tipos.Helper.html",
    "title": "Class Helper",
    "keywords": "Class Helper Namespace Propeus.Modulo.Util.Tipos Assembly Propeus.Modulo.Util.dll Classe de ajuda para o tipo Type public static class Helper Inheritance object Helper Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods Default(Type) Obtem o valor padrão do tipo passado no parametro type"
  },
  "api/Propeus.Modulo.Util.Tipos.html": {
    "href": "api/Propeus.Modulo.Util.Tipos.html",
    "title": "Namespace Propeus.Modulo.Util.Tipos",
    "keywords": "Namespace Propeus.Modulo.Util.Tipos Classes Helper Classe de ajuda para o tipo Type"
  },
  "api/Propeus.Modulo.WorkerService.BackgroundServiceModulo.-ctor.html": {
    "href": "api/Propeus.Modulo.WorkerService.BackgroundServiceModulo.-ctor.html",
    "title": "Constructor BackgroundServiceModulo",
    "keywords": "Constructor BackgroundServiceModulo Namespace Propeus.Modulo.WorkerService Assembly Propeus.Modulo.WorkerService.dll BackgroundServiceModulo(bool) Inicializa um modulo protected BackgroundServiceModulo(bool instanciaUnica = false) Parameters instanciaUnica bool"
  },
  "api/Propeus.Modulo.WorkerService.BackgroundServiceModulo.CriarInstancia.html": {
    "href": "api/Propeus.Modulo.WorkerService.BackgroundServiceModulo.CriarInstancia.html",
    "title": "Method CriarInstancia",
    "keywords": "Method CriarInstancia Namespace Propeus.Modulo.WorkerService Assembly Propeus.Modulo.WorkerService.dll CriarInstancia() Inicializa o servico public void CriarInstancia()"
  },
  "api/Propeus.Modulo.WorkerService.BackgroundServiceModulo.Dispose.html": {
    "href": "api/Propeus.Modulo.WorkerService.BackgroundServiceModulo.Dispose.html",
    "title": "Method Dispose",
    "keywords": "Method Dispose Namespace Propeus.Modulo.WorkerService Assembly Propeus.Modulo.WorkerService.dll Dispose(bool) Libera os objetos deste modelo e altera o estado dele para Off protected override void Dispose(bool disposing) Parameters disposing bool Indica se deve alterar o estado do objeto para Off"
  },
  "api/Propeus.Modulo.WorkerService.BackgroundServiceModulo.ExecuteAsync.html": {
    "href": "api/Propeus.Modulo.WorkerService.BackgroundServiceModulo.ExecuteAsync.html",
    "title": "Method ExecuteAsync",
    "keywords": "Method ExecuteAsync Namespace Propeus.Modulo.WorkerService Assembly Propeus.Modulo.WorkerService.dll ExecuteAsync(CancellationToken) This method is called when the IHostedService starts. The implementation should return a task that represents the lifetime of the long running operation(s) being performed. protected abstract Task ExecuteAsync(CancellationToken stoppingToken) Parameters stoppingToken CancellationToken Triggered when StopAsync(CancellationToken) Returns Task A System.Threading.Tasks.Task that represents the long running operations. Remarks See Worker Services in .NET for implementation guidelines."
  },
  "api/Propeus.Modulo.WorkerService.BackgroundServiceModulo.ExecuteTask.html": {
    "href": "api/Propeus.Modulo.WorkerService.BackgroundServiceModulo.ExecuteTask.html",
    "title": "Property ExecuteTask",
    "keywords": "Property ExecuteTask Namespace Propeus.Modulo.WorkerService Assembly Propeus.Modulo.WorkerService.dll ExecuteTask Gets the Task that executes the background operation. public virtual Task ExecuteTask { get; } Property Value Task Remarks Will return null if the background operation hasn't started."
  },
  "api/Propeus.Modulo.WorkerService.BackgroundServiceModulo.html": {
    "href": "api/Propeus.Modulo.WorkerService.BackgroundServiceModulo.html",
    "title": "Class BackgroundServiceModulo",
    "keywords": "Class BackgroundServiceModulo Namespace Propeus.Modulo.WorkerService Assembly Propeus.Modulo.WorkerService.dll Module para inicializar um BackgroundService [Module] public abstract class BackgroundServiceModulo : BaseModule, IModule, IBaseModel, IDisposable, IHostedService Inheritance object BaseModel BaseModule BackgroundServiceModulo Implements IModule IBaseModel IDisposable IHostedService Inherited Members BaseModule.ToString() BaseModule.IsSingleInstance BaseModel.disposedValue BaseModel.Dispose() BaseModel.Version BaseModel.State BaseModel.Name BaseModel.Id BaseModel.ManifestId object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.IsNullable<T>(T) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Helper.To(object, Type) Constructors BackgroundServiceModulo(bool) Inicializa um modulo Properties ExecuteTask Gets the Task that executes the background operation. Methods CriarInstancia() Inicializa o servico Dispose(bool) Libera os objetos deste modelo e altera o estado dele para Off ExecuteAsync(CancellationToken) This method is called when the IHostedService starts. The implementation should return a task that represents the lifetime of the long running operation(s) being performed. StartAsync(CancellationToken) Triggered when the application host is ready to start the service. StopAsync(CancellationToken) Triggered when the application host is performing a graceful shutdown."
  },
  "api/Propeus.Modulo.WorkerService.BackgroundServiceModulo.StartAsync.html": {
    "href": "api/Propeus.Modulo.WorkerService.BackgroundServiceModulo.StartAsync.html",
    "title": "Method StartAsync",
    "keywords": "Method StartAsync Namespace Propeus.Modulo.WorkerService Assembly Propeus.Modulo.WorkerService.dll StartAsync(CancellationToken) Triggered when the application host is ready to start the service. public virtual Task StartAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken Indicates that the start process has been aborted. Returns Task"
  },
  "api/Propeus.Modulo.WorkerService.BackgroundServiceModulo.StopAsync.html": {
    "href": "api/Propeus.Modulo.WorkerService.BackgroundServiceModulo.StopAsync.html",
    "title": "Method StopAsync",
    "keywords": "Method StopAsync Namespace Propeus.Modulo.WorkerService Assembly Propeus.Modulo.WorkerService.dll StopAsync(CancellationToken) Triggered when the application host is performing a graceful shutdown. public virtual Task StopAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken Indicates that the shutdown process should no longer be graceful. Returns Task"
  },
  "api/Propeus.Modulo.WorkerService.Extensions.html": {
    "href": "api/Propeus.Modulo.WorkerService.Extensions.html",
    "title": "Class Extensions",
    "keywords": "Class Extensions Namespace Propeus.Modulo.WorkerService Assembly Propeus.Modulo.WorkerService.dll public static class Extensions Inheritance object Extensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods UseGerenciador(IHostBuilder, IModuleManager)"
  },
  "api/Propeus.Modulo.WorkerService.Extensions.UseGerenciador.html": {
    "href": "api/Propeus.Modulo.WorkerService.Extensions.UseGerenciador.html",
    "title": "Method UseGerenciador",
    "keywords": "Method UseGerenciador Namespace Propeus.Modulo.WorkerService Assembly Propeus.Modulo.WorkerService.dll UseGerenciador(IHostBuilder, IModuleManager) public static IHostBuilder UseGerenciador(this IHostBuilder hostBuilder, IModuleManager gerenciador) Parameters hostBuilder IHostBuilder gerenciador IModuleManager Returns IHostBuilder"
  },
  "api/Propeus.Modulo.WorkerService.html": {
    "href": "api/Propeus.Modulo.WorkerService.html",
    "title": "Namespace Propeus.Modulo.WorkerService",
    "keywords": "Namespace Propeus.Modulo.WorkerService Classes BackgroundServiceModulo Module para inicializar um BackgroundService Extensions"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here!",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE.",
    "keywords": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}